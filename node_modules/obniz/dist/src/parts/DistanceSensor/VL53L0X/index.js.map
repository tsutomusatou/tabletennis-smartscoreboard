{"version":3,"sources":["../src/parts/DistanceSensor/VL53L0X/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.VL53L0X\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\n\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\nimport { I2cPartsAbstractOptions } from \"../../i2cParts\";\n\nexport interface VL53L0XOptions extends I2cPartsAbstractOptions {}\n\nexport default class VL53L0X implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"VL53L0X\",\n    };\n  }\n\n  public requiredKeys: string[];\n  public keys: string[];\n  public params: any;\n\n  public address: number;\n  public regs: any;\n\n  public acnt: number;\n  public scnt: number;\n  public status: number;\n\n  protected obniz!: Obniz;\n  protected i2c!: PeripheralI2C;\n\n  constructor() {\n    this.requiredKeys = [];\n    this.keys = [\"vcc\", \"gnd\", \"sda\", \"scl\", \"i2c\"];\n    this.address = 0x29;\n    this.regs = {\n      IDENTIFICATION_MODEL_ID: 0xc0,\n      IDENTIFICATION_REVISION_ID: 0xc2,\n      PRE_RANGE_CONFIG_VCSEL_PERIOD: 0x50,\n      FINAL_RANGE_CONFIG_VCSEL_PERIOD: 0x70,\n      SYSRANGE_START: 0x00,\n      RESULT_INTERRUPT_STATUS: 0x13,\n      RESULT_RANGE_STATUS: 0x14,\n    };\n    this.acnt = 0;\n    this.scnt = 0;\n    this.status = 0;\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"3v\");\n    this.obniz.wait(100);\n    this.params.clock = 100000;\n    this.params.pull = \"3v\";\n    this.params.mode = \"master\";\n    this.i2c = obniz.getI2CWithConfig(this.params);\n  }\n\n  public async getWait() {\n    this.i2c.write(this.address, [this.regs.SYSRANGE_START, 0x01]);\n    let val = [0];\n    let cnt: number = 0;\n    while (cnt < 10) {\n      await this.obniz.wait(10);\n      this.i2c.write(this.address, [this.regs.RESULT_RANGE_STATUS]);\n      val = await this.i2c.readWait(this.address, 1);\n      if (val[0] & 0x01) {\n        break;\n      } else {\n        cnt++;\n      }\n    }\n    if (!(val[0] & 0x01)) {\n      return null;\n    } // sensor not ready\n\n    this.i2c.write(this.address, [0x14]);\n    const gbuf = await this.i2c.readWait(this.address, 12);\n    this.acnt = this.makeuint16(gbuf[7], gbuf[6]);\n    this.scnt = this.makeuint16(gbuf[9], gbuf[8]);\n    const dist = this.makeuint16(gbuf[11], gbuf[10]);\n    this.status = (gbuf[0] & 0x78) >> 3;\n\n    return dist;\n  }\n\n  private makeuint16(lsb: number, msb: number): number {\n    return ((msb & 0xff) << 8) | (lsb & 0xff);\n  }\n}\n"]}