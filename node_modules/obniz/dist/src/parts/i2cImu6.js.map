{"version":3,"sources":["../src/parts/i2cImu6.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAEH,0DAA+D;AAsB/D,MAA8B,eAAgB,SAAQ,kBAAQ;IAA9D;;QAuCY,aAAQ,GAAe,IAAI,CAAC;QAC5B,YAAO,GAAc,QAAQ,CAAC;QAC9B,aAAQ,GAAc,GAAG,CAAC;QAC1B,YAAO,GAAa,KAAK,CAAC;IAiJtC,CAAC;IA5JS,MAAM,CAAC,OAAO,CAAC,KAAa,EAAE,QAAoB,EAAE,QAAmB;QAC7E,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACzG,CAAC;IAEO,MAAM,CAAC,MAAM,CAAC,KAAa,EAAE,OAAkB,EAAE,OAAiB;QACxE,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IACrG,CAAC;IAmBM,KAAK,CAAC,YAAY;QACvB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEM,KAAK,CAAC,UAAU;QACrB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QACvC,MAAM,GAAG,GAAa;YACpB,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC;YAChD,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC;YACvC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;SAC5C,CAAC;QACF,IAAI,SAAS,IAAI,GAAG,EAAE;YACpB,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;SAC3B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,KAAK,CAAC,iBAAiB;QAC5B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,gBAAgB;QAC3B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,eAAe;QAC1B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;QACpC,OAAO;YACL,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;YAC/D,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;SACpD,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,oBAAoB;QAC/B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,mBAAmB;QAC9B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,kBAAkB;QAC7B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QACvC,OAAO;YACL,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;YAC/D,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;SACpD,CAAC;IACJ,CAAC;IAMM,KAAK,CAAC,oBAAoB;QAC/B,OAAO,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;IACnC,CAAC;IAEM,KAAK,CAAC,gBAAgB;QAC3B,OAAO,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAEM,KAAK,CAAC,OAAO;QAClB,OAAO,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAEM,KAAK,CAAC,cAAc;QACzB,OAAO,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,YAAY,CAAC,UAAqB;QACvC,IAAI,UAAU,IAAI,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,yCAAyC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACjH;IACH,CAAC;IAEM,WAAW,CAAC,SAAmB;QACpC,IAAI,SAAS,IAAI,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE;YAC/C,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SAC1B;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,wCAAwC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SAC/G;IACH,CAAC;IAEO,SAAS,CAAC,GAAQ;QACxB,OAAO;YACL,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;YAC/D,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;YAC/D,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;SAChE,CAAC;IACJ,CAAC;IAEO,QAAQ,CAAC,GAAQ;QACvB,OAAO;YACL,CAAC,EAAE,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;YAC5D,CAAC,EAAE,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;YAC5D,CAAC,EAAE,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;SAC7D,CAAC;IACJ,CAAC;;AA1LH,kCA2LC;AA1LC,UAAU;AACO,sBAAM,GAAG;IACxB,KAAK,EAAE;QACL,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;SACZ;QACD,EAAE,EAAE;YACF,IAAI,EAAE,OAAO;YACb,CAAC,EAAE,CAAC;YACJ,EAAE,EAAE,IAAI;SACT;KACF;IACD,IAAI,EAAE;QACJ,EAAE,EAAE;YACF,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,MAAM;YACjB,SAAS,EAAE,MAAM;SAClB;QACD,EAAE,EAAE;YACF,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,aAAa;SACnB;KACF;CACF,CAAC","file":"i2cImu6.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts\n */\n\nimport i2cParts, { I2cPartsAbstractOptions } from \"./i2cParts\";\n\nexport type accelRange = \"2g\" | \"4g\" | \"8g\" | \"16g\";\nexport type gyroRange = \"250dps\" | \"500dps\" | \"1000dps\" | \"2000dps\";\nexport type accelUnit = \"g\" | \"mg\" | \"m_s2\";\nexport type gyroUnit = \"dps\" | \"rps\";\n\nexport interface Xyz {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport interface Inertia6 {\n  accelerometer: Xyz;\n  gyroscope: Xyz;\n  compass?: Xyz;\n  temperature?: number | null;\n}\n\nexport interface I2cImu6AbstractOptions extends I2cPartsAbstractOptions {}\n\nexport default abstract class I2cImu6Abstract extends i2cParts {\n  // d/so*sf\n  protected static scales = {\n    accel: {\n      so: {\n        \"2g\": 16384, // 1 / 16384 ie. 0.061 mg / digit\n        \"4g\": 8192, //  1 / 8192 ie. 0.122 mg / digit\n        \"8g\": 4096, // 1 / 4096 ie. 0.244 mg / digit\n        \"16g\": 2048, // 1 / 2048 ie. 0.488 mg / digit\n      },\n      sf: {\n        m_s2: 9.80665,\n        g: 1,\n        mg: 1000,\n      },\n    },\n    gyro: {\n      so: {\n        \"125dps\": 262.144, // 32768/125\n        \"250dps\": 131.072, // 32768/250\n        \"500dps\": 65.536,\n        \"1000dps\": 32.768,\n        \"2000dps\": 16.384,\n      },\n      sf: {\n        dps: 1,\n        rps: 0.01745329251, // 1 rad/s is 57.295779578552 deg/s\n      },\n    },\n  };\n\n  private static _accelS(value: number, accel_so: accelRange, accel_sf: accelUnit): number {\n    return (value / I2cImu6Abstract.scales.accel.so[accel_so]) * I2cImu6Abstract.scales.accel.sf[accel_sf];\n  }\n\n  private static _gyroS(value: number, gyro_so: gyroRange, gyro_sf: gyroUnit): number {\n    return (value / I2cImu6Abstract.scales.gyro.so[gyro_so]) * I2cImu6Abstract.scales.gyro.sf[gyro_sf];\n  }\n\n  protected accel_so: accelRange = \"2g\";\n  protected gyro_so: gyroRange = \"250dps\";\n  protected accel_sf: accelUnit = \"g\";\n  protected gyro_sf: gyroUnit = \"dps\";\n\n  public abstract async whoamiWait(): Promise<number>;\n\n  public abstract calcTemp(data?: number | null): number | null;\n\n  public abstract async getAccelAdcWait(): Promise<Xyz>;\n\n  public abstract async getGyroAdcWait(): Promise<Xyz>;\n\n  public abstract async getTempAdcWait(): Promise<number>;\n\n  public abstract async getAllAdcWait(): Promise<Inertia6>;\n\n  public async getAccelWait(): Promise<Xyz> {\n    const adc = await this.getAccelAdcWait();\n    return this.calcAccel(adc);\n  }\n\n  public async getGyroWait(): Promise<Xyz> {\n    const adc = await this.getGyroAdcWait();\n    return this.calcGyro(adc);\n  }\n\n  public async getTempWait(): Promise<number | null> {\n    const adc = await this.getTempAdcWait();\n    return this.calcTemp(adc);\n  }\n\n  public async getAllWait(): Promise<Inertia6> {\n    const adc = await this.getAllAdcWait();\n    const ret: Inertia6 = {\n      accelerometer: this.calcAccel(adc.accelerometer),\n      gyroscope: this.calcGyro(adc.gyroscope),\n      temperature: this.calcTemp(adc.temperature),\n    };\n    if (\"compass\" in adc) {\n      ret.compass = adc.compass;\n    }\n    return ret;\n  }\n\n  public async getAccelArrayWait(): Promise<number[]> {\n    const obj = await this.getAccelWait();\n    return [obj.x, obj.y, obj.z];\n  }\n\n  public async getGyroArrayWait(): Promise<number[]> {\n    const obj = await this.getGyroWait();\n    return [obj.x, obj.y, obj.z];\n  }\n\n  public async getAllArrayWait(): Promise<any[]> {\n    const obj = await this.getAllWait();\n    return [\n      [obj.accelerometer.x, obj.accelerometer.y, obj.accelerometer.z],\n      [obj.gyroscope.x, obj.gyroscope.y, obj.gyroscope.z],\n    ];\n  }\n\n  public async getAccelAdcArrayWait(): Promise<number[]> {\n    const obj = await this.getAccelAdcWait();\n    return [obj.x, obj.y, obj.z];\n  }\n\n  public async getGyroAdcArrayWait(): Promise<number[]> {\n    const obj = await this.getGyroAdcWait();\n    return [obj.x, obj.y, obj.z];\n  }\n\n  public async getAllAdcArrayWait(): Promise<any[]> {\n    const obj = await this.getAllAdcWait();\n    return [\n      [obj.accelerometer.x, obj.accelerometer.y, obj.accelerometer.z],\n      [obj.gyroscope.x, obj.gyroscope.y, obj.gyroscope.z],\n    ];\n  }\n\n  public abstract setAccelRange(accel_range: accelRange): void;\n\n  public abstract setGyroRange(gyro_range: gyroRange): void;\n\n  public async getAccelerometerWait(): Promise<Xyz> {\n    return await this.getAccelWait();\n  }\n\n  public async getGyroscopeWait(): Promise<Xyz> {\n    return await this.getGyroWait();\n  }\n\n  public async getWait(): Promise<Inertia6> {\n    return await this.getAllWait();\n  }\n\n  public async getAllDataWait(): Promise<Inertia6> {\n    return await this.getAllWait();\n  }\n\n  public getAccelRange(): accelRange {\n    return this.accel_so;\n  }\n\n  public getGyroRange(): gyroRange {\n    return this.gyro_so;\n  }\n\n  public getAccelUnit(): accelUnit {\n    return this.accel_sf;\n  }\n\n  public getGyroUnit(): gyroUnit {\n    return this.gyro_sf;\n  }\n\n  public setAccelUnit(accel_unit: accelUnit): void {\n    if (accel_unit in I2cImu6Abstract.scales.accel.sf) {\n      this.accel_sf = accel_unit;\n    } else {\n      throw new Error(`Invalid accel unit. Valid values are: ${Object.keys(I2cImu6Abstract.scales.accel.sf).join()}`);\n    }\n  }\n\n  public setGyroUnit(gyro_unit: gyroUnit): void {\n    if (gyro_unit in I2cImu6Abstract.scales.gyro.sf) {\n      this.gyro_sf = gyro_unit;\n    } else {\n      throw new Error(`Invalid gyro unit. Valid values are: ${Object.keys(I2cImu6Abstract.scales.gyro.sf).join()}`);\n    }\n  }\n\n  private calcAccel(adc: Xyz): Xyz {\n    return {\n      x: I2cImu6Abstract._accelS(adc.x, this.accel_so, this.accel_sf),\n      y: I2cImu6Abstract._accelS(adc.y, this.accel_so, this.accel_sf),\n      z: I2cImu6Abstract._accelS(adc.z, this.accel_so, this.accel_sf),\n    };\n  }\n\n  private calcGyro(adc: Xyz): Xyz {\n    return {\n      x: I2cImu6Abstract._gyroS(adc.x, this.gyro_so, this.gyro_sf),\n      y: I2cImu6Abstract._gyroS(adc.y, this.gyro_so, this.gyro_sf),\n      z: I2cImu6Abstract._gyroS(adc.z, this.gyro_so, this.gyro_sf),\n    };\n  }\n}\n"]}