{"version":3,"sources":["../src/parts/M5Stack/M5StickC_JoyStick/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,aAAa,MAAM,wCAAwC,CAAC;AAEnE,OAAO,mBAAmB,EAAE,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACzF,OAAO,EAAE,uBAAuB,EAAE,MAAM,gBAAgB,CAAC;AAEzD,oBAAY,wBAAwB,GAAG,uBAAuB,CAAC;AAE/D,MAAM,CAAC,OAAO,OAAO,iBAAkB,YAAW,mBAAmB;WACrD,IAAI,IAAI,cAAc;IAM7B,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,MAAM,EAAE,GAAG,CAAC;IAEnB,SAAS,CAAC,KAAK,EAAG,KAAK,CAAC;IACxB,SAAS,CAAC,GAAG,EAAG,aAAa,CAAC;;IAOvB,KAAK,CAAC,KAAK,EAAE,KAAK;IAqBZ,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC;IAS3B,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC;IAS3B,aAAa,IAAI,OAAO,CAAC,OAAO,CAAC;cAM9B,SAAS,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;CAK/C","file":"index.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.M5StickC_JoyStick\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\n\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\nimport { I2cPartsAbstractOptions } from \"../../i2cParts\";\n\nexport type M5StickC_JoyStickOptions = I2cPartsAbstractOptions;\n\nexport default class M5StickC_JoyStick implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"M5StickC_JoyStick\",\n    };\n  }\n\n  public requiredKeys: string[];\n  public keys: string[];\n  public params: any;\n\n  protected obniz!: Obniz;\n  protected i2c!: PeripheralI2C;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"sda\", \"scl\", \"i2c\"];\n    this.requiredKeys = [];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    if (!this.obniz.isValidIO(this.params.sda) && !this.obniz.isValidIO(this.params.scl) && !this.params.i2c) {\n      if (this.obniz.hasExtraInterface(\"m5stickc_hat\")) {\n        const hatI2c = this.obniz.getExtraInterface(\"m5stickc_hat\").i2c;\n        this.params.sda = hatI2c.sda;\n        this.params.scl = hatI2c.scl;\n      } else {\n        throw new Error(\"Cannot find m5stickc hat interface. Please set param 'sda'/'scl' or 'i2c'\");\n      }\n    }\n\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.obniz.wait(100); // wait for booting of STM32F030F4\n    this.params.mode = \"master\";\n    this.params.clock = 100000;\n    this.params.pull = \"5v\";\n    this.i2c = this.obniz.getI2CWithConfig(this.params);\n  }\n\n  public async getXWait(): Promise<number> {\n    const ret = await this.getXYWait();\n    let val = ret[0];\n    if (val > 0x7f) {\n      val = val - 0x100;\n    }\n    return val;\n  }\n\n  public async getYWait(): Promise<number> {\n    const ret = await this.getXYWait();\n    let val = ret[1];\n    if (val > 0x7f) {\n      val = val - 0x100;\n    }\n    return val;\n  }\n\n  public async isPressedWait(): Promise<boolean> {\n    this.i2c.write(0x38, [0x02]);\n    const ret = await this.i2c.readWait(0x38, 3);\n    return !Boolean(ret[2]);\n  }\n\n  protected async getXYWait(): Promise<number[]> {\n    this.i2c.write(0x38, [0x02]);\n    const ret = await this.i2c.readWait(0x38, 3);\n    return ret;\n  }\n}\n"]}