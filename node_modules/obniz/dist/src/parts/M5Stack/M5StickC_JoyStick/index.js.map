{"version":3,"sources":["../src/parts/M5Stack/M5StickC_JoyStick/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.M5StickC_JoyStick\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\n\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\nimport { I2cPartsAbstractOptions } from \"../../i2cParts\";\n\nexport type M5StickC_JoyStickOptions = I2cPartsAbstractOptions;\n\nexport default class M5StickC_JoyStick implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"M5StickC_JoyStick\",\n    };\n  }\n\n  public requiredKeys: string[];\n  public keys: string[];\n  public params: any;\n\n  protected obniz!: Obniz;\n  protected i2c!: PeripheralI2C;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"sda\", \"scl\", \"i2c\"];\n    this.requiredKeys = [];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    if (!this.obniz.isValidIO(this.params.sda) && !this.obniz.isValidIO(this.params.scl) && !this.params.i2c) {\n      if (this.obniz.hasExtraInterface(\"m5stickc_hat\")) {\n        const hatI2c = this.obniz.getExtraInterface(\"m5stickc_hat\").i2c;\n        this.params.sda = hatI2c.sda;\n        this.params.scl = hatI2c.scl;\n      } else {\n        throw new Error(\"Cannot find m5stickc hat interface. Please set param 'sda'/'scl' or 'i2c'\");\n      }\n    }\n\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.obniz.wait(100); // wait for booting of STM32F030F4\n    this.params.mode = \"master\";\n    this.params.clock = 100000;\n    this.params.pull = \"5v\";\n    this.i2c = this.obniz.getI2CWithConfig(this.params);\n  }\n\n  public async getXWait(): Promise<number> {\n    const ret = await this.getXYWait();\n    let val = ret[0];\n    if (val > 0x7f) {\n      val = val - 0x100;\n    }\n    return val;\n  }\n\n  public async getYWait(): Promise<number> {\n    const ret = await this.getXYWait();\n    let val = ret[1];\n    if (val > 0x7f) {\n      val = val - 0x100;\n    }\n    return val;\n  }\n\n  public async isPressedWait(): Promise<boolean> {\n    this.i2c.write(0x38, [0x02]);\n    const ret = await this.i2c.readWait(0x38, 3);\n    return !Boolean(ret[2]);\n  }\n\n  protected async getXYWait(): Promise<number[]> {\n    this.i2c.write(0x38, [0x02]);\n    const ret = await this.i2c.readWait(0x38, 3);\n    return ret;\n  }\n}\n"]}