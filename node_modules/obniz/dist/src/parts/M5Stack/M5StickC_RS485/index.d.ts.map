{"version":3,"sources":["../src/parts/M5Stack/M5StickC_RS485/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,KAAK,MAAM,gBAAgB,CAAC;AAGnC,OAAO,mBAAmB,EAAE,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEzF,MAAM,WAAW,qBAAqB;IACpC,EAAE,EAAE,MAAM,CAAC;IACX,EAAE,EAAE,MAAM,CAAC;IACX,GAAG,CAAC,EAAE,MAAM,CAAC;IACb,GAAG,CAAC,EAAE,MAAM,CAAC;IACb,IAAI,CAAC,EAAE,MAAM,CAAC;CACf;AAED,MAAM,CAAC,OAAO,OAAO,cAAe,YAAW,mBAAmB;WAClD,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEZ,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,IAAI,CAAC;IAErD,SAAS,CAAC,KAAK,EAAG,KAAK,CAAC;IAExB,OAAO,CAAC,IAAI,CAAkB;;IAOvB,KAAK,CAAC,KAAK,EAAE,KAAK;IAoClB,IAAI,CAAC,IAAI,EAAE,GAAG;CAGtB","file":"index.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.M5StackC_RS485\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralUART from \"../../../obniz/libs/io_peripherals/uart\";\n\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface M5StickC_RS485Options {\n  tx: number;\n  rx: number;\n  gnd?: number;\n  vcc?: number;\n  baud?: number;\n}\n\nexport default class M5StickC_RS485 implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"M5StickC_RS485\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  public onreceive?: (data: any, text: string) => void;\n\n  protected obniz!: Obniz;\n\n  private uart!: PeripheralUART;\n\n  constructor() {\n    this.keys = [\"tx\", \"rx\", \"gnd\", \"vcc\", \"baud\"];\n    this.requiredKeys = [\"tx\", \"rx\"];\n  }\n\n  public wired(obniz: Obniz) {\n    if (obniz.isValidIO(this.params.gnd)) {\n      obniz.getIO(this.params.gnd).output(false);\n    }\n\n    if (obniz.isValidIO(this.params.vcc)) {\n      obniz.getIO(this.params.vcc).output(true);\n    }\n\n    this.params.baud = this.params.baud || 9600;\n\n    if (!this.obniz.isValidIO(this.params.tx) && !this.obniz.isValidIO(this.params.rx)) {\n      if (this.obniz.hasExtraInterface(\"m5stickc_hat\")) {\n        const uart = this.obniz.getExtraInterface(\"m5stickc_hat\").uart;\n        this.params.tx = uart.tx;\n        this.params.rx = uart.rx;\n      } else {\n        throw new Error(\"Cannot find m5stickc hat interface. Please set param 'tx'/'rx'\");\n      }\n    }\n\n    this.uart = obniz.getFreeUart();\n\n    this.uart.start({\n      tx: this.params.tx,\n      rx: this.params.rx,\n      baud: this.params.baud,\n    });\n\n    this.uart.onreceive = (data, text) => {\n      if (typeof this.onreceive === \"function\") {\n        this.onreceive(data, text);\n      }\n    };\n  }\n\n  public send(data: any) {\n    this.uart.send(data);\n  }\n}\n"]}