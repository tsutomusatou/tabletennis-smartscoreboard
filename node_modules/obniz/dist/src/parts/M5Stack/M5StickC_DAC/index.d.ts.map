{"version":3,"sources":["../src/parts/M5Stack/M5StickC_DAC/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,OAAO,EAAE,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAEpE,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,MAAM,WAAW,mBAAoB,SAAQ,cAAc;CAAG;AAE9D,MAAM,CAAC,OAAO,OAAO,YAAa,SAAQ,OAAO;WACjC,IAAI,IAAI,cAAc;IAM7B,KAAK,CAAC,KAAK,EAAE,KAAK;CAa1B","file":"index.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.M5StickC_DAC\n */\n\nimport MCP4725, { MCP4725Options } from \"../../DAConverter/MCP4725\";\n\nimport Obniz from \"../../../obniz\";\nimport { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface M5StickC_DACOptions extends MCP4725Options {}\n\nexport default class M5StickC_DAC extends MCP4725 {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"M5StickC_DAC\",\n    };\n  }\n\n  public wired(obniz: Obniz) {\n    if (!this.obniz.isValidIO(this.params.sda) && !this.obniz.isValidIO(this.params.scl) && !this.params.i2c) {\n      if (this.obniz.hasExtraInterface(\"m5stickc_hat\")) {\n        const hatI2c = this.obniz.getExtraInterface(\"m5stickc_hat\").i2c;\n        this.params.sda = hatI2c.sda;\n        this.params.scl = hatI2c.scl;\n      } else {\n        throw new Error(\"Cannot find m5stickc hat interface. Please set param 'sda'/'scl' or 'i2c'\");\n      }\n    }\n\n    super.wired(obniz);\n  }\n}\n"]}