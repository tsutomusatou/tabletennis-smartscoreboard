{"version":3,"sources":["../src/parts/ADConverter/hx711/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.hx711\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\nimport PeripheralSPI from \"../../../obniz/libs/io_peripherals/spi\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface Hx711Options {\n  vcc?: number;\n  gnd?: number;\n  sck: number;\n  dout: number;\n}\n\nexport default class Hx711 implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"hx711\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public _offset: any;\n  public _scale: any;\n  public obniz!: Obniz;\n  public spi!: PeripheralSPI;\n  public params: any;\n  public sck!: PeripheralIO;\n  public dout!: PeripheralIO;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"sck\", \"dout\"];\n    this.requiredKeys = [\"sck\", \"dout\"];\n    this._offset = 0;\n    this._scale = 1;\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    this.spi = obniz.getFreeSpi();\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n\n    const ioKeys: any = [\"clk\", \"dout\"];\n    for (const key of ioKeys) {\n      if (this.params[key] && !this.obniz.isValidIO(this.params[key])) {\n        throw new Error(\"spi start param '\" + key + \"' are to be valid io no\");\n      }\n    }\n    this.sck = obniz.getIO(this.params.sck);\n    this.dout = obniz.getIO(this.params.dout);\n\n    this.sck.output(true);\n    obniz.wait(500);\n  }\n\n  public async readWait() {\n    this.sck.output(false);\n\n    while (true) {\n      const val: any = await this.dout.inputWait();\n      if (val === false) {\n        break;\n      }\n    }\n    this.spi.start({\n      mode: \"master\",\n      mosi: this.params.sck,\n      miso: this.params.dout,\n      frequency: 500 * 1000,\n    });\n\n    const ret_double: any = await this.spi.writeWait([0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x80]);\n    this.spi.end(true);\n    this.sck.output(false);\n    const ret: any = [\n      this.doubleBit2singleBit(ret_double[0], ret_double[1]),\n      this.doubleBit2singleBit(ret_double[2], ret_double[3]),\n      this.doubleBit2singleBit(ret_double[4], ret_double[5]),\n    ];\n    const flag: any = (ret[0] & 0x80) === 0 ? 1 : -1;\n    return flag * (((ret[0] & 0x7f) << 16) + (ret[1] << 8) + (ret[2] << 0));\n  }\n\n  public doubleBit2singleBit(a: number, b: number) {\n    return (\n      (this.bit(a, 7) << 7) |\n      (this.bit(a, 5) << 6) |\n      (this.bit(a, 3) << 5) |\n      (this.bit(a, 1) << 4) |\n      (this.bit(b, 7) << 3) |\n      (this.bit(b, 5) << 2) |\n      (this.bit(b, 3) << 1) |\n      (this.bit(b, 1) << 0)\n    );\n  }\n\n  public bit(a: number, n: number) {\n    return a & (1 << n) ? 1 : 0;\n  }\n\n  public async readAverageWait(times: any) {\n    const results: any = [];\n    for (let i = 0; i < times; i++) {\n      results.push(await this.readWait());\n    }\n    return (\n      results.reduce((prev: any, current: any, i: any) => {\n        return prev + current;\n      }, 0) / results.length\n    );\n  }\n\n  public powerDown() {\n    this.sck.output(true);\n  }\n\n  public powerUp() {\n    this.sck.output(false);\n  }\n\n  public async zeroAdjustWait(times: number | any): Promise<void> {\n    times = parseInt(times) || 1;\n    this._offset = await this.readAverageWait(times);\n  }\n\n  public async getValueWait(times: number | any): Promise<number> {\n    times = parseInt(times) || 1;\n    const val: any = await this.readAverageWait(times);\n    return (val - this._offset) / this._scale;\n  }\n\n  public setOffset(offset: any) {\n    if (typeof offset !== \"number\") {\n      throw new Error(\"offset variable is Number\");\n    }\n    this._offset = offset;\n  }\n\n  public setScale(scale: any) {\n    if (typeof scale !== \"number\") {\n      throw new Error(\"scale variable is Number\");\n    }\n    this._scale = scale;\n  }\n}\n"]}