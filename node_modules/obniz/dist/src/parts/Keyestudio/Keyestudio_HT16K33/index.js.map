{"version":3,"sources":["../src/parts/Keyestudio/Keyestudio_HT16K33/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAIH,wFAA8F;AAI9F,MAAqB,kBAAmB,SAAQ,2BAAiB;IAAjE;;QAOU,aAAQ,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAkCxD,CAAC;IAxCQ,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,oBAAoB;SAC3B,CAAC;IACJ,CAAC;IAIM,KAAK,CAAC,KAAY;QACvB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IAEM,IAAI,CAAC,GAA6B;QACvC,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClE,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACnC,MAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACxC,MAAM,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBACjF,IAAI,UAAU,GAAG,IAAI,EAAE;oBACrB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACzC;aACF;SACF;QACD,KAAK,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;IAEM,IAAI,CAAC,IAAc;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACjB,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC3C,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;oBACtB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACzC;aACF;SACF;QACD,KAAK,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;CACF;AAzCD,qCAyCC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Keyestudio_HT16K33\n */\n\nimport Obniz from \"../../../obniz\";\nimport { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\nimport MatrixLED_HT16K33, { MatrixLED_HT16K33Options } from \"../../Display/MatrixLED_HT16K33\";\n\nexport interface Keyestudio_HT16K33Options extends MatrixLED_HT16K33Options {}\n\nexport default class Keyestudio_HT16K33 extends MatrixLED_HT16K33 {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Keyestudio_HT16K33\",\n    };\n  }\n\n  private bitArray: number[] = [7, 0, 1, 2, 3, 4, 5, 6];\n\n  public wired(obniz: Obniz) {\n    super.wired(obniz);\n    super.init(8);\n  }\n\n  public draw(ctx: CanvasRenderingContext2D) {\n    const imageData = ctx.getImageData(0, 0, this.width, this.height);\n    const data = imageData.data;\n    for (let i = 0; i < this.height; i++) {\n      this.vram[i] = 0;\n      for (let j = 0; j < this.width; j++) {\n        const pos = i * this.height * 4 + j * 4;\n        const brightness = 0.34 * data[pos] + 0.5 * data[pos + 1] + 0.16 * data[pos + 2];\n        if (brightness > 0x7f) {\n          this.vram[i] |= 0x1 << this.bitArray[j];\n        }\n      }\n    }\n    super.writeVram();\n  }\n\n  public dots(data: number[]) {\n    for (let i = 0; i < this.height; i++) {\n      this.vram[i] = 0;\n      for (let j: number = 0; j < this.width; j++) {\n        if (data[i] & (1 << j)) {\n          this.vram[i] |= 0x1 << this.bitArray[j];\n        }\n      }\n    }\n    super.writeVram();\n  }\n}\n"]}