{"version":3,"sources":["../src/parts/Keyestudio/Keyestudio_TemperatureSensor/index.ts"],"names":[],"mappings":";;AAeA,MAAqB,4BAA4B;IAiB/C;QAFQ,SAAI,GAAG,CAAC,CAAC;QAGf,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IApBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,8BAA8B;SACrC,CAAC;IACJ,CAAC;IAkBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAE1C,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAY,EAAE,EAAE;YAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,OAAO;QAClB,MAAM,OAAO,GAAQ,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,QAAQ,CAAC,IAAY,IAAG,CAAC;IAEtB,IAAI,CAAC,OAAY;QACzB,OAAO,OAAO,GAAG,GAAG,CAAC,CAAC,uCAAuC;IAC/D,CAAC;CACF;AA7CD,+CA6CC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Keyestudio_TemperatureSensor\n */\nimport Obniz from \"../../../obniz\";\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\n\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface Keyestudio_TemperatureSensorOptions {\n  vcc?: number;\n  signal: number;\n  gnd?: number;\n}\n\nexport default class Keyestudio_TemperatureSensor implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Keyestudio_TemperatureSensor\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public drive: any;\n  public params: any;\n\n  protected obniz!: Obniz;\n  protected ad!: PeripheralAD;\n\n  private temp = 0;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"signal\"];\n    this.requiredKeys = [\"signal\"];\n    this.drive = \"5v\";\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, this.drive);\n    this.ad = obniz.getAD(this.params.signal);\n\n    this.ad.start((voltage: any) => {\n      this.temp = this.calc(voltage);\n      this.onchange(this.temp);\n    });\n  }\n\n  public async getWait() {\n    const voltage: any = await this.ad.getWait();\n    this.temp = this.calc(voltage);\n    return this.temp;\n  }\n\n  public onchange(temp: number) {}\n\n  protected calc(voltage: any) {\n    return voltage * 100; // Temp(Celsius) = [AD Voltage] * 100l;\n  }\n}\n"]}