{"version":3,"sources":["../src/parts/MovementSensor/FlickHat/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.FlickHat\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface FlickHatOptions {\n  vcc?: number;\n  sda: number;\n  scl: number;\n  reset: number;\n  ts: number;\n  gnd: number;\n  led1?: number;\n  led2?: number;\n}\n\nexport type FlickHat_Direction = \"west\" | \"east\" | \"north\" | \"south\";\nexport type FlickHat_Direction2 = \"west\" | \"east\" | \"north\" | \"south\" | \"center\";\n\nexport interface FlickHat_XYZ {\n  x: number;\n  y: number;\n  z: number;\n  seq: number;\n}\n\nexport interface FlickHat_Gesture {\n  action: \"gesture\";\n  from: FlickHat_Direction;\n  to: FlickHat_Direction;\n  seq: number;\n  raw: any;\n}\n\nexport interface FlickHat_Touch {\n  action: \"touch\";\n  positions: FlickHat_Direction2[];\n  seq: number;\n  raw: any;\n}\n\nexport interface FlickHat_Tap {\n  action: \"tap\";\n  positions: FlickHat_Direction2[];\n  seq: number;\n  raw: any;\n}\n\nexport interface FlickHat_DoubleTap {\n  action: \"doubletap\";\n  positions: FlickHat_Direction2[];\n  seq: number;\n  raw: any;\n}\n\nexport interface FlickHat_AirWheel {\n  delta: number;\n  rotation: number;\n  seq: number;\n  raw: any;\n}\n\nexport default class FlickHat implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"FlickHat\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public displayIoNames: any;\n  public params: any;\n\n  public address: any;\n  public io_reset: any;\n  public io_ts: any;\n  public i2c!: PeripheralI2C;\n  public led1: any;\n  public led2: any;\n  public onfwinfo?: (fwInfo: any) => void;\n  public fwInfo: any;\n  public rotation: any;\n  public lastRotation: any;\n  public readSize: any;\n  public debugprint: any;\n  public xyz: any;\n  public onxyz?: (xyz: FlickHat_XYZ) => void;\n  public lastGesture: any;\n  public ongestureall: any;\n  public ongesture?: (gesture: FlickHat_Gesture) => void;\n  public lastTouch: any;\n  public ontouch?: (touch: FlickHat_Touch) => void;\n  public ontap?: (tap: FlickHat_Tap) => void;\n  public ondoubletap: any;\n  public onairwheel?: (airwheel: FlickHat_AirWheel) => void;\n  public statusInfo: any;\n\n  protected obniz!: Obniz;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"sda\", \"scl\", \"reset\", \"ts\", \"led1\", \"led2\"];\n    this.requiredKeys = [\"gnd\", \"sda\", \"scl\", \"reset\", \"ts\"];\n\n    this.displayIoNames = {\n      // vcc: 'vcc', //5v\n      sda: \"sda\",\n      scl: \"scl\",\n      gnd: \"gnd\",\n      reset: \"reset\",\n      ts: \"ts\",\n    };\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    this.address = 0x42;\n\n    if (this.obniz.isValidIO(this.params.vcc)) {\n      this.obniz.getIO(this.params.vcc).drive(\"5v\");\n      this.obniz.getIO(this.params.vcc).output(true);\n    }\n    this.obniz.getIO(this.params.gnd).output(false);\n\n    this.io_reset = this.obniz.getIO(this.params.reset);\n    this.io_reset.drive(\"3v\");\n\n    this.io_ts = this.obniz.getIO(this.params.ts);\n    this.io_ts.drive(\"open-drain\");\n    this.io_ts.pull(\"3v\");\n\n    this.params.mode = \"master\";\n    this.params.pull = \"3v\";\n    this.params.clock = 100 * 1000; // 100KHz\n\n    // PeripheralI2C\n    this.i2c = this.obniz.getI2CWithConfig(this.params);\n\n    if (this.obniz.isValidIO(this.params.led1)) {\n      this.led1 = this.obniz.wired(\"LED\", { anode: this.params.led1 });\n    }\n    if (this.obniz.isValidIO(this.params.led2)) {\n      this.led2 = this.obniz.wired(\"LED\", { anode: this.params.led2 });\n    }\n  }\n\n  public async start(callback: (fwInfo: any) => void): Promise<void> {\n    this.io_ts.pull(\"3v\");\n\n    this.io_reset.output(false);\n    await this.obniz.wait(50);\n    this.io_reset.output(true);\n    await this.obniz.wait(50);\n\n    this.onfwinfo = callback;\n    this.fwInfo = {\n      fwValid: 0,\n      fwInfoReceived: false,\n    };\n    this.rotation = 0;\n    this.lastRotation = 0;\n    this.readSize = 132;\n\n    await this.polling();\n    await this.obniz.wait(200);\n\n    this.i2c.write(this.address, [\n      0x10,\n      0x00,\n      0x00,\n      0xa2,\n      0xa1,\n      0x00,\n      0x00,\n      0x00,\n      0x1f,\n      0x00,\n      0x00,\n      0x00,\n      0xff,\n      0xff,\n      0xff,\n      0xff,\n    ]);\n    await this.obniz.wait(100);\n\n    this.i2c.write(this.address, [\n      0x10,\n      0x00,\n      0x00,\n      0xa2,\n      0x80,\n      0x00,\n      0x00,\n      0x00,\n      0x3f,\n      0x00,\n      0x00,\n      0x00,\n      0x3f,\n      0x00,\n      0x00,\n      0x00,\n    ]);\n  }\n\n  public _dataArray2string(data: any) {\n    let result: any = \"\";\n    for (const n of data) {\n      result += String.fromCharCode(n);\n    }\n    return result;\n  }\n\n  public async polling(timeout?: any) {\n    timeout = timeout || 3000; // default: 3s\n\n    // DataOutputConfigMask\t2byte\n    // const maskDSPStatus = 1;\n    const maskGestureInfo: any = 1 << 1;\n    const maskTouchInfo: any = 1 << 2;\n    const maskAirWheelInfo: any = 1 << 3;\n    const maskXYZPosition: any = 1 << 4;\n\n    // SystemInfo\t1byte\n    const sysPositionValid: any = 1;\n    const sysAirWheelValid: any = 1 << 1;\n    // const sysDSPRunning = 1 << 7;\n\n    const startTime: any = new Date();\n    let ts: any = true;\n    while (ts && (new Date() as any) - startTime < timeout) {\n      ts = await this.io_ts.inputWait();\n    }\n    if (!ts) {\n      this.io_ts.pull(\"0v\");\n      // await this.obniz.wait(1);\n\n      const data: any = await this.i2c.readWait(this.address, this.readSize);\n      const size: any = data[0];\n      // let flag = data[1];\n      const seq: any = data[2];\n      const msgID: any = data[3];\n\n      if (size !== 0xff && size > 0) {\n        if (this.debugprint || this.obniz.debugprint) {\n          console.log(\"flickHat: \" + data.slice(0, size).map((v: any) => \"0x\" + v.toString(16)));\n        }\n        let configmask: any;\n        let sysinfo: any;\n        let gesture: any;\n        let touch: any;\n        let airwheel: any;\n        let statusInfo: any;\n        let fwInfo: any;\n        switch (msgID) {\n          case 0x91: // sensor data output\n            configmask = data[4] | (data[5] << 8); // little endian\n            // let timestamp = data[6]; // 200hz, 8-bit counter, max ~1.25sec\n            sysinfo = data[7];\n            // let dspstatus = data.slice(8, 10);\n            gesture = data.slice(10, 14);\n            touch = data.slice(14, 18);\n            airwheel = data.slice(18, 20);\n            // let xyz = data.slice(20, 26);\n            // let noisepow = data.slice(27, 30);\n            if (gesture[0] === 255 && gesture[1] === 255 && gesture[2] === 255 && gesture[3] === 255) {\n              break;\n            }\n\n            if (configmask & maskXYZPosition && sysinfo & sysPositionValid) {\n              const xyz: any = {\n                // little endian\n                x: (data[20] | (data[21] << 8)) / 65536,\n                y: (data[22] | (data[23] << 8)) / 65536,\n                z: (data[24] | (data[25] << 8)) / 65536,\n                seq,\n              };\n              this.xyz = xyz;\n              if (typeof this.onxyz === \"function\") {\n                this.onxyz(xyz);\n              }\n            }\n\n            if (configmask & maskGestureInfo && gesture[0] > 0) {\n              this.lastGesture = gesture[0];\n              const gestures: any = [\n                [\"\", \"\", \"\"], // no gesture\n                [\"garbage\", \"\", \"\"],\n                [\"flick\", \"west\", \"east\"], // 2\n                [\"flick\", \"east\", \"west\"], // 3\n                [\"flick\", \"south\", \"north\"], // 4\n                [\"flick\", \"north\", \"south\"], // 5\n                [\"circle\", \"clockwise\", \"\"],\n                [\"circle\", \"counter-clockwise\", \"\"],\n                [\"wave\", \"x\", \"\"],\n                [\"wave\", \"y\", \"\"],\n                [\"hold\", \"\", \"\"],\n              ];\n              for (const index in gestures) {\n                if (index === gesture[0] && typeof this.ongestureall === \"function\") {\n                  this.ongestureall({\n                    action: gestures[index][0],\n                    from: gestures[index][1],\n                    to: gestures[index][2],\n                    raw: gesture,\n                    seq,\n                  });\n                }\n                if (index === gesture[0] && gestures[index][0] === \"flick\" && typeof this.ongesture === \"function\") {\n                  this.ongesture({\n                    action: \"gesture\",\n                    from: gestures[index][1],\n                    to: gestures[index][2],\n                    raw: gesture,\n                    seq,\n                  });\n                }\n              }\n            }\n\n            if (configmask & maskTouchInfo && !(touch[0] === 0 && touch[1] === 0) && touch[3] === 0) {\n              // console.log('touch: ' + touch.map(v => '0x' + v.toString(16)));\n              const touchAction: any = touch[0] | (touch[1] << 8); // little endian\n              if (touchAction === 0xffff) {\n                break;\n              }\n              // let touchCount = touch[2] * 5; // touch counter value * 5[ms]\n              const actions: any = [\n                [\"touch\", \"south\"], // 0\n                [\"touch\", \"west\"], // 1\n                [\"touch\", \"north\"], // 2\n                [\"touch\", \"east\"], // 3\n                [\"touch\", \"center\"], // 4\n                [\"tap\", \"south\"], // 5\n                [\"tap\", \"west\"], // 6\n                [\"tap\", \"north\"], // 7\n                [\"tap\", \"east\"], // 8\n                [\"tap\", \"center\"], // 9\n                [\"doubletap\", \"south\"], // 10\n                [\"doubletap\", \"west\"], // 11\n                [\"doubletap\", \"north\"], // 12\n                [\"doubletap\", \"east\"], // 13\n                [\"doubletap\", \"center\"], // 14\n              ];\n\n              const touches: any = [];\n              const taps: any = [];\n              const doubletaps: any = [];\n              this.lastTouch = touchAction;\n\n              let comp: any = 1;\n              for (const index in actions) {\n                const value: any = actions[index];\n                if (touchAction & comp) {\n                  // console.log(`touchAction:${touchAction.toString(16)}, comp:${comp.toString(16)}, index:${index}, group:${group}`);\n                  switch (value[0]) {\n                    case \"touch\":\n                      touches.push(value[1]);\n                      break;\n                    case \"tap\":\n                      taps.push(value[1]);\n                      break;\n                    case \"doubletap\":\n                      doubletaps.push(value[1]);\n                      break;\n                    default:\n                  }\n                }\n                comp <<= 1;\n              }\n\n              if (touches.length > 0 && typeof this.ontouch === \"function\") {\n                this.ontouch({\n                  action: \"touch\",\n                  positions: touches,\n                  raw: touch,\n                  seq,\n                });\n              }\n\n              if (taps.length > 0 && typeof this.ontap === \"function\") {\n                this.ontap({\n                  action: \"tap\",\n                  positions: taps,\n                  raw: touch,\n                  seq,\n                });\n              }\n\n              if (doubletaps.length > 0 && typeof this.ondoubletap === \"function\") {\n                this.ondoubletap({\n                  action: \"doubletap\",\n                  positions: doubletaps,\n                  raw: touch,\n                  seq,\n                });\n              }\n            }\n\n            if (configmask & maskAirWheelInfo && sysinfo & sysAirWheelValid) {\n              const delta: any = (airwheel[0] - this.lastRotation) / 32.0;\n              this.rotation += delta * 360.0;\n              this.rotation %= 360;\n              if (delta !== 0 && delta > -0.5 && delta < 0.5) {\n                if (typeof this.onairwheel === \"function\") {\n                  this.onairwheel({\n                    delta: delta * 360.0,\n                    rotation: this.rotation,\n                    raw: airwheel,\n                    seq,\n                  });\n                }\n              }\n              this.lastRotation = airwheel[0];\n            }\n            break;\n\n          case 0x15: // system status\n            statusInfo = {\n              msgId: data[4],\n              maxCmdSize: data[5],\n              error: data[6] | (data[7] << 8), // little endian\n            };\n            this.statusInfo = statusInfo;\n            if (this.debugprint || this.obniz.debugprint) {\n              console.log(\n                `flickHat: system status: {msgId: ${statusInfo.msgId}, maxCmdSize: ${statusInfo.maxCmdSize}, error: ${statusInfo.error}}`,\n              );\n            }\n            break;\n\n          case 0x83: // farmware information\n            fwInfo = {\n              fwValid: data[4] === 0xaa,\n              hwRev: [data[5], data[6]],\n              paramStartAddr: data[7] * 128,\n              libLoaderVer: [data[8], data[9]],\n              libLoaderPlatform: data[10],\n              fwStartAddr: data[11] * 128,\n              fwVersion: this._dataArray2string(data.slice(12, 132)).split(\"\\0\")[0],\n              fwInfoReceived: true,\n            };\n            this.fwInfo = fwInfo;\n            if (typeof this.onfwinfo === \"function\") {\n              this.onfwinfo(fwInfo);\n            }\n            this.readSize = 26;\n            break;\n\n          default:\n            console.error(\n              `unknown message: 0x${msgID.toString(16)}, data:${data\n                .slice(0, size)\n                .map((v: any) => \"0x\" + v.toString(16))}`,\n            );\n        }\n      }\n\n      this.io_ts.pull(\"3v\");\n      // await this.obniz.wait(1);\n    }\n  }\n}\n"]}