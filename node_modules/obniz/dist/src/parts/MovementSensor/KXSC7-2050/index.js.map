{"version":3,"sources":["../src/parts/MovementSensor/KXSC7-2050/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAOH,MAAqB,UAAU;IAmB7B;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACtC,CAAC;IArBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,YAAY;SACnB,CAAC;IACJ,CAAC;IAmBM,KAAK,CAAC,KAAK,CAAC,KAAU;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEvC,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,MAAM,EAAE,GAAQ,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC7C,MAAM,UAAU,GAAQ,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC;QAC3C,MAAM,WAAW,GAAQ,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACnD,MAAM,WAAW,GAAQ,UAAU,GAAG,CAAC,CAAC,CAAC,2BAA2B;QACpE,MAAM,aAAa,GAAQ,WAAW,GAAG,WAAW,CAAC,CAAC,oDAAoD;QAE1G,MAAM,IAAI,GAAQ,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,WAAW,CAAC;YACrD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,WAAW,CAAC;YACrD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,WAAW,CAAC;YACrD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AA7DD,6BA6DC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.KXSC7-2050\n */\n\nimport Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface KXSC7_2050Options {}\n\nexport default class KXSC7_2050 implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"KXSC7-2050\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public obniz!: Obniz;\n  public params: any;\n  public ad_x: any;\n  public ad_y: any;\n  public ad_z: any;\n  public gravity: any;\n  public onchangex: any;\n  public onchangey: any;\n  public onchangez: any;\n\n  constructor() {\n    this.keys = [\"x\", \"y\", \"z\", \"vcc\", \"gnd\"];\n    this.requiredKeys = [\"x\", \"y\", \"z\"];\n  }\n\n  public async wired(obniz: any) {\n    this.obniz = obniz;\n\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"3v\");\n    this.ad_x = obniz.getAD(this.params.x);\n    this.ad_y = obniz.getAD(this.params.y);\n    this.ad_z = obniz.getAD(this.params.z);\n\n    await obniz.wait(500);\n    const ad: any = obniz.getAD(this.params.vcc);\n    const pwrVoltage: any = await ad.getWait();\n    const horizontalZ: any = await this.ad_z.getWait();\n    const sensitivity: any = pwrVoltage / 5; // Set sensitivity (unit:V)\n    const offsetVoltage: any = horizontalZ - sensitivity; // Set offset voltage (Output voltage at 0g, unit:V)\n\n    const self: any = this;\n    this.ad_x.start((value: any) => {\n      self.gravity = (value - offsetVoltage) / sensitivity;\n      if (self.onchangex) {\n        self.onchangex(self.gravity);\n      }\n    });\n\n    this.ad_y.start((value: any) => {\n      self.gravity = (value - offsetVoltage) / sensitivity;\n      if (self.onchangey) {\n        self.onchangey(self.gravity);\n      }\n    });\n\n    this.ad_z.start((value: any) => {\n      self.gravity = (value - offsetVoltage) / sensitivity;\n      if (self.onchangez) {\n        self.onchangez(self.gravity);\n      }\n    });\n  }\n}\n"]}