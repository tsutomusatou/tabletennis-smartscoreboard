{"version":3,"sources":["../src/parts/MovementSensor/MPU9250/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.MPU9250\n */\n\nimport Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\nimport { Inertia6, Xyz } from \"../../i2cImu6\";\nimport AK8963, { AK8963Options } from \"../AK8963\";\nimport MPU6500, { MPU6500Options } from \"../MPU6500\";\n\nexport interface MPU9250Options extends MPU6500Options {}\n\nexport default class MPU9250 extends MPU6500 {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"MPU9250\",\n    };\n  }\n\n  public ak8963!: AK8963;\n\n  constructor() {\n    super();\n  }\n\n  public wired(obniz: Obniz) {\n    super.wired(obniz);\n    this.ak8963 = obniz.wired(\"AK8963\", { i2c: this.i2c });\n    this.write(MPU6500.commands.pwr_mgmt_1, [0x00]); // activate MPU9250\n    this.write(MPU6500.commands.int_pin_cfg, [0x02]); // activate AK8963 (bypass)\n    this.write(MPU6500.commands.config, [0x06]); // activate LPF (search datasheet_p.13)\n    this.write(MPU6500.commands.accel_config2, [0x02]); // accel LPF set.\n    // this.mpu6050 = obniz.wired(\"MPU6050\", { i2c: this.i2c });\n  }\n\n  public init() {\n    super.init();\n    // this.bypassMagnetometerWait(true);\n  }\n\n  public setConfig(accel_range: any, gyro_range: any, ADC_cycle: any) {\n    super.setConfig(accel_range, gyro_range);\n    if (ADC_cycle) {\n      this.ak8963.setConfig(ADC_cycle);\n    }\n  }\n\n  public async getAllAdcWait(): Promise<Inertia6> {\n    const data = await super.getAllAdcWait();\n    data.compass = await this.getCompassAdcWait();\n    return data;\n  }\n\n  public async getAllWait(): Promise<Inertia6> {\n    const data = await super.getAllWait();\n    data.compass = await this.getCompassWait();\n    return data;\n  }\n\n  public async getCompassWait(): Promise<Xyz> {\n    return await this.ak8963.getWait();\n  }\n\n  public async getCompassAdcWait(): Promise<Xyz> {\n    return await this.ak8963.getAdcWait();\n  }\n\n  public async getCompassArrayWait(): Promise<number[]> {\n    return await this.ak8963.getArrayWait();\n  }\n\n  public async getCompassAdcArrayWait(): Promise<number[]> {\n    return await this.ak8963.getAdcArrayWait();\n  }\n\n  public getCompassUnit() {\n    return this.ak8963.getUnit();\n  }\n\n  public getCompassRange() {\n    return this.ak8963.getRange();\n  }\n\n  public async getMagneticWait(): Promise<Xyz> {\n    return await this.getCompassWait();\n  }\n\n  public async getMagneticAdcWait(): Promise<Xyz> {\n    return await this.getCompassAdcWait();\n  }\n\n  public async getMagneticArrayWait(): Promise<number[]> {\n    return await this.getCompassArrayWait();\n  }\n\n  public async getMagneticAdcArrayWait(): Promise<number[]> {\n    return await this.getCompassAdcArrayWait();\n  }\n\n  public getMagneticUnit() {\n    return this.getCompassUnit();\n  }\n\n  public getMagneticRange() {\n    return this.getCompassRange();\n  }\n\n  private async _getAK8963Wait() {\n    const ST1 = await this.readWait(0x02, 1); // confirm magnet value readable\n    if (ST1[0] & 0x01) {\n      return await this.ak8963.getWait();\n    }\n    return {};\n  }\n}\n"]}