{"version":3,"sources":["../src/parts/Grove/Grove_3AxisAccelerometer/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Grove_3AxisAccelerometer\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralGrove from \"../../../obniz/libs/io_peripherals/grove\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\ninterface Grove_3AxisAccelerometerOptionsA {\n  gnd?: number;\n  vcc?: number;\n  sda: number;\n  scl: number;\n}\n\ninterface Grove_3AxisAccelerometerOptionsB {\n  grove: PeripheralGrove;\n}\n\nexport type Grove_3AxisAccelerometerOptions = Grove_3AxisAccelerometerOptionsA | Grove_3AxisAccelerometerOptionsB;\n\nexport default class Grove_3AxisAccelerometer implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_3AxisAccelerometer\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public ioKeys: string[];\n  public displayName = \"3axis\";\n  public displayIoNames = { sda: \"sda\", scl: \"scl\" };\n\n  public address = 0x53;\n  public regAdrs: any;\n  public constVal: any;\n  public params: any;\n\n  protected obniz!: Obniz;\n\n  private vcc?: number;\n  private gnd?: number;\n  private i2c!: PeripheralI2C;\n  private etRegisterBit: any;\n\n  constructor() {\n    this.keys = [\"gnd\", \"vcc\", \"sda\", \"scl\", \"grove\"];\n    this.requiredKeys = [];\n\n    this.ioKeys = this.keys;\n\n    this.regAdrs = {};\n    this.regAdrs.POWER_CTL = 0x2d;\n    this.regAdrs.THRESH_ACT = 0x24;\n    this.regAdrs.THRESH_INACT = 0x25;\n    this.regAdrs.TIME_INACT = 0x26;\n    this.regAdrs.ACT_INACT_CTL = 0x27;\n    this.regAdrs.TAP_AXES = 0x2a;\n    this.regAdrs.THRESH_TAP = 0x1d;\n    this.regAdrs.DUR = 0x21;\n    this.regAdrs.LATENT = 0x22;\n    this.regAdrs.WINDOW = 0x23;\n    this.regAdrs.THRESH_FF = 0x28;\n    this.regAdrs.TIME_FF = 0x29;\n    this.regAdrs.INT_MAP = 0x2f;\n    this.regAdrs.INT_ENABLE = 0x2e;\n    this.regAdrs.DATAX0 = 0x32;\n\n    this.regAdrs.INT_DATA_READY_BIT = 0x07;\n    this.regAdrs.INT_SINGLE_TAP_BIT = 0x06;\n    this.regAdrs.INT_DOUBLE_TAP_BIT = 0x05;\n    this.regAdrs.INT_ACTIVITY_BIT = 0x04;\n    this.regAdrs.INT_INACTIVITY_BIT = 0x03;\n    this.regAdrs.INT_FREE_FALL_BIT = 0x02;\n    this.regAdrs.INT_WATERMARK_BIT = 0x01;\n    this.regAdrs.INT_OVERRUNY_BIT = 0x00;\n\n    this.constVal = {};\n    this.constVal.gainX = 0.0037639;\n    this.constVal.gainY = 0.00376009;\n    this.constVal.gainZ = 0.00349265;\n    this.constVal.INT1_PIN = 0x00;\n    this.constVal.INT2_PIN = 0x01;\n  }\n\n  public async wired(obniz: any) {\n    this.obniz = obniz;\n\n    if (this.params.grove) {\n      this.i2c = this.params.grove.getI2c(400000, \"5v\");\n    } else {\n      this.vcc = this.params.vcc;\n      this.gnd = this.params.gnd;\n      this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n\n      this.params.clock = 400000;\n      this.params.mode = \"master\";\n\n      this.i2c = obniz.getI2CWithConfig(this.params);\n    }\n    this.obniz.wait(100);\n\n    // power on\n    this.i2c.write(this.address, [this.regAdrs.POWER_CTL, 0]);\n    this.i2c.write(this.address, [this.regAdrs.POWER_CTL, 16]);\n    this.i2c.write(this.address, [this.regAdrs.POWER_CTL, 8]);\n\n    this.i2c.write(this.address, [this.regAdrs.THRESH_ACT, 75]); // set activity threshold 0~255\n    this.i2c.write(this.address, [this.regAdrs.THRESH_INACT, 75]); // set inactivity threshold 0~255\n    this.i2c.write(this.address, [this.regAdrs.THRESH_INACT, 10]); // set time inactivity 0~255\n    await this.setRegisterBit(this.regAdrs.ACT_INACT_CTL, 6, 1); // setActivityX\n    await this.setRegisterBit(this.regAdrs.ACT_INACT_CTL, 5, 1); // setActivityY\n    await this.setRegisterBit(this.regAdrs.ACT_INACT_CTL, 4, 1); // setActivityZ\n    await this.setRegisterBit(this.regAdrs.ACT_INACT_CTL, 2, 1); // setInactivityX\n    await this.setRegisterBit(this.regAdrs.ACT_INACT_CTL, 1, 1); // setInactivityY\n    await this.setRegisterBit(this.regAdrs.ACT_INACT_CTL, 0, 1); // setInactivityZ\n    await this.setRegisterBit(this.regAdrs.TAP_AXES, 2, 0); // setTapDetectionOnX\n    await this.setRegisterBit(this.regAdrs.TAP_AXES, 1, 0); // setTapDetectionOnY\n    await this.setRegisterBit(this.regAdrs.TAP_AXES, 0, 1); // setTapDetectionOnZ\n\n    this.i2c.write(this.address, [this.regAdrs.THRESH_TAP, 50]); // setTapThreshold\n    this.i2c.write(this.address, [this.regAdrs.DUR, 15]); // setTapDuration\n    this.i2c.write(this.address, [this.regAdrs.LATENT, 80]); // setDoubleTapLatency\n    this.i2c.write(this.address, [this.regAdrs.WINDOW, 200]); // setDoubleTapWindow\n    this.i2c.write(this.address, [this.regAdrs.THRESH_FF, 7]); // setFreeFallThreshold\n    this.i2c.write(this.address, [this.regAdrs.TIME_FF, 45]); // setFreeFallDuration\n\n    // setInterruptMapping\n    await this.setInterruptMapping(this.regAdrs.INT_SINGLE_TAP_BIT, this.constVal.INT1_PIN);\n    await this.setInterruptMapping(this.regAdrs.INT_DOUBLE_TAP_BIT, this.constVal.INT1_PIN);\n    await this.setInterruptMapping(this.regAdrs.INT_FREE_FALL_BIT, this.constVal.INT1_PIN);\n    await this.setInterruptMapping(this.regAdrs.INT_ACTIVITY_BIT, this.constVal.INT1_PIN);\n    await this.setInterruptMapping(this.regAdrs.INT_INACTIVITY_BIT, this.constVal.INT1_PIN);\n\n    // setInterrupt\n    await this.setInterrupt(this.regAdrs.INT_SINGLE_TAP_BIT, 1);\n    await this.setInterrupt(this.regAdrs.INT_DOUBLE_TAP_BIT, 1);\n    await this.setInterrupt(this.regAdrs.INT_FREE_FALL_BIT, 1);\n    await this.setInterrupt(this.regAdrs.INT_ACTIVITY_BIT, 1);\n    await this.setInterrupt(this.regAdrs.INT_INACTIVITY_BIT, 1);\n  }\n\n  public async setRegisterBit(regAddr: any, bitPos: any, state: any) {\n    this.i2c.write(this.address, [regAddr]);\n    let b: any = await this.i2c.readWait(this.address, 1);\n    if (state) {\n      b = b | (1 << bitPos); // forces nth bit of b to be 1.  all other bits left alone.\n    } else {\n      b = b & ~(1 << bitPos); // forces nth bit of b to be 0.  all other bits left alone.\n    }\n    this.i2c.write(this.address, [b]);\n  }\n\n  public async setInterruptMapping(interruptBit: any, interruptPin: any) {\n    await this.setRegisterBit(this.regAdrs.INT_MAP, interruptBit, interruptPin);\n  }\n\n  public async setInterrupt(interruptBit: any, state: any) {\n    await this.setRegisterBit(this.regAdrs.INT_ENABLE, interruptBit, state);\n  }\n\n  public signHandling(val: number): number {\n    const sign: any = val >> 15;\n    if (sign) {\n      val = -(0xffff - val);\n    }\n    return val;\n  }\n\n  public async getRawVal(): Promise<number[]> {\n    this.i2c.write(this.address, [this.regAdrs.DATAX0]);\n    const buff: any = await this.i2c.readWait(this.address, 6);\n    const rawVal: any = [0, 0, 0];\n    rawVal[0] = this.signHandling((buff[1] << 8) | buff[0]);\n    rawVal[1] = this.signHandling((buff[3] << 8) | buff[2]);\n    rawVal[2] = this.signHandling((buff[5] << 8) | buff[4]);\n    return rawVal;\n  }\n\n  public async getWait(): Promise<number[]> {\n    const accelVal: any = [0, 0, 0];\n    const raw: any = await this.getRawVal();\n    accelVal[0] = raw[0] * this.constVal.gainX;\n    accelVal[1] = raw[1] * this.constVal.gainY;\n    accelVal[2] = raw[2] * this.constVal.gainZ;\n    return accelVal;\n  }\n}\n"]}