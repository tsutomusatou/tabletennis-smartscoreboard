{"version":3,"sources":["../src/parts/Grove/Grove_SoilMoistureSensor/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAmBH,MAAqB,wBAAwB;IAe3C;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAjBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,0BAA0B;SACjC,CAAC;IACJ,CAAC;IAeM,QAAQ,CAAC,KAAa,IAAG,CAAC;IAE1B,KAAK,CAAC,KAAY;QACvB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;YAC9C,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAC7D,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,OAAO;QAClB,OAAO,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;CACF;AAxCD,2CAwCC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Grove_SoilMoistureSensor\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\nimport PeripheralGrove from \"../../../obniz/libs/io_peripherals/grove\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\ninterface Grove_SoilMoistureSensorOptionsA {\n  vcc?: number;\n  gnd?: number;\n  signal: number;\n}\n\ninterface Grove_SoilMoistureSensorOptionsB {\n  grove: PeripheralGrove;\n}\n\nexport type Grove_SoilMoistureSensorOptions = Grove_SoilMoistureSensorOptionsA | Grove_SoilMoistureSensorOptionsB;\n\nexport default class Grove_SoilMoistureSensor implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_SoilMoistureSensor\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  public ad!: PeripheralAD;\n\n  protected obniz!: Obniz;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"signal\", \"grove\"];\n    this.requiredKeys = [];\n  }\n\n  public onchange(value: number) {}\n\n  public wired(obniz: Obniz) {\n    if (this.params.grove) {\n      const groveAd = this.params.grove.getAnalog();\n      this.ad = groveAd.primary;\n    } else {\n      this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n      this.ad = obniz.getAD(this.params.signal);\n    }\n    this.ad.start((value: any) => {\n      if (this.onchange) {\n        this.onchange(value);\n      }\n    });\n  }\n\n  public async getWait(): Promise<number> {\n    return await this.ad.getWait();\n  }\n}\n"]}