{"version":3,"sources":["../src/parts/Grove/Grove_Speaker/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAmBH,MAAqB,aAAa;IAehC;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAjBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,eAAe;SACtB,CAAC;IACJ,CAAC;IAeM,QAAQ,CAAC,KAAa,IAAG,CAAC;IAE1B,KAAK,CAAC,KAAY;QACvB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;YAC9B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;SAC5C;IACH,CAAC;IAEM,IAAI,CAAC,SAAiB;QAC3B,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAC1C;QACD,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY;QAC/C,IAAI,SAAS,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACnB;IACH,CAAC;IAEM,IAAI;QACT,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACf,CAAC;CACF;AAjDD,gCAiDC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Grove_Speaker\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralGrove from \"../../../obniz/libs/io_peripherals/grove\";\nimport PeripheralPWM from \"../../../obniz/libs/io_peripherals/pwm\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\ninterface Grove_SpeakerOptionsA {\n  vcc?: number;\n  gnd?: number;\n  signal: number;\n}\n\ninterface Grove_SpeakerOptionsB {\n  grove: PeripheralGrove;\n}\n\nexport type Grove_SpeakerOptions = Grove_SpeakerOptionsA | Grove_SpeakerOptionsB;\n\nexport default class Grove_Speaker implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_Speaker\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  public pwm!: PeripheralPWM;\n\n  protected obniz!: Obniz;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"signal\", \"grove\"];\n    this.requiredKeys = [];\n  }\n\n  public onchange(value: number) {}\n\n  public wired(obniz: Obniz) {\n    if (this.params.grove) {\n      this.pwm = this.params.grove.getPwm();\n    } else {\n      this.obniz = obniz;\n      this.obniz.setVccGnd(null, this.params.gnd, \"5v\");\n      this.pwm = obniz.getFreePwm();\n      this.pwm.start({ io: this.params.signal });\n    }\n  }\n\n  public play(frequency: number) {\n    if (typeof frequency !== \"number\") {\n      throw new Error(\"freq must be a number\");\n    }\n    frequency = Math.floor(frequency); // temporary\n    if (frequency > 0) {\n      this.pwm.freq(frequency);\n      this.pwm.pulse((1 / frequency / 2) * 1000);\n    } else {\n      this.pwm.pulse(0);\n    }\n  }\n\n  public stop() {\n    this.play(0);\n  }\n}\n"]}