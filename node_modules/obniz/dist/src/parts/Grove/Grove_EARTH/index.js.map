{"version":3,"sources":["../src/parts/Grove/Grove_EARTH/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAsBH,MAAqB,WAAW;IAmB9B;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IArBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,aAAa;SACpB,CAAC;IACJ,CAAC;IAmBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YACtD,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAC7D,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAa,EAAE,EAAE;YAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,eAAe;QAC1B,OAAO,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IAEM,KAAK,CAAC,sBAAsB;QACjC,OAAO,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC;IACnC,CAAC;CACF;AAnDD,8BAmDC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Grove_EARTHOptionsA\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\nimport PeripheralGrove from \"../../../obniz/libs/io_peripherals/grove\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\n\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface Grove_EARTHOptionsA {\n  vcc?: number;\n  aout: number;\n  dout: number;\n  gnd?: number;\n}\n\ninterface Grove_EARTHOptionsB {\n  grove: PeripheralGrove;\n}\n\nexport type Grove_EARTHOptions = Grove_EARTHOptionsA | Grove_EARTHOptionsB;\n\nexport default class Grove_EARTH implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_EARTH\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  public value: any;\n  public onchange?: (value: number) => void;\n\n  protected obniz!: Obniz;\n\n  private ad!: PeripheralAD;\n  private io!: PeripheralIO;\n\n  constructor() {\n    this.keys = [\"vcc\", \"aout\", \"dout\", \"gnd\", \"grove\"];\n    this.requiredKeys = [];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    if (this.params.grove) {\n      const groveIOs = this.params.grove.getAnalogDigital();\n      this.ad = groveIOs.analog;\n      this.io = groveIOs.digital;\n    } else {\n      this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n      this.ad = obniz.getAD(this.params.aout);\n      this.io = obniz.getIO(this.params.dout);\n    }\n\n    this.ad.start((value: number) => {\n      this.value = value;\n      if (this.onchange) {\n        this.onchange(this.value);\n      }\n    });\n  }\n\n  public async getHumidityWait() {\n    return await this.ad.getWait();\n  }\n\n  public async getDigitalHumidityWait() {\n    return await this.io.inputWait();\n  }\n}\n"]}