{"version":3,"sources":["../src/parts/Grove/Grove_JoyStick/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAeH,MAAqB,cAAc;IAcjC;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAhBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,gBAAgB;SACvB,CAAC;IACJ,CAAC;IAcM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,MAAM,KAAK,GAAG,MAAM,CAAC;QACrB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAC7D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,8BAA8B;YACpD,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACrD;IACH,CAAC;IAEM,KAAK,CAAC,QAAQ;QACnB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC7C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IAEM,KAAK,CAAC,QAAQ;QACnB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC7C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IAEM,KAAK,CAAC,aAAa;QACxB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC7C,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;CACF;AAhDD,iCAgDC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Grove_JoyStick\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralGrove from \"../../../obniz/libs/io_peripherals/grove\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\n\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\nimport { I2cPartsAbstractOptions } from \"../../i2cParts\";\n\ninterface GroveInterface {\n  grove: PeripheralGrove;\n}\n\nexport type Grove_JoyStickOptions = I2cPartsAbstractOptions | GroveInterface;\n\nexport default class Grove_JoyStick implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_JoyStick\",\n    };\n  }\n\n  public requiredKeys: string[];\n  public keys: string[];\n  public params: any;\n\n  protected obniz!: Obniz;\n  protected i2c!: PeripheralI2C;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"sda\", \"scl\", \"i2c\", \"grove\"];\n    this.requiredKeys = [];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    const speed = 400000;\n    if (this.params.grove) {\n      this.i2c = this.params.grove.getI2c(speed, \"5v\");\n    } else {\n      this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n      this.obniz.wait(100); // wait for booting of MEGA328\n      this.params.mode = \"master\";\n      this.params.clock = speed;\n      this.params.pull = \"5v\";\n      this.i2c = this.obniz.getI2CWithConfig(this.params);\n    }\n  }\n\n  public async getXWait(): Promise<number> {\n    const ret = await this.i2c.readWait(0x52, 3);\n    return ret[0];\n  }\n\n  public async getYWait(): Promise<number> {\n    const ret = await this.i2c.readWait(0x52, 3);\n    return ret[1];\n  }\n\n  public async isPressedWait(): Promise<boolean> {\n    const ret = await this.i2c.readWait(0x52, 3);\n    return Boolean(ret[2]);\n  }\n}\n"]}