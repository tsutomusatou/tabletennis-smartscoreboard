{"version":3,"sources":["../src/parts/Grove/Grove_JoyStick/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,eAAe,MAAM,0CAA0C,CAAC;AACvE,OAAO,aAAa,MAAM,wCAAwC,CAAC;AAEnE,OAAO,mBAAmB,EAAE,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACzF,OAAO,EAAE,uBAAuB,EAAE,MAAM,gBAAgB,CAAC;AAEzD,UAAU,cAAc;IACtB,KAAK,EAAE,eAAe,CAAC;CACxB;AAED,oBAAY,qBAAqB,GAAG,uBAAuB,GAAG,cAAc,CAAC;AAE7E,MAAM,CAAC,OAAO,OAAO,cAAe,YAAW,mBAAmB;WAClD,IAAI,IAAI,cAAc;IAM7B,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,MAAM,EAAE,GAAG,CAAC;IAEnB,SAAS,CAAC,KAAK,EAAG,KAAK,CAAC;IACxB,SAAS,CAAC,GAAG,EAAG,aAAa,CAAC;;IAOvB,KAAK,CAAC,KAAK,EAAE,KAAK;IAeZ,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC;IAK3B,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC;IAK3B,aAAa,IAAI,OAAO,CAAC,OAAO,CAAC;CAI/C","file":"index.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Grove_JoyStick\n */\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralGrove from \"../../../obniz/libs/io_peripherals/grove\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\n\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\nimport { I2cPartsAbstractOptions } from \"../../i2cParts\";\n\ninterface GroveInterface {\n  grove: PeripheralGrove;\n}\n\nexport type Grove_JoyStickOptions = I2cPartsAbstractOptions | GroveInterface;\n\nexport default class Grove_JoyStick implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_JoyStick\",\n    };\n  }\n\n  public requiredKeys: string[];\n  public keys: string[];\n  public params: any;\n\n  protected obniz!: Obniz;\n  protected i2c!: PeripheralI2C;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"sda\", \"scl\", \"i2c\", \"grove\"];\n    this.requiredKeys = [];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    const speed = 400000;\n    if (this.params.grove) {\n      this.i2c = this.params.grove.getI2c(speed, \"5v\");\n    } else {\n      this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n      this.obniz.wait(100); // wait for booting of MEGA328\n      this.params.mode = \"master\";\n      this.params.clock = speed;\n      this.params.pull = \"5v\";\n      this.i2c = this.obniz.getI2CWithConfig(this.params);\n    }\n  }\n\n  public async getXWait(): Promise<number> {\n    const ret = await this.i2c.readWait(0x52, 3);\n    return ret[0];\n  }\n\n  public async getYWait(): Promise<number> {\n    const ret = await this.i2c.readWait(0x52, 3);\n    return ret[1];\n  }\n\n  public async isPressedWait(): Promise<boolean> {\n    const ret = await this.i2c.readWait(0x52, 3);\n    return Boolean(ret[2]);\n  }\n}\n"]}