{"version":3,"sources":["../src/parts/Ble/ENERTALK/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.ENERTALK_TOUCH\n */\n\nimport Obniz from \"../../../obniz\";\nimport BleRemoteCharacteristic from \"../../../obniz/libs/embeds/bleHci/bleRemoteCharacteristic\";\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport BleRemoteService from \"../../../obniz/libs/embeds/bleHci/bleRemoteService\";\nimport ObnizPartsBleInterface from \"../../../obniz/ObnizPartsBleInterface\";\nimport { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface ENERTALK_TOUCHOptions {}\n\nexport default class ENERTALK_TOUCH implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"ENERTALK_TOUCH\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral) {\n    if (peripheral.localName && peripheral.localName.startsWith(\"ensensor_\")) {\n      return true;\n    }\n    return false;\n  }\n\n  public keys: string[] = [];\n  public requiredKeys: string[] = [];\n  public params: any;\n  public onbuttonpressed: ((pressed: boolean) => void) | null = null;\n  public _peripheral: BleRemotePeripheral | null = null;\n  public ondisconnect?: (reason: any) => void;\n\n  private _uuids = {\n    service: \"3526797e-448b-4bbb-9145-c5083e0e09dc\",\n    temperatureChar: \"2A6E\",\n    humidityChar: \"2A6F\",\n    illuminanceChar: \"74c3fe9d-25b2-4903-8dcd-680e5ef0a6b3\",\n    accelerometerChar: \"71ef0979-0e2c-4a55-8d3c-78083869fae6\",\n  };\n  private _service: BleRemoteService | null = null;\n  private _temperatureChar: BleRemoteCharacteristic | null = null;\n  private _humidityChar: BleRemoteCharacteristic | null = null;\n  private _illuminanceChar: BleRemoteCharacteristic | null = null;\n  private _accelerometerChar: BleRemoteCharacteristic | null = null;\n\n  constructor(peripheral: BleRemotePeripheral | null) {\n    if (peripheral && !ENERTALK_TOUCH.isDevice(peripheral)) {\n      throw new Error(\"peripheral is not RS_BTIREX2\");\n    }\n    this._peripheral = peripheral;\n  }\n\n  public async connectWait() {\n    if (!this._peripheral) {\n      throw new Error(\"RS_BTIREX2 is not find.\");\n    }\n    this._peripheral.ondisconnect = (reason: any) => {\n      if (typeof this.ondisconnect === \"function\") {\n        this.ondisconnect(reason);\n      }\n    };\n    await this._peripheral.connectWait();\n    this._service = this._peripheral.getService(this._uuids.service)!;\n    this._temperatureChar = this._service.getCharacteristic(this._uuids.temperatureChar);\n    this._humidityChar = this._service.getCharacteristic(this._uuids.humidityChar);\n    this._illuminanceChar = this._service.getCharacteristic(this._uuids.illuminanceChar);\n    this._accelerometerChar = this._service.getCharacteristic(this._uuids.accelerometerChar);\n  }\n\n  public async disconnectWait() {\n    await this._peripheral?.disconnectWait();\n  }\n\n  public async getTemperatureWait() {\n    if (!this._temperatureChar) {\n      throw new Error(\"device is not connected\");\n    }\n    const tempData = await this._temperatureChar.readWait();\n    const buf = Buffer.from(tempData);\n    const temp = buf.readInt16BE(0) / 100;\n    return temp;\n  }\n\n  public async getHumidityWait() {\n    if (!this._humidityChar) {\n      throw new Error(\"device is not connected\");\n    }\n\n    const humidityData = await this._humidityChar.readWait();\n    const humidity = humidityData[0];\n    return humidity;\n  }\n\n  public async getIlluminationWait() {\n    if (!this._illuminanceChar) {\n      throw new Error(\"device is not connected\");\n    }\n    const illuminanceData = await this._illuminanceChar.readWait();\n    const buf = Buffer.from(illuminanceData);\n    const illuminance = buf.readInt16BE(0);\n\n    return illuminance;\n  }\n\n  public async getAccelerometerWait() {\n    if (!this._accelerometerChar) {\n      throw new Error(\"device is not connected\");\n    }\n\n    const accelerometerData = await this._accelerometerChar.readWait();\n    const buf = Buffer.from(accelerometerData);\n    const x = buf.readInt16BE(0) / 1000;\n    const y = buf.readInt16BE(2) / 1000;\n    const z = buf.readInt16BE(4) / 1000;\n\n    return { x, y, z };\n  }\n}\n"]}