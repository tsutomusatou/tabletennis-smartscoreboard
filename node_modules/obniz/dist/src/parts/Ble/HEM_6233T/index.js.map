{"version":3,"sources":["../src/parts/Ble/HEM_6233T/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.HEM_6233T\n */\n\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface from \"../../../obniz/ObnizPartsBleInterface\";\nimport { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface HEM_6233TOptions {}\n\nexport type HEM_6233TMesurementStatus =\n  | \"BodyMovementDetection\"\n  | \"CuffFitDetection\"\n  | \"IrregularPulseDetection\"\n  | \"PulseRateRangeDetection\"\n  | \"MeasurementPositionDetection\";\n\nexport interface HEM_6233TResult {\n  bloodPressure?: {\n    systolic: number;\n    diastolic: number;\n    meanArterialPressure: number;\n    unit: \"mmHg\";\n  };\n  date?: {\n    year: number;\n    month: number;\n    day: number;\n    hour: number;\n    minute: number;\n    second: number;\n  };\n  pulseRate?: number;\n  userId?: number;\n  measurementStatus?: HEM_6233TMesurementStatus[];\n}\n\nexport default class HEM_6233T implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"HEM_6233T\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral) {\n    if (peripheral.localName && peripheral.localName.startsWith(\"BLESmart_\")) {\n      return true;\n    }\n    return false;\n  }\n\n  public keys: string[] = [];\n  public requiredKeys: string[] = [];\n  public params: any;\n  public _peripheral: BleRemotePeripheral | null = null;\n  private _timezoneOffsetMinute: number;\n\n  constructor(peripheral: BleRemotePeripheral | null, timezoneOffsetMinute: number) {\n    // if (peripheral && !HEM_6233T.isDevice(peripheral)) {\n    //   throw new Error(\"peripheral is not HEM_6233T\");\n    // }\n    this._peripheral = peripheral;\n    this._timezoneOffsetMinute = timezoneOffsetMinute;\n  }\n\n  public async getDataWait(pairingKeys?: string): Promise<HEM_6233TResult[]> {\n    if (!this._peripheral) {\n      throw new Error(\"HEM_6233T is not find.\");\n    }\n    await this._peripheral.connectWait({\n      autoDiscovery: true,\n      pairingOption: {\n        keys: pairingKeys,\n      },\n    });\n\n    const results: any[] = [];\n    return await new Promise(async (resolve, reject) => {\n      this._peripheral!.ondisconnect = (reason: any) => {\n        resolve(results);\n      };\n      await this.subscribeWait(\"1805\", \"2A2B\"); // current time\n      await this.subscribeWait(\"180F\", \"2A19\", async () => {\n        // send command (unknown meaning)\n        this._peripheral!.obnizBle.hci.write([\n          0x02,\n          0x00,\n          0x00,\n          0x09,\n          0x00,\n          0x05,\n          0x00,\n          0x04,\n          0x00,\n          0x01,\n          0x06,\n          0x01,\n          0x00,\n          0x0a,\n        ]);\n\n        this._writeTimeCharWait(this._timezoneOffsetMinute);\n      }); // battery Level\n      await this.subscribeWait(\"1810\", \"2A35\", async (data: number[]) => {\n        console.error(\"SUCCESS\", data);\n        results.push(this._analyzeData(data));\n      }); // blood pressure\n    });\n  }\n\n  public async subscribeWait(service: string, char: string, callback?: any) {\n    if (!this._peripheral) {\n      throw new Error(\"HEM_6233T is not find.\");\n    }\n    const characteristics = this._peripheral.getService(service)!.getCharacteristic(char)!;\n    await characteristics.registerNotifyWait(async (data) => {\n      if (callback) {\n        callback(data);\n      }\n    });\n  }\n\n  public async _writeTimeCharWait(timeOffsetMinute: number) {\n    if (!this._peripheral) {\n      throw new Error(\"HEM_6233T is not find.\");\n    }\n\n    const timeChar = this._peripheral.getService(\"1805\")!.getCharacteristic(\"2A2B\")!;\n    const date = new Date();\n    date.setTime(Date.now() + 1000 * 60 * timeOffsetMinute);\n\n    const buf = Buffer.alloc(7);\n    buf.writeUInt16LE(date.getUTCFullYear(), 0);\n    buf.writeUInt8(date.getUTCMonth() + 1, 2);\n    buf.writeUInt8(date.getUTCDate(), 3);\n    buf.writeUInt8(date.getUTCHours(), 4);\n    buf.writeUInt8(date.getUTCMinutes(), 5);\n    buf.writeUInt8(date.getUTCSeconds(), 6);\n\n    const arr = Array.from(buf);\n    await timeChar.writeWait(arr);\n  }\n\n  private _readFloatLE(buffer: Buffer, index: number) {\n    const data = buffer.readUInt16LE(index);\n    let mantissa = data & 0x0fff;\n    if ((mantissa & 0x0800) > 0) {\n      mantissa = -1 * (~(mantissa - 0x01) & 0x0fff);\n    }\n    const exponential = data >> 12;\n    return mantissa * Math.pow(10, exponential);\n  }\n\n  private _readSFloatLE(buffer: Buffer, index: number) {\n    const data = buffer.readUInt32LE(index);\n    let mantissa = data & 0x00ffffff;\n    if ((mantissa & 0x00800000) > 0) {\n      mantissa = -1 * (~(mantissa - 0x01) & 0x00ffffff);\n    }\n    const exponential = data >> 24;\n    return mantissa * Math.pow(10, exponential);\n  }\n\n  private _analyzeData(data: number[]): HEM_6233TResult {\n    const buf = Buffer.from(data);\n    const flags = buf.readUInt8(0);\n\n    let index = 1;\n    const result: HEM_6233TResult = {};\n    let scale = 1;\n    if (flags & 0x01) {\n      // kPa\n      scale = 7.501;\n    }\n    result.bloodPressure = {\n      systolic: this._readFloatLE(buf, index) * scale,\n      diastolic: this._readFloatLE(buf, index + 2) * scale,\n      meanArterialPressure: this._readFloatLE(buf, index + 4) * scale,\n      unit: \"mmHg\",\n    };\n    index += 6;\n\n    if (flags & 0x02) {\n      // Time Stamp field present\n      result.date = {\n        year: buf.readUInt16LE(index),\n        month: buf.readUInt8(index + 2),\n        day: buf.readUInt8(index + 3),\n        hour: buf.readUInt8(index + 4),\n        minute: buf.readUInt8(index + 5),\n        second: buf.readUInt8(index + 6),\n      };\n      index += 7;\n    }\n    if (flags & 0x04) {\n      result.pulseRate = buf.readUInt16LE(index);\n      index += 2;\n    }\n\n    if (flags & 0x08) {\n      result.userId = buf.readUInt8(index);\n      index += 1;\n    }\n    if (flags & 0x10) {\n      const statusFlag: { [_: number]: HEM_6233TMesurementStatus } = {\n        0x01: \"BodyMovementDetection\",\n        0x02: \"CuffFitDetection\",\n        0x04: \"IrregularPulseDetection\",\n        0x08: \"PulseRateRangeDetection\",\n        0x10: \"MeasurementPositionDetection\",\n      };\n      const mesurementStatus = buf.readUInt16LE(index);\n      index++;\n      result.measurementStatus = [];\n\n      for (const f in statusFlag) {\n        if (+f & mesurementStatus) {\n          result.measurementStatus.push(statusFlag[f]);\n        }\n      }\n    }\n    return result;\n  }\n}\n"]}