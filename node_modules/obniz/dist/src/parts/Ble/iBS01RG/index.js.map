{"version":3,"sources":["../src/parts/Ble/iBS01RG/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["//\n//   const accelArray: IBS01RG_Acceleration_Data[] = [];\n//   for (let i = 0; i < 3; i++) {\n//     accelArray.push({\n//       x: IBS01RG.signed16FromBinary(advertise[0][7 + i * 6], advertise[0][8 + i * 6]),\n//       y: IBS01RG.signed16FromBinary(advertise[0][9 + i * 6], advertise[0][10 + i * 6]),\n//       z: IBS01RG.signed16FromBinary(advertise[0][11 + i * 6], advertise[0][12 + i * 6]),\n//     });\n//   }\n//   console.log((advertise[0][6] & 0x0f) * 0xff);\n//   console.log((advertise[0][6] & 0x30) >> 4);\n//   const data: IBS01RG_Data = {\n//     battery: (advertise[0][5] + (advertise[0][6] & 0x0f) * 256) * 0.01,\n//     active: Boolean((advertise[0][6] & 0x10) >> 4),\n//     button: Boolean((advertise[0][6] & 0x20) >> 5),\n//     acceleration: accelArray,\n//     address: peripheral.address,\n//   };\n//   // console.log(`battery ${data.battery}V event ${data.event});\n//   if (this.onNotification) {\n//     this.onNotification(data);\n//   }\n//\n//   if (this.onChangeButton) {\n//     const button: boolean = Boolean((advertise[0][6] & 0x20) >> 5);\n//     if (button !== this.oldButtonFlg) {\n//       this.onChangeButton(button, peripheral.address);\n//       this.oldButtonFlg = button;\n//     }\n//   }\n//\n//   if (this.onChangeActive) {\n//     const actived: boolean = Boolean((advertise[0][6] & 0x10) >> 4);\n//     if (actived !== this.oldActiveFlg) {\n//       this.onChangeActive(actived, peripheral.address);\n//       this.oldActiveFlg = actived;\n//     }\n//   }\n// };\n\n/**\n * @packageDocumentation\n * @module Parts.iBS01RG\n */\n\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface, { ObnizPartsBleInfo } from \"../../../obniz/ObnizPartsBleInterface\";\n\nexport interface IBS01RGOptions {}\n\nexport interface IBS01RG_Acceleration_Data {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport interface IBS01RG_Data {\n  battery: number;\n  active: boolean;\n  button: boolean;\n  acceleration: IBS01RG_Acceleration_Data[];\n}\n\nexport default class IBS01RG implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsBleInfo {\n    return {\n      name: \"iBS01RG\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral): boolean {\n    if (this.deviceAdv.length > peripheral.adv_data.length) {\n      return false;\n    }\n    for (let index = 0; index < this.deviceAdv.length; index++) {\n      if (this.deviceAdv[index] === -1) {\n        continue;\n      }\n      if (peripheral.adv_data[index] === this.deviceAdv[index]) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  public static getData(peripheral: BleRemotePeripheral): IBS01RG_Data | null {\n    if (!IBS01RG.isDevice(peripheral)) {\n      return null;\n    }\n    const accelArray: IBS01RG_Acceleration_Data[] = [];\n    for (let i = 0; i < 3; i++) {\n      accelArray.push({\n        x: ObnizPartsBleInterface.signed16FromBinary(peripheral.adv_data[12 + i * 6], peripheral.adv_data[11 + i * 6]),\n        y: ObnizPartsBleInterface.signed16FromBinary(peripheral.adv_data[14 + i * 6], peripheral.adv_data[13 + i * 6]),\n        z: ObnizPartsBleInterface.signed16FromBinary(peripheral.adv_data[16 + i * 6], peripheral.adv_data[15 + i * 6]),\n      });\n    }\n    const data: IBS01RG_Data = {\n      battery: (peripheral.adv_data[9] + (peripheral.adv_data[10] & 0x0f) * 256) * 0.01,\n      active: Boolean((peripheral.adv_data[10] & 0x10) >> 4),\n      button: Boolean((peripheral.adv_data[10] & 0x20) >> 5),\n      acceleration: accelArray,\n    };\n    return data;\n  }\n\n  private static deviceAdv: number[] = [\n    0x02,\n    0x01,\n    0x06,\n    0x19,\n    0xff,\n    0x59, // Manufacturer vendor code\n    0x00, // Manufacturer vendor code\n    0x81, // Magic code\n    0xbc, // Magic code\n    -1, // Battery\n    -1, // Battery\n    -1, // x\n    -1, // x\n    -1, // y\n    -1, // y\n    -1, // z\n    -1, // z\n  ];\n\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  constructor() {}\n}\n"]}