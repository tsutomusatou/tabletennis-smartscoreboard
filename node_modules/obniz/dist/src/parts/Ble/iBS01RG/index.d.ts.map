{"version":3,"sources":["../src/parts/Ble/iBS01RG/index.ts"],"names":[],"mappings":"AAwCA;;;GAGG;AAEH,OAAO,mBAAmB,MAAM,uDAAuD,CAAC;AACxF,OAAO,sBAAsB,EAAE,EAAE,iBAAiB,EAAE,MAAM,uCAAuC,CAAC;AAElG,MAAM,WAAW,cAAc;CAAG;AAElC,MAAM,WAAW,yBAAyB;IACxC,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;CACX;AAED,MAAM,WAAW,YAAY;IAC3B,OAAO,EAAE,MAAM,CAAC;IAChB,MAAM,EAAE,OAAO,CAAC;IAChB,MAAM,EAAE,OAAO,CAAC;IAChB,YAAY,EAAE,yBAAyB,EAAE,CAAC;CAC3C;AAED,MAAM,CAAC,OAAO,OAAO,OAAQ,YAAW,sBAAsB;WAC9C,IAAI,IAAI,iBAAiB;WAMzB,QAAQ,CAAC,UAAU,EAAE,mBAAmB,GAAG,OAAO;WAgBlD,OAAO,CAAC,UAAU,EAAE,mBAAmB,GAAG,YAAY,GAAG,IAAI;IAqB3E,OAAO,CAAC,MAAM,CAAC,SAAS,CAkBtB;IAEK,WAAW,EAAE,mBAAmB,GAAG,IAAI,CAAQ;;CAGvD","file":"index.d.ts","sourcesContent":["//\n//   const accelArray: IBS01RG_Acceleration_Data[] = [];\n//   for (let i = 0; i < 3; i++) {\n//     accelArray.push({\n//       x: IBS01RG.signed16FromBinary(advertise[0][7 + i * 6], advertise[0][8 + i * 6]),\n//       y: IBS01RG.signed16FromBinary(advertise[0][9 + i * 6], advertise[0][10 + i * 6]),\n//       z: IBS01RG.signed16FromBinary(advertise[0][11 + i * 6], advertise[0][12 + i * 6]),\n//     });\n//   }\n//   console.log((advertise[0][6] & 0x0f) * 0xff);\n//   console.log((advertise[0][6] & 0x30) >> 4);\n//   const data: IBS01RG_Data = {\n//     battery: (advertise[0][5] + (advertise[0][6] & 0x0f) * 256) * 0.01,\n//     active: Boolean((advertise[0][6] & 0x10) >> 4),\n//     button: Boolean((advertise[0][6] & 0x20) >> 5),\n//     acceleration: accelArray,\n//     address: peripheral.address,\n//   };\n//   // console.log(`battery ${data.battery}V event ${data.event});\n//   if (this.onNotification) {\n//     this.onNotification(data);\n//   }\n//\n//   if (this.onChangeButton) {\n//     const button: boolean = Boolean((advertise[0][6] & 0x20) >> 5);\n//     if (button !== this.oldButtonFlg) {\n//       this.onChangeButton(button, peripheral.address);\n//       this.oldButtonFlg = button;\n//     }\n//   }\n//\n//   if (this.onChangeActive) {\n//     const actived: boolean = Boolean((advertise[0][6] & 0x10) >> 4);\n//     if (actived !== this.oldActiveFlg) {\n//       this.onChangeActive(actived, peripheral.address);\n//       this.oldActiveFlg = actived;\n//     }\n//   }\n// };\n\n/**\n * @packageDocumentation\n * @module Parts.iBS01RG\n */\n\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface, { ObnizPartsBleInfo } from \"../../../obniz/ObnizPartsBleInterface\";\n\nexport interface IBS01RGOptions {}\n\nexport interface IBS01RG_Acceleration_Data {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport interface IBS01RG_Data {\n  battery: number;\n  active: boolean;\n  button: boolean;\n  acceleration: IBS01RG_Acceleration_Data[];\n}\n\nexport default class IBS01RG implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsBleInfo {\n    return {\n      name: \"iBS01RG\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral): boolean {\n    if (this.deviceAdv.length > peripheral.adv_data.length) {\n      return false;\n    }\n    for (let index = 0; index < this.deviceAdv.length; index++) {\n      if (this.deviceAdv[index] === -1) {\n        continue;\n      }\n      if (peripheral.adv_data[index] === this.deviceAdv[index]) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  public static getData(peripheral: BleRemotePeripheral): IBS01RG_Data | null {\n    if (!IBS01RG.isDevice(peripheral)) {\n      return null;\n    }\n    const accelArray: IBS01RG_Acceleration_Data[] = [];\n    for (let i = 0; i < 3; i++) {\n      accelArray.push({\n        x: ObnizPartsBleInterface.signed16FromBinary(peripheral.adv_data[12 + i * 6], peripheral.adv_data[11 + i * 6]),\n        y: ObnizPartsBleInterface.signed16FromBinary(peripheral.adv_data[14 + i * 6], peripheral.adv_data[13 + i * 6]),\n        z: ObnizPartsBleInterface.signed16FromBinary(peripheral.adv_data[16 + i * 6], peripheral.adv_data[15 + i * 6]),\n      });\n    }\n    const data: IBS01RG_Data = {\n      battery: (peripheral.adv_data[9] + (peripheral.adv_data[10] & 0x0f) * 256) * 0.01,\n      active: Boolean((peripheral.adv_data[10] & 0x10) >> 4),\n      button: Boolean((peripheral.adv_data[10] & 0x20) >> 5),\n      acceleration: accelArray,\n    };\n    return data;\n  }\n\n  private static deviceAdv: number[] = [\n    0x02,\n    0x01,\n    0x06,\n    0x19,\n    0xff,\n    0x59, // Manufacturer vendor code\n    0x00, // Manufacturer vendor code\n    0x81, // Magic code\n    0xbc, // Magic code\n    -1, // Battery\n    -1, // Battery\n    -1, // x\n    -1, // x\n    -1, // y\n    -1, // y\n    -1, // z\n    -1, // z\n  ];\n\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  constructor() {}\n}\n"]}