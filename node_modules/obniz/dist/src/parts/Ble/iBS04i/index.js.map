{"version":3,"sources":["../src/parts/Ble/iBS04i/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAkBH,MAAqB,MAAM;IAkFzB;QAFO,gBAAW,GAA+B,IAAI,CAAC;IAEvC,CAAC;IAjFT,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,QAAQ;SACf,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,UAA+B;QACpD,OAAO,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC;IACpD,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,UAA+B;QACnD,MAAM,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,GAAG,KAAK,IAAI,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;QACD,MAAM,IAAI,GAAgB;YACxB,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;YACvC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,EAAE,UAAU,CAAC,OAAQ,CAAC,IAAI;YAC9B,KAAK,EAAE,UAAU,CAAC,OAAQ,CAAC,KAAK;YAChC,KAAK,EAAE,UAAU,CAAC,OAAQ,CAAC,KAAK;YAChC,KAAK,EAAE,UAAU,CAAC,OAAQ,CAAC,KAAK;YAChC,IAAI,EAAE,UAAU,CAAC,OAAQ,CAAC,IAAI;YAC9B,OAAO,EAAE,UAAU,CAAC,OAAO;SAC5B,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAuBO,MAAM,CAAC,cAAc,CAAC,UAA+B;QAC3D,MAAM,SAAS,GAAG,UAAU,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,GAAa,EAAE,EAAE;YACxE,IAAI,IAAI,GAAG,KAAK,CAAC;YACjB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;gBACtC,OAAO,IAAI,CAAC;aACb;YACD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBAC1D,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;oBAChC,SAAS;iBACV;gBACD,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;oBACxC,IAAI,GAAG,IAAI,CAAC;oBACZ,SAAS;iBACV;gBACD,IAAI,GAAG,KAAK,CAAC;gBACb,MAAM;aACP;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,OAAO,IAAI,CAAC;SACb;QACD,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,IAAI,KAAK,EAAE,EAAE;YACf,WAAW;YACX,OAAO,IAAI,CAAC;SACb;QACD,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;;AA9EH,yBAmFC;AAtDgB,gBAAS,GAAa;IACnC,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;CACH,CAAC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.iBS04i\n */\n\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface, { ObnizPartsBleInfo } from \"../../../obniz/ObnizPartsBleInterface\";\n\nexport interface IBS04IOptions {}\n\nexport interface IBS04I_Data {\n  battery: number;\n  button: boolean;\n  uuid: string;\n  major: number;\n  minor: number;\n  power: number;\n  rssi: number;\n  address: string;\n}\n\nexport default class IBS04I implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsBleInfo {\n    return {\n      name: \"iBS04i\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral): boolean {\n    return IBS04I.getDeviceArray(peripheral) !== null;\n  }\n\n  public static getData(peripheral: BleRemotePeripheral): IBS04I_Data | null {\n    const adv = IBS04I.getDeviceArray(peripheral);\n    if (adv === null) {\n      return null;\n    }\n    const data: IBS04I_Data = {\n      battery: (adv[5] + adv[6] * 256) * 0.01,\n      button: Boolean(adv[7]),\n      uuid: peripheral.iBeacon!.uuid,\n      major: peripheral.iBeacon!.major,\n      minor: peripheral.iBeacon!.minor,\n      power: peripheral.iBeacon!.power,\n      rssi: peripheral.iBeacon!.rssi,\n      address: peripheral.address,\n    };\n    return data;\n  }\n\n  private static deviceAdv: number[] = [\n    0xff,\n    0x0d, // Manufacturer vendor code\n    0x00, // Manufacturer vendor code\n    0x83, // Magic code\n    0xbc, // Magic code\n    -1, // Battery\n    -1, // Battery\n    -1, // Event\n    0xff, // reserved\n    0xff, // reserved\n    0xff, // reserved\n    0xff, // reserved\n    0x00, // user\n    -1, // user\n    -1, // subType\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n  ];\n\n  private static getDeviceArray(peripheral: BleRemotePeripheral): number[] | null {\n    const advertise = peripheral.advertise_data_rows.filter((adv: number[]) => {\n      let find = false;\n      if (this.deviceAdv.length > adv.length) {\n        return find;\n      }\n      for (let index = 0; index < this.deviceAdv.length; index++) {\n        if (this.deviceAdv[index] === -1) {\n          continue;\n        }\n        if (adv[index] === this.deviceAdv[index]) {\n          find = true;\n          continue;\n        }\n        find = false;\n        break;\n      }\n      return find;\n    });\n    if (advertise.length !== 1) {\n      return null;\n    }\n    const type = advertise[0][14];\n    if (type !== 24) {\n      // iBS04i以外\n      return null;\n    }\n    return advertise[0];\n  }\n\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  constructor() {}\n}\n"]}