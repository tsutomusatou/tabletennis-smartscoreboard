{"version":3,"sources":["../src/parts/Ble/tm530/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAGH,mGAAkG;AAUlG,MAAqB,KAAK;IA0DxB;QAFO,gBAAW,GAA+B,IAAI,CAAC;IAEvC,CAAC;IAzDT,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,OAAO;SACd,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,UAA+B;QACpD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE;YACtD,OAAO,KAAK,CAAC;SACd;QACD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC1D,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;gBAChC,SAAS;aACV;YACD,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBACxD,SAAS;aACV;YACD,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,UAA+B;QACnD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;QACD,MAAM,IAAI,GAAe;YACvB,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YAChC,WAAW,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,gCAAsB,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACnG,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,gCAAsB,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACjG,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;;AAjCH,wBA2DC;AAxBgB,eAAS,GAAa;IACnC,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,IAAI;IACJ,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;CACH,CAAC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.TM530\n */\n\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface, { ObnizPartsBleInfo } from \"../../../obniz/ObnizPartsBleInterface\";\n\nexport interface TM530Options {}\n\nexport interface TM530_Data {\n  battery: number;\n  temperature: number;\n  humidity: number;\n}\n\nexport default class TM530 implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsBleInfo {\n    return {\n      name: \"TM530\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral): boolean {\n    if (this.deviceAdv.length > peripheral.adv_data.length) {\n      return false;\n    }\n    for (let index = 0; index < this.deviceAdv.length; index++) {\n      if (this.deviceAdv[index] === -1) {\n        continue;\n      }\n      if (peripheral.adv_data[index] === this.deviceAdv[index]) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  public static getData(peripheral: BleRemotePeripheral): TM530_Data | null {\n    if (!TM530.isDevice(peripheral)) {\n      return null;\n    }\n    const data: TM530_Data = {\n      battery: peripheral.adv_data[13],\n      temperature: peripheral.adv_data[14] + ObnizPartsBleInterface.readFraction(peripheral.adv_data[15]),\n      humidity: peripheral.adv_data[16] + ObnizPartsBleInterface.readFraction(peripheral.adv_data[17]),\n    };\n    return data;\n  }\n\n  private static deviceAdv: number[] = [\n    0x02,\n    0x01,\n    0x06,\n    0x03,\n    0x03,\n    0xe1,\n    0xff,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0x01,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n  ];\n\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  constructor() {}\n}\n"]}