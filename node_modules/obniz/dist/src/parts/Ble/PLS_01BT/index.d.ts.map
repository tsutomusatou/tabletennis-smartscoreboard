{"version":3,"sources":["../src/parts/Ble/PLS_01BT/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,KAAK,MAAM,gBAAgB,CAAC;AAEnC,OAAO,mBAAmB,MAAM,uDAAuD,CAAC;AACxF,OAAO,mBAAmB,EAAE,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEzF,MAAM,WAAW,cAAc;IAC7B,SAAS,EAAE,MAAM,CAAC;IAClB,gBAAgB,EAAE,MAAM,CAAC;IACzB,cAAc,EAAE,MAAM,CAAC;CACxB;AAED,MAAM,WAAW,eAAe;CAAG;AAEnC,MAAM,CAAC,OAAO,OAAO,QAAS,YAAW,mBAAmB;WAC5C,IAAI,IAAI,cAAc;WAMtB,QAAQ,CAAC,UAAU,EAAE,mBAAmB;IAO/C,IAAI,EAAE,MAAM,EAAE,CAAM;IACpB,YAAY,EAAE,MAAM,EAAE,CAAM;IAC5B,MAAM,EAAE,GAAG,CAAC;IACZ,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,cAAc,KAAK,IAAI,CAAC,GAAG,IAAI,CAAQ;IAC5D,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,KAAK,IAAI,CAAC;IAE5C,OAAO,CAAC,MAAM,CAGZ;IACF,OAAO,CAAC,WAAW,CAAoC;IACvD,OAAO,CAAC,iBAAiB,CAAwC;IACjE,OAAO,CAAC,iBAAiB,CAAwC;gBAErD,UAAU,EAAE,mBAAmB,GAAG,IAAI;IAQ3C,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;IAEnB,WAAW;IAkCX,cAAc;CAM5B","file":"index.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.PLS_01BT\n */\n\nimport Obniz from \"../../../obniz\";\nimport BleRemoteCharacteristic from \"../../../obniz/libs/embeds/bleHci/bleRemoteCharacteristic\";\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface PLS_01BTResult {\n  pulseRate: number;\n  bloodOxygenLevel: number;\n  perfusionIndex: number;\n}\n\nexport interface PLS_01BTOptions {}\n\nexport default class PLS_01BT implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"PLS_01BT\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral) {\n    if (peripheral.localName && peripheral.localName.startsWith(\"My Oximeter\")) {\n      return true;\n    }\n    return false;\n  }\n\n  public keys: string[] = [];\n  public requiredKeys: string[] = [];\n  public params: any;\n  public onmesured: ((result: PLS_01BTResult) => void) | null = null;\n  public ondisconnect?: (reason: any) => void;\n\n  private _uuids = {\n    service: \"CDEACB80-5235-4C07-8846-93A37EE6B86D\",\n    rxChar: \"CDEACB81-5235-4C07-8846-93A37EE6B86D\",\n  };\n  private _peripheral: BleRemotePeripheral | null = null;\n  private _rxCharacteristic: BleRemoteCharacteristic | null = null;\n  private _txCharacteristic: BleRemoteCharacteristic | null = null;\n\n  constructor(peripheral: BleRemotePeripheral | null) {\n    if (peripheral && !PLS_01BT.isDevice(peripheral)) {\n      throw new Error(\"peripheral is not PLS_01BT\");\n    }\n    this._peripheral = peripheral;\n  }\n\n  // @ts-ignore\n  public wired(obniz: Obniz): void {}\n\n  public async connectWait() {\n    if (!this._peripheral) {\n      throw new Error(\"PLS_01BT is not find.\");\n    }\n    this._peripheral.ondisconnect = (reason) => {\n      if (this.ondisconnect) {\n        this.ondisconnect(reason);\n      }\n    };\n    await this._peripheral.connectWait();\n    this._rxCharacteristic = this._peripheral.getService(this._uuids.service)!.getCharacteristic(this._uuids.rxChar);\n\n    if (!this._rxCharacteristic) {\n      throw new Error(\"device is not PLS_01BT\");\n    }\n\n    await this._rxCharacteristic.registerNotifyWait((data) => {\n      if (data.length === 4 && data[0] === 0x81) {\n        if (data[1] !== 255 && data[2] !== 177) {\n          const pulseRate = data[1];\n          const bloodOxygenLevel = data[2];\n          const perfusionIndex = data[3];\n          if (this.onmesured) {\n            this.onmesured({\n              pulseRate,\n              bloodOxygenLevel,\n              perfusionIndex,\n            });\n          }\n        }\n      }\n    });\n  }\n\n  public async disconnectWait() {\n    if (!this._peripheral) {\n      throw new Error(\"PLS_01BT is not find.\");\n    }\n    await this._peripheral.disconnectWait();\n  }\n}\n"]}