{"version":3,"sources":["../src/parts/Ble/RS_SEEK3/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAUH,MAAqB,QAAQ;IA6B3B,YAAY,UAAsC;QAf3C,SAAI,GAAa,EAAE,CAAC;QACpB,iBAAY,GAAa,EAAE,CAAC;QAE5B,cAAS,GAAwB,IAAI,CAAC;QACtC,gBAAW,GAA+B,IAAI,CAAC;QAG9C,WAAM,GAAG;YACf,OAAO,EAAE,sCAAsC;YAC/C,UAAU,EAAE,sCAAsC;YAClD,aAAa,EAAE,sCAAsC;SACtD,CAAC;QACM,0BAAqB,GAAmC,IAAI,CAAC;QAC7D,6BAAwB,GAAmC,IAAI,CAAC;QAGtE,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAChD,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAChC,CAAC;IAjCM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,UAAU;SACjB,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,UAA+B;QACpD,IAAI,UAAU,CAAC,SAAS,KAAK,OAAO,EAAE;YACpC,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAwBD,aAAa;IACN,KAAK,CAAC,KAAY,IAAS,CAAC;IAE5B,KAAK,CAAC,WAAW;QACtB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAC1C;QACD,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,CAAC,MAAW,EAAE,EAAE;YAC9C,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;gBAC3C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC;QACF,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW;aAC1C,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE;aAChC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW;aAC7C,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE;aAChC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAEhD,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC,IAAc,EAAE,EAAE;gBAC3D,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;oBACxC,IAAI,CAAC,SAAS,EAAE,CAAC;iBAClB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEM,KAAK,CAAC,cAAc;;QACzB,aAAM,IAAI,CAAC,WAAW,0CAAE,cAAc,GAAE,CAAC;IAC3C,CAAC;IAEM,KAAK,CAAC,gBAAgB;QAC3B,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAClC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC5C;QACD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,CAAC;QAC5D,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IACrD,CAAC;CACF;AA5ED,2BA4EC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.RS_Seek3\n */\n\nimport Obniz from \"../../../obniz\";\nimport BleRemoteCharacteristic from \"../../../obniz/libs/embeds/bleHci/bleRemoteCharacteristic\";\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface from \"../../../obniz/ObnizPartsBleInterface\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface RS_Seek3Options {}\n\nexport default class RS_Seek3 implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"RS_Seek3\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral) {\n    if (peripheral.localName !== \"Seek3\") {\n      return false;\n    }\n    return true;\n  }\n\n  public keys: string[] = [];\n  public requiredKeys: string[] = [];\n  public params: any;\n  public onpressed: (() => void) | null = null;\n  public _peripheral: BleRemotePeripheral | null = null;\n  public ondisconnect?: (reason: any) => void;\n\n  private _uuids = {\n    service: \"0EE71523-981A-46B8-BA64-019261C88478\",\n    buttonChar: \"0EE71524-981A-46B8-BA64-019261C88478\",\n    tempHumidChar: \"0EE7152C-981A-46B8-BA64-019261C88478\",\n  };\n  private _buttonCharacteristic: BleRemoteCharacteristic | null = null;\n  private _tempHumidCharacteristic: BleRemoteCharacteristic | null = null;\n\n  constructor(peripheral: BleRemotePeripheral | null) {\n    if (peripheral && !RS_Seek3.isDevice(peripheral)) {\n      throw new Error(\"peripheral is not RS_Seek3\");\n    }\n    this._peripheral = peripheral;\n  }\n\n  // @ts-ignore\n  public wired(obniz: Obniz): void {}\n\n  public async connectWait() {\n    if (!this._peripheral) {\n      throw new Error(\"RS_Seek3 is not find.\");\n    }\n    this._peripheral.ondisconnect = (reason: any) => {\n      if (typeof this.ondisconnect === \"function\") {\n        this.ondisconnect(reason);\n      }\n    };\n    await this._peripheral.connectWait();\n    this._buttonCharacteristic = this._peripheral\n      .getService(this._uuids.service)!\n      .getCharacteristic(this._uuids.buttonChar);\n    this._tempHumidCharacteristic = this._peripheral\n      .getService(this._uuids.service)!\n      .getCharacteristic(this._uuids.tempHumidChar);\n\n    if (this._buttonCharacteristic) {\n      this._buttonCharacteristic.registerNotify((data: number[]) => {\n        if (typeof this.onpressed === \"function\") {\n          this.onpressed();\n        }\n      });\n    }\n  }\n\n  public async disconnectWait() {\n    await this._peripheral?.disconnectWait();\n  }\n\n  public async getTempHumidWait(): Promise<{ temperature: number; humidity: number }> {\n    if (!this._tempHumidCharacteristic) {\n      throw new Error(\"device is not connected\");\n    }\n    const data = await this._tempHumidCharacteristic.readWait();\n    return { temperature: data[0], humidity: data[1] };\n  }\n}\n"]}