{"version":3,"sources":["../src/parts/Ble/LogttaAccel/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,mBAAmB,MAAM,uDAAuD,CAAC;AACxF,OAAO,sBAAsB,EAAE,EAAE,iBAAiB,EAAE,MAAM,uCAAuC,CAAC;AAElG,MAAM,WAAW,mBAAmB;CAAG;AAEvC,MAAM,WAAW,qBAAqB;IACpC,QAAQ,EAAE,MAAM,CAAC;IACjB,QAAQ,EAAE,MAAM,CAAC;IACjB,OAAO,EAAE,MAAM,CAAC;IAChB,IAAI,EAAE,MAAM,CAAC;IACb,OAAO,EAAE;QACP,UAAU,EAAE,MAAM,CAAC;QACnB,cAAc,EAAE,MAAM,CAAC;QACvB,GAAG,EAAE,OAAO,CAAC;QACb,WAAW,EAAE,MAAM,CAAC;QACpB,UAAU,EAAE,MAAM,CAAC;QACnB,gBAAgB,EAAE,MAAM,CAAC;KAC1B,CAAC;IACF,WAAW,EAAE,MAAM,CAAC;IACpB,QAAQ,EAAE,MAAM,CAAC;IACjB,KAAK,EAAE,MAAM,EAAE,CAAC;CACjB;AAED,MAAM,WAAW,sBAAsB;IACrC,CAAC,EAAE;QACD,IAAI,EAAE,MAAM,CAAC;QACb,GAAG,EAAE,MAAM,CAAC;KACb,CAAC;IACF,CAAC,EAAE;QACD,IAAI,EAAE,MAAM,CAAC;QACb,GAAG,EAAE,MAAM,CAAC;KACb,CAAC;IACF,CAAC,EAAE;QACD,IAAI,EAAE,MAAM,CAAC;QACb,GAAG,EAAE,MAAM,CAAC;KACb,CAAC;CACH;AAED,MAAM,CAAC,OAAO,OAAO,YAAa,YAAW,sBAAsB;WACnD,IAAI,IAAI,iBAAiB;WAMzB,QAAQ,CAAC,UAAU,EAAE,mBAAmB,GAAG,OAAO;WAsBlD,WAAW,CAAC,UAAU,EAAE,mBAAmB,GAAG,qBAAqB,GAAG,IAAI;WAsD1E,YAAY,CAAC,UAAU,EAAE,mBAAmB,GAAG,sBAAsB,GAAG,IAAI;IA6B1F,OAAO,CAAC,MAAM,CAAC,SAAS,CAKtB;IAEK,WAAW,EAAE,mBAAmB,GAAG,IAAI,CAAQ;;CAGvD","file":"index.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Logtta_Accel\n */\n\nimport Obniz from \"../../../obniz\";\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface, { ObnizPartsBleInfo } from \"../../../obniz/ObnizPartsBleInterface\";\n\nexport interface Logtta_AccelOptions {}\n\nexport interface Logtta_Accel_ScanData {\n  revision: number;\n  sequence: number;\n  battery: number;\n  name: string;\n  setting: {\n    temp_cycle: number;\n    accel_sampling: number;\n    hpf: boolean;\n    accel_range: number;\n    accel_axis: number;\n    accel_resolution: number;\n  };\n  temperature: number;\n  humidity: number;\n  alert: number[];\n}\n\nexport interface Logtta_Accel_AccelData {\n  x: {\n    peak: number;\n    rms: number;\n  };\n  y: {\n    peak: number;\n    rms: number;\n  };\n  z: {\n    peak: number;\n    rms: number;\n  };\n}\n\nexport default class Logtta_Accel implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsBleInfo {\n    return {\n      name: \"Logtta_Accel\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral): boolean {\n    const advertise = peripheral.advertise_data_rows.filter((adv: number[]) => {\n      let find = false;\n      if (this.deviceAdv.length > adv.length) {\n        return find;\n      }\n      for (let index = 0; index < this.deviceAdv.length; index++) {\n        if (this.deviceAdv[index] === -1) {\n          continue;\n        }\n        if (adv[index] === this.deviceAdv[index]) {\n          find = true;\n          continue;\n        }\n        find = false;\n        break;\n      }\n      return find;\n    });\n    return advertise.length !== 0;\n  }\n\n  public static getScanData(peripheral: BleRemotePeripheral): Logtta_Accel_ScanData | null {\n    if (!Logtta_Accel.isDevice(peripheral)) {\n      return null;\n    }\n\n    if (peripheral.adv_data && peripheral.adv_data.length === 31) {\n      const d = peripheral.adv_data;\n\n      let sampling = 0;\n      switch (d[18]) {\n        case 0x00:\n          sampling = 800;\n          break;\n        case 0x01:\n          sampling = 400;\n          break;\n        case 0x02:\n          sampling = 200;\n          break;\n        case 0x03:\n          sampling = 100;\n          break;\n        case 0x04:\n          sampling = 50;\n          break;\n      }\n\n      const alertArray: number[] = [];\n      alertArray.push((d[26] & 0b11110000) >> 4);\n      alertArray.push(d[26] & 0b00001111);\n      alertArray.push((d[27] & 0b11110000) >> 4);\n      alertArray.push(d[27] & 0b00001111);\n\n      return {\n        revision: d[5],\n        sequence: d[6],\n        battery: d[7],\n        name: new TextDecoder().decode(new Uint8Array(d.slice(8, 16))),\n        setting: {\n          temp_cycle: d[16] | (d[17] << 8),\n          accel_sampling: sampling,\n          hpf: !!(d[19] & 0b00010000),\n          accel_range: 2 * ((d[19] & 0b00000011) + 1),\n          accel_axis: d[20] & 0b00000111,\n          accel_resolution: d[21],\n        },\n        temperature: Math.floor((((d[22] | (d[23] << 8)) / 65535) * 175 - 45) * 100) / 100,\n        humidity: Math.floor(((d[24] | (d[25] << 8)) / 65535) * 100 * 100) / 100,\n        alert: alertArray,\n      };\n    }\n    return null;\n  }\n\n  public static getAccelData(peripheral: BleRemotePeripheral): Logtta_Accel_AccelData | null {\n    if (!Logtta_Accel.isDevice(peripheral)) {\n      return null;\n    }\n\n    if (peripheral.scan_resp && peripheral.scan_resp.length === 31) {\n      const d = peripheral.scan_resp;\n\n      // console.log(\n      //   `x peak ${data.x.peak} rms ${data.x.rms} y peak ${data.y.peak} rms ${data.y.rms} z peak ${data.z.peak} rms ${data.z.rms} address ${data.address}`,\n      // );\n      return {\n        x: {\n          peak: d[5] | (d[6] << 8),\n          rms: d[7] | (d[8] << 8) | (d[9] << 16) | (d[10] << 24) | (d[11] << 32) | (d[12] << 40),\n        },\n        y: {\n          peak: d[13] | (d[14] << 8),\n          rms: d[15] | (d[16] << 8) | (d[17] << 16) | (d[18] << 24) | (d[19] << 32) | (d[20] << 40),\n        },\n        z: {\n          peak: d[21] | (d[22] << 8),\n          rms: d[23] | (d[24] << 8) | (d[25] << 16) | (d[26] << 24) | (d[27] << 32) | (d[28] << 40),\n        },\n      };\n    }\n    return null;\n  }\n\n  private static deviceAdv: number[] = [\n    0xff, // Manufacturer vendor code\n    0x10, // Manufacturer vendor code\n    0x05, // Magic code\n    0x05, // Magic code\n  ];\n\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  constructor() {}\n}\n"]}