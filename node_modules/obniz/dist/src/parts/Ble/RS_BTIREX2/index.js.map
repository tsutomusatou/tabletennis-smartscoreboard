{"version":3,"sources":["../src/parts/Ble/RS_BTIREX2/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.RS_BTIREX2\n */\n\nimport Obniz from \"../../../obniz\";\nimport BleRemoteCharacteristic from \"../../../obniz/libs/embeds/bleHci/bleRemoteCharacteristic\";\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface RS_BTIREX2Options {}\n\n// not working\nexport default class RS_BTIREX2 implements ObnizPartsInterface {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"RS_BTIREX2\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral) {\n    if (peripheral.localName && peripheral.localName.startsWith(\"BTIR\")) {\n      return true;\n    }\n    return false;\n  }\n\n  public keys: string[] = [];\n  public requiredKeys: string[] = [];\n  public params: any;\n  public onbuttonpressed: ((pressed: boolean) => void) | null = null;\n\n  private _uuids = {\n    service: \"6e400001-b5a3-f393-e0a9-e50e24dcca9e\",\n    rxChar: \"6e400002-b5a3-f393-e0a9-e50e24dcca9e\",\n    txChar: \"6e400003-b5a3-f393-e0a9-e50e24dcca9e\",\n  };\n  private _peripheral: BleRemotePeripheral | null = null;\n  private _rxCharacteristic: BleRemoteCharacteristic | null = null;\n  private _txCharacteristic: BleRemoteCharacteristic | null = null;\n\n  constructor(peripheral: BleRemotePeripheral | null) {\n    if (peripheral && !RS_BTIREX2.isDevice(peripheral)) {\n      throw new Error(\"peripheral is not RS_BTIREX2\");\n    }\n    this._peripheral = peripheral;\n  }\n\n  // @ts-ignore\n  public wired(obniz: Obniz): void {}\n\n  public async connectWait() {\n    if (!this._peripheral) {\n      throw new Error(\"RS_BTIREX2 is not find.\");\n    }\n    this._peripheral.ondisconnect = () => {\n      console.log(\"disconnect\");\n    };\n    await this._peripheral.connectWait();\n\n    console.error(\"encrypt start\");\n    // const handle = this._peripheral.obnizBle.centralBindings._handles[this._peripheral.address];\n    // this._peripheral.obnizBle.centralBindings._aclStreams[handle].encrypt();\n    this._rxCharacteristic = this._peripheral.getService(this._uuids.service)!.getCharacteristic(this._uuids.rxChar);\n    this._txCharacteristic = this._peripheral.getService(this._uuids.service)!.getCharacteristic(this._uuids.txChar);\n  }\n\n  public _sendAndReceiveWait(payload: number[], crc: number = 0xb6): Promise<number[]> {\n    if (!this._rxCharacteristic || !this._txCharacteristic) {\n      throw new Error(\"device is not connected\");\n    }\n    const data: number[] = new Array(payload.length + 4);\n    data[0] = 0xaa;\n    data[1] = 0;\n    data[2] = payload.length;\n    for (let index = 0; index < payload.length; index++) {\n      data[3 + index] = payload[index];\n    }\n    data[payload.length + 3] = crc;\n    const tx = this._txCharacteristic;\n    const p: Promise<number[]> = new Promise((resolve) => {\n      tx.registerNotify((resultData: number[]) => {\n        console.error(\"CRC \" + crc);\n        resolve(resultData);\n      });\n    });\n    this._rxCharacteristic.write(data);\n    return p;\n  }\n}\n"]}