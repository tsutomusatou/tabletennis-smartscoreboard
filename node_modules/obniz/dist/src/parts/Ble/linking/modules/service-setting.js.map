{"version":3,"sources":["../src/parts/Ble/linking/modules/service-setting.ts"],"names":[],"mappings":"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","file":"service-setting.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Linking\n */\n\n/* ------------------------------------------------------------------\n * node-linking - service-setting.js\n *\n * Copyright (c) 2017-2019, Futomi Hatano, All rights reserved.\n * Released under the MIT license\n * Date: 2019-10-24\n * ---------------------------------------------------------------- */\n\"use strict\";\n\nexport default class LinkingServiceSetting {\n  public SERVICE_ID = 0x04;\n  public SERVICE_NAME = \"PeripheralDeviceSettingOperation\";\n  public MESSAGE_NAME_MAP: any = {\n    \"00\": \"GET_APP_VERSION\",\n    \"01\": \"GET_APP_VERSION_RESP\",\n    \"02\": \"CONFIRM_INSTALL_APP\",\n    \"03\": \"CONFIRM_INSTALL_APP_RESP\",\n    \"04\": \"GET_SETTING_INFORMATION\",\n    \"05\": \"GET_SETTING_INFORMATION_RESP\",\n    \"06\": \"GET_SETTING_NAME\",\n    \"07\": \"GET_SETTING_NAME_RESP\",\n    \"08\": \"SELECT_SETTING_INFORMATION\",\n    \"09\": \"SELECT_SETTING_INFORMATION_RESP\",\n  };\n\n  // Private\n  private _WRITE_MESSAGE_ID_MAP: any = {\n    GET_APP_VERSION: 0x00,\n    CONFIRM_INSTALL_APP: 0x02,\n    GET_SETTING_INFORMATION: 0x04,\n    GET_SETTING_NAME: 0x06,\n    SELECT_SETTING_INFORMATION: 0x08,\n  };\n  private _SETTING_NAME_TYPE_MAP: any = {\n    LEDColorName: 0x00,\n    LEDPatternName: 0x01,\n    VibrationPatternName: 0x02,\n    BeepPatternName: 0x03,\n  };\n  private _device: any = {};\n\n  public setDeviceInfo(info: any) {\n    this._device = info;\n  }\n\n  public parsePayload(pnum: any, buf: any) {\n    let offset = 0;\n    const parameters = [];\n    try {\n      for (let i = 0; i < pnum; i++) {\n        const pid = buf.readUInt8(offset++);\n        let plen_buf = buf.slice(offset, offset + 3);\n        plen_buf = Buffer.concat([plen_buf, Buffer.from([0x00])]);\n        const plen = plen_buf.readUInt32LE(0);\n        offset += 3;\n        const pvalue_buf = buf.slice(offset, offset + plen);\n        offset += plen;\n        parameters.push(this._parseParameter(pid, pvalue_buf));\n      }\n    } catch (e) {}\n    return parameters;\n  }\n\n  public _parseParameter(pid: any, buf: any) {\n    let parsed: any = null;\n    if (pid === 0x00) {\n      parsed = this._parseResultCode(buf);\n    } else if (pid === 0x01) {\n      parsed = this._parseCancel(buf);\n    } else if (pid === 0x02) {\n      parsed = this._parseSettingNameType(buf);\n    } else if (pid === 0x03) {\n      parsed = this._parseAppName(buf);\n    } else if (pid === 0x04) {\n      parsed = this._parseFileVer(buf);\n    } else if (pid === 0x05) {\n      parsed = this._parseFileSize(buf);\n    } else if (pid === 0x06) {\n      parsed = this._parseInstallConfirmStatus(buf);\n    } else if (pid === 0x07) {\n      parsed = this._parseSettingInformationRequest(buf);\n    } else if (pid === 0x08) {\n      parsed = this._parseSettingInformationData(buf);\n    } else if (pid === 0x09) {\n      parsed = this._parseSettingNameData(buf);\n    }\n    if (parsed) {\n      parsed.parameterId = pid;\n    }\n    return parsed;\n  }\n\n  public _parseResultCode(buf: any) {\n    const code = buf.readUInt8(0);\n    let text = \"\";\n    if (code === 0x00) {\n      text = \"OK, request processed correctly\";\n    } else if (code === 0x01) {\n      text = \"Cancel\";\n    } else if (code === 0x02) {\n      text = \"Error, failed\";\n    } else if (code === 0x03) {\n      text = \"Error, no reason defined\";\n    } else if (code === 0x04) {\n      text = \"Error, data not available\";\n    } else if (code === 0x05) {\n      text = \"Error, not supported\";\n    }\n    return {\n      name: \"ResultCode\",\n      resultCode: code,\n      resultText: text,\n    };\n  }\n\n  public _parseCancel(buf: any) {\n    const code = buf.readUInt8(0);\n    let text = \"\";\n    if (code === 0x00) {\n      text = \"User cancel\";\n    }\n    return {\n      name: \"Cancel\",\n      cancelCode: code,\n      cancelText: text,\n    };\n  }\n\n  public _parseSettingNameType(buf: any) {\n    const code = buf.readUInt8(0);\n    let text = \"\";\n    if (code === 0x00) {\n      text = \"LEDColorName\";\n    } else if (code === 0x01) {\n      text = \"LEDPatternName\";\n    } else if (code === 0x02) {\n      text = \"VibrationPatternName\";\n    } else if (code === 0x03) {\n      text = \"BeepPatternName\";\n    }\n    return {\n      name: \"SettingNameType\",\n      settingNameTypeCode: code,\n      settingNameTypeText: text,\n    };\n  }\n\n  public _parseAppName(buf: any) {\n    return {\n      name: \"AppName\",\n      appName: buf.toString(\"UTF-8\"),\n    };\n  }\n\n  public _parseFileVer(buf: any) {\n    const list = [];\n    for (let i = 0; i < buf.length; i++) {\n      list.push(buf.readUInt8(i));\n    }\n    return {\n      name: \"FileVer\",\n      fileVer: list.join(\".\"),\n    };\n  }\n\n  public _parseFileSize(buf: any) {\n    return {\n      name: \"FileSize\",\n      fileSize: buf.readUInt32LE(0),\n    };\n  }\n\n  public _parseInstallConfirmStatus(buf: any) {\n    const code = buf.readUInt8(0);\n    let text = \"\";\n    if (code === 0x00) {\n      text = \"OK, Device has been ready for install\";\n    } else if (code === 0x01) {\n      text = \"Cancel\";\n    } else if (code === 0x02) {\n      text = \"Error, failed\";\n    } else if (code === 0x03) {\n      text = \"Error, no reason defined\";\n    } else if (code === 0x04) {\n      text = \"Error, data not available\";\n    } else if (code === 0x05) {\n      text = \"Error, not supported\";\n    } else if (code === 0x06) {\n      text = \"Error, Device has no space to install\";\n    } else if (code === 0x07) {\n      text = \"Error, Requested file was already installed\";\n    } else if (code === 0x08) {\n      text = \"Error, Newest file was already installed\";\n    }\n    return {\n      name: \"InstallConfirmStatus\",\n      installConfirmStatusCode: code,\n      installConfirmStatusText: text,\n    };\n  }\n\n  public _parseSettingInformationRequest(buf: any) {\n    const code = buf.readUInt8(0);\n    let text = \"\";\n    if (code === 0x00) {\n      text = \"SETTING\";\n    } else if (code === 0x01) {\n      text = \"START_DEMONSTRATION\";\n    } else if (code === 0x02) {\n      text = \"STOP_DEMONSTRATION\";\n    }\n\n    let offset = 1;\n    const settings = [];\n    while (true) {\n      const setting_code = buf.readUInt8(offset);\n      if (setting_code === 0x00) {\n        settings.push({\n          settingCode: setting_code,\n          settingName: \"LED\",\n          colorMax: buf.readUInt8(offset + 1),\n          colorNumber: buf.readUInt8(offset + 2),\n          patternMax: buf.readUInt8(offset + 3),\n          patternNumber: buf.readUInt8(offset + 4),\n          duration: buf.readUInt8(offset + 5),\n        });\n        offset += 5;\n      } else if (setting_code === 0x01) {\n        settings.push({\n          settingCode: setting_code,\n          settingName: \"Vibration\",\n          patternMax: buf.readUInt8(offset + 1),\n          patternNumber: buf.readUInt8(offset + 2),\n          duration: buf.readUInt8(offset + 3),\n        });\n        offset += 3;\n      } else if (setting_code === 0x02) {\n        settings.push({\n          settingCode: setting_code,\n          settingName: \"Beep\",\n          patternMax: buf.readUInt8(offset + 1),\n          patternNumber: buf.readUInt8(offset + 2),\n          duration: buf.readUInt8(offset + 3),\n        });\n        offset += 3;\n      }\n      if (offset >= buf.length) {\n        break;\n      }\n    }\n\n    return {\n      name: \"SettingInformationRequest\",\n      settingInformationRequestCode: code,\n      settingInformationRequestName: text,\n      settingInformationRequestData: settings,\n    };\n  }\n\n  public _parseSettingInformationData(buf: any) {\n    let offset = 0;\n    const settings = [];\n    while (true) {\n      const setting_code = buf.readUInt8(offset);\n      if (setting_code === 0x00) {\n        settings.push({\n          id: setting_code,\n          name: \"LED\",\n          colorMax: buf.readUInt8(offset + 1),\n          colorNumber: buf.readUInt8(offset + 2),\n          patternMax: buf.readUInt8(offset + 3),\n          patternNumber: buf.readUInt8(offset + 4),\n          duration: buf.readUInt8(offset + 5),\n        });\n        offset += 6;\n      } else if (setting_code === 0x01) {\n        settings.push({\n          id: setting_code,\n          name: \"Vibration\",\n          patternMax: buf.readUInt8(offset + 1),\n          patternNumber: buf.readUInt8(offset + 2),\n          duration: buf.readUInt8(offset + 3),\n        });\n        offset += 4;\n      } else if (setting_code === 0x02) {\n        settings.push({\n          id: setting_code,\n          name: \"Beep\",\n          patternMax: buf.readUInt8(offset + 1),\n          patternNumber: buf.readUInt8(offset + 2),\n          duration: buf.readUInt8(offset + 3),\n        });\n        offset += 4;\n      }\n      if (offset >= buf.length) {\n        break;\n      }\n    }\n\n    return {\n      name: \"SettingInformationData\",\n      settingInformationData: settings,\n    };\n  }\n\n  public _parseSettingNameData(buf: any) {\n    const list = [];\n    let offset = 0;\n    while (true) {\n      const len = buf.readUInt8(offset++);\n      const name = buf.slice(offset, offset + len - 1).toString(\"utf-8\");\n      offset += len;\n      list.push(name);\n      if (offset >= buf.length) {\n        break;\n      }\n    }\n\n    return {\n      name: \"SettingNameData\",\n      settingNameData: list,\n    };\n  }\n\n  /* ------------------------------------------------------------------\n   * Method: createRequest(message_name, params)\n   * ---------------------------------------------------------------- */\n  public createRequest(message_name: any, params: any) {\n    if (!(message_name in this._WRITE_MESSAGE_ID_MAP)) {\n      return null;\n    }\n    const buf_list = [];\n    // packet header\n    const header_buf: any = Buffer.alloc(1);\n    header_buf.writeUInt8(parseInt(\"00000011\", 2));\n    buf_list.push(header_buf);\n    // Service ID\n    const sid_buf: any = Buffer.alloc(1);\n    sid_buf.writeUInt8(this.SERVICE_ID);\n    buf_list.push(sid_buf);\n    // Message ID\n    const mid_buf: any = Buffer.alloc(2);\n    mid_buf.writeUInt16LE(this._WRITE_MESSAGE_ID_MAP[message_name]);\n    buf_list.push(mid_buf);\n    // Number of parameters + Payload\n    const pl_buf = this._createPayload(message_name, params);\n    if (!pl_buf) {\n      return null;\n    }\n    buf_list.push(pl_buf);\n\n    return Buffer.concat(buf_list);\n  }\n\n  public _createPayload(message_name: any, params: any) {\n    if (!params || typeof params !== \"object\") {\n      params = {};\n    }\n    if (message_name === \"GET_APP_VERSION\") {\n      return this._createPayloadGetAppVersion(params);\n    } else if (message_name === \"CONFIRM_INSTALL_APP\") {\n      return this._createPayloadConfirmInstallApp(params);\n    } else if (message_name === \"GET_SETTING_INFORMATION\") {\n      return this._createPayloadGetSettingInformation(params);\n    } else if (message_name === \"GET_SETTING_NAME\") {\n      return this._createPayloadGetSettingName(params);\n    } else if (message_name === \"SELECT_SETTING_INFORMATION\") {\n      return this._createPayloadSelectSettingInformation(params);\n    } else {\n      return null;\n    }\n  }\n\n  public _createPropertyBlockBuffer(pid: any, val_buf: any) {\n    const pid_buf = Buffer.from([pid]);\n    let len = 0;\n    if (val_buf) {\n      len = val_buf.length;\n    }\n    let len_buf: any = Buffer.alloc(4);\n    len_buf.writeUInt32LE(len);\n    len_buf = len_buf.slice(0, 3);\n    const buf_list = [pid_buf, len_buf];\n    if (val_buf) {\n      buf_list.push(val_buf);\n    }\n    return Buffer.concat(buf_list);\n  }\n\n  public _createPayloadGetAppVersion(params: any) {\n    let pnum = 0;\n    let app_name = null;\n    if (\"AppName\" in params && typeof params.AppName === \"string\") {\n      app_name = params.AppName;\n      pnum++;\n    } else {\n      return null;\n    }\n    // buffer list\n    const buf_list = [];\n    // Number of parameters\n    const pnum_buf = Buffer.from([pnum]);\n    buf_list.push(pnum_buf);\n    // AppName\n    if (app_name !== null) {\n      const val_buf = Buffer.from(app_name);\n      buf_list.push(this._createPropertyBlockBuffer(0x02, val_buf));\n    }\n    // Create a packet\n    return Buffer.concat(buf_list);\n  }\n\n  public _createPayloadConfirmInstallApp(params: any) {\n    let pnum = 0;\n    let app_name = null;\n    if (\"AppName\" in params && typeof params.AppName === \"string\") {\n      app_name = params.AppName;\n      pnum++;\n    } else {\n      return null;\n    }\n    let file_ver = null;\n    if (\"FileVer\" in params && typeof params.FileVer === \"string\") {\n      file_ver = params.FileVer;\n      pnum++;\n    }\n    let file_size: any = null;\n    if (\"FileSize\" in params && typeof params.FileSize === \"number\" && file_size % 1 === 0) {\n      file_size = params.FileSize;\n      pnum++;\n    }\n\n    // buffer list\n    const buf_list = [];\n    // Number of parameters\n    const pnum_buf = Buffer.from([pnum]);\n    buf_list.push(pnum_buf);\n    // AppName\n    if (app_name !== null) {\n      const val_buf = Buffer.from(app_name);\n      buf_list.push(this._createPropertyBlockBuffer(0x03, val_buf));\n    }\n    // FileVer\n    if (file_ver !== null) {\n      const val_buf = Buffer.from(file_ver);\n      buf_list.push(this._createPropertyBlockBuffer(0x04, val_buf));\n    }\n    // FileSize\n    if (file_size !== null) {\n      const val_buf: any = Buffer.alloc(4);\n      val_buf.writeUInt32LE(file_size);\n      buf_list.push(this._createPropertyBlockBuffer(0x05, val_buf));\n    }\n    // Create a packet\n    return Buffer.concat(buf_list);\n  }\n\n  public _createPayloadGetSettingInformation(params: any) {\n    const pnum_buf = Buffer.from([0]);\n    return pnum_buf;\n  }\n\n  public _createPayloadGetSettingName(params: any) {\n    let pnum = 0;\n    let type = null;\n    if (\"SettingNameType\" in params) {\n      type = params.SettingNameType;\n      if (typeof type === \"number\") {\n        let setting_name = \"\";\n        for (const name in this._SETTING_NAME_TYPE_MAP) {\n          if (this._SETTING_NAME_TYPE_MAP[name] === type) {\n            setting_name = name;\n            break;\n          }\n        }\n        if (!setting_name) {\n          return null;\n        }\n      } else if (typeof type === \"string\") {\n        if (type in this._SETTING_NAME_TYPE_MAP) {\n          type = this._SETTING_NAME_TYPE_MAP[type];\n        } else {\n          return null;\n        }\n      }\n    } else {\n      return null;\n    }\n    pnum++;\n    // buffer list\n    const buf_list = [];\n    // Number of parameters\n    const pnum_buf = Buffer.from([pnum]);\n    buf_list.push(pnum_buf);\n    // SettingNameType\n    if (type !== null) {\n      const val_buf = Buffer.from([type]);\n      buf_list.push(this._createPropertyBlockBuffer(0x02, val_buf));\n    }\n    // Create a packet\n    return Buffer.concat(buf_list);\n  }\n\n  public _createPayloadSelectSettingInformation(params: any) {\n    let pnum = 0;\n    let code = null;\n    if (\"SettingInformationRequest\" in params && typeof params.SettingInformationRequest === \"object\") {\n      const req = params.SettingInformationRequest;\n      if (\n        \"requestCode\" in req &&\n        typeof req.requestCode === \"number\" &&\n        req.requestCode >= 0 &&\n        req.requestCode <= 0x02 &&\n        req.requestCode % 1 === 0\n      ) {\n        code = req.requestCode;\n      } else if (\"requestName\" in req && typeof req.requestName === \"string\") {\n        const name = req.requestName;\n        if (name === \"SETTING\") {\n          code = 0x00;\n        } else if (name === \"START_DEMONSTRATION\") {\n          code = 0x01;\n        } else if (name === \"STOP_DEMONSTRATION\") {\n          code = 0x02;\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n    pnum++;\n\n    let settings = null;\n    if (\"SettingInformationData\" in params) {\n      if (Array.isArray(params.SettingInformationData)) {\n        settings = [];\n        for (let i = 0; i < params.SettingInformationData.length; i++) {\n          const s = params.SettingInformationData[i];\n          let scode = null;\n          let sname = \"\";\n          if (\n            \"settingCode\" in s &&\n            typeof s.settingCode === \"number\" &&\n            s.settingCode >= 0x00 &&\n            s.settingCode <= 0x02 &&\n            s.settingCode % 1 === 0\n          ) {\n            scode = s.settingCode;\n            if (scode === 0x00) {\n              sname = \"LED\";\n            } else if (scode === 0x01) {\n              sname = \"Vibration\";\n            } else if (scode === 0x02) {\n              sname = \"Beep\";\n            }\n          } else if (\"settingName\" in s && typeof s.settingName === \"string\") {\n            sname = s.settingName;\n            if (sname === \"LED\") {\n              scode = 0x00;\n            } else if (sname === \"Vibration\") {\n              scode = 0x01;\n            } else if (sname === \"Beep\") {\n              scode = 0x02;\n            } else {\n              return null;\n            }\n          }\n          if (!(sname in this._device.settings)) {\n            return null;\n          }\n\n          let cn = null;\n          let cm = null;\n          if (scode === 0x00) {\n            // LED\n            if (\"colorNumber\" in s) {\n              if (\n                typeof s.colorNumber === \"number\" &&\n                s.colorNumber >= 0 &&\n                s.colorNumber <= this._device.settings.LED.colorMax &&\n                s.colorNumber % 1 === 0\n              ) {\n                cn = s.colorNumber;\n              } else {\n                return null;\n              }\n            } else {\n              cn = this._device.settings.LED.colorNumber;\n            }\n            cm = this._device.settings.LED.colorMax;\n          }\n\n          let pn = null;\n          if (\"patternNumber\" in s) {\n            if (\n              typeof s.patternNumber === \"number\" &&\n              s.patternNumber >= 0 &&\n              s.patternNumber <= this._device.settings[sname].patternMax &&\n              s.patternNumber % 1 === 0\n            ) {\n              pn = s.patternNumber;\n            } else {\n              return null;\n            }\n          } else {\n            pn = this._device.settings[sname].patternNumber;\n          }\n          const pm = this._device.settings[sname].patternMax;\n\n          let dur = null;\n          if (\"duration\" in s) {\n            if (typeof s.duration === \"number\" && s.duration >= 0 && s.duration <= 0xff && s.duration % 1 === 0) {\n              dur = s.duration;\n              if (dur <= 0x05) {\n                dur = 0x05;\n              } else if (dur <= 0x0a) {\n                dur = 0x0a;\n              } else if (dur <= 0x1e) {\n                dur = 0x1e;\n              } else if (dur <= 0x3c) {\n                dur = 0x3c;\n              } else if (dur <= 0xb4) {\n                dur = 0xb4;\n              }\n            } else {\n              return null;\n            }\n          } else {\n            dur = this._device.settings[sname].duration;\n          }\n          settings.push({\n            settingCode: scode,\n            colorNumber: cn,\n            colorMax: cm,\n            patternNumber: pn,\n            patternMax: pm,\n            duration: dur,\n          });\n        }\n      } else {\n        return null;\n      }\n      if (settings.length === 0) {\n        settings = null;\n      } else {\n        pnum++;\n      }\n    }\n\n    // buffer list\n    const buf_list = [];\n    // Number of parameters\n    const pnum_buf = Buffer.from([pnum]);\n    buf_list.push(pnum_buf);\n    // SettingInformationRequest\n    if (code !== null) {\n      const val_buf = Buffer.from([code]);\n      buf_list.push(this._createPropertyBlockBuffer(0x07, val_buf));\n    }\n    // SettingInformationData\n    if (settings !== null) {\n      const val_buf_list: any = [];\n      settings.forEach((s: any) => {\n        val_buf_list.push(Buffer.from([s.settingCode]));\n        if (s.colorNumber !== null) {\n          val_buf_list.push(Buffer.from([s.colorMax, s.colorNumber]));\n        }\n        val_buf_list.push(Buffer.from([s.patternMax, s.patternNumber]));\n        val_buf_list.push(Buffer.from([s.duration]));\n      });\n      const val_buf = Buffer.concat(val_buf_list);\n      buf_list.push(this._createPropertyBlockBuffer(0x08, val_buf));\n    }\n    // Create a packet\n    return Buffer.concat(buf_list);\n  }\n}\n"]}