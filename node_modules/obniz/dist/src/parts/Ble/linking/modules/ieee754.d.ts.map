{"version":3,"sources":["../src/parts/Ble/linking/modules/ieee754.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAWH,MAAM,CAAC,OAAO,OAAO,cAAc;WACnB,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM;;CA4BvE","file":"ieee754.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Linking\n */\n\n/* ------------------------------------------------------------------\n * node-linking - ieee754.js\n *\n * Copyright (c) 2017, Futomi Hatano, All rights reserved.\n * Released under the MIT license\n * Date: 2017-04-13\n * ---------------------------------------------------------------- */\n\"use strict\";\n\nexport default class LinkingIEEE754 {\n  public static read(n: number, slen: number, elen: number, flen: number) {\n    const sgn = slen ? (n >>> 11) & 0b1 : 0; // sign\n    const max = Math.pow(2, elen) - 1; // maximum of exponent\n    const exp = (n >>> flen) & max; // exponent\n    let fra = 0; // fraction\n    for (let i = 0; i < flen; i++) {\n      if ((n >>> (flen - i - 1)) & 0b1) {\n        fra += Math.pow(2, -(i + 1));\n      }\n    }\n    if (exp === 0 && fra === 0) {\n      return 0;\n    } else if (exp === 0 && fra !== 0) {\n      const m = Math.pow(2, elen - 1) - 1; // median (7 or 15)\n      const v = Math.pow(-1, sgn) * fra * Math.pow(2, 1 - m);\n      return v;\n    } else if (exp >= 1 && exp <= max - 1) {\n      const m = Math.pow(2, elen - 1) - 1; // median (7 or 15)\n      const v = Math.pow(-1, sgn) * (1 + fra) * Math.pow(2, exp - m);\n      return v;\n    } else if (exp === max && fra === 0) {\n      return Infinity;\n    } else {\n      return NaN;\n    }\n  }\n\n  constructor() {}\n}\n"]}