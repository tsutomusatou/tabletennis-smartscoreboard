{"version":3,"sources":["../src/parts/Ble/linking/modules/advertising.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAaH,MAAM,CAAC,OAAO,OAAO,kBAAkB;WACvB,KAAK,CAAC,UAAU,EAAE,GAAG;;;;;;;;;;;;;;;;WA8CrB,uBAAuB,CAAC,GAAG,EAAE,GAAG;;CAwH/C","file":"advertising.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Linking\n */\n\n/* ------------------------------------------------------------------\n * node-linking - advertising.js\n *\n * Copyright (c) 2017-2019, Futomi Hatano, All rights reserved.\n * Released under the MIT license\n * Date: 2019-11-02\n * ---------------------------------------------------------------- */\n\"use strict\";\n\nimport LinkingIEEE754 from \"./ieee754\";\n\nexport default class LinkingAdvertising {\n  public static parse(peripheral: any) {\n    const ad = peripheral;\n    const manu = ad.manufacturerData;\n    if (!manu || manu.length < 8) {\n      return null;\n    }\n    // Company identifier\n    const company_id = manu.readUInt16LE(0);\n    let company_name = \"Unknown\";\n    if (company_id === 0x02e2) {\n      company_name = \"NTT docomo\";\n    }\n    // Version\n    const version = manu.readUInt8(2) >>> 4;\n    // Vendor identifier\n    const vendor_id = (manu.readUInt16BE(2) >>> 4) & 0b11111111;\n    // Individual number\n    const indi_num = (manu.readUInt32BE(3) >>> 8) & (Math.pow(2, 20) - 1);\n    // Beacon Data\n    const beacon_data_list = [];\n    for (let offset = 6; offset < manu.length; offset += 2) {\n      const beacon_buf = manu.slice(offset, offset + 2);\n      // Beacon service data\n      if (beacon_buf.length === 2) {\n        const beacon_data = this._parseBeaconServiceData(beacon_buf);\n        beacon_data_list.push(beacon_data);\n      }\n    }\n    return {\n      id: peripheral.id,\n      uuid: peripheral.uuid,\n      address: peripheral.address,\n      localName: ad.localName,\n      serviceUuids: ad.serviceUuids,\n      txPowerLevel: 0,\n      rssi: peripheral.rssi,\n      distance: Math.pow(10, (ad.txPowerLevel - peripheral.rssi) / 20),\n      companyId: company_id,\n      companyName: company_name,\n      version,\n      vendorId: vendor_id,\n      individualNumber: indi_num,\n      beaconDataList: beacon_data_list,\n    };\n  }\n\n  public static _parseBeaconServiceData(buf: any) {\n    const bufn = buf.readUInt16BE(0);\n    const service_id = bufn >>> 12;\n    const n = bufn & 0b0000111111111111;\n    let res: any = {};\n    if (service_id === 0) {\n      res = {\n        name: \"General\",\n      };\n    } else if (service_id === 1) {\n      res = {\n        name: \"Temperature (Â°C)\",\n        temperature: LinkingIEEE754.read(n, 1, 4, 7),\n      };\n    } else if (service_id === 2) {\n      res = {\n        name: \"Humidity (%)\",\n        humidity: LinkingIEEE754.read(n, 0, 4, 8),\n      };\n    } else if (service_id === 3) {\n      res = {\n        name: \"Air pressure (hPa)\",\n        pressure: LinkingIEEE754.read(n, 0, 5, 7),\n      };\n    } else if (service_id === 4) {\n      res = {\n        name: \"Remaining battery power (Threshold value or less)\",\n        chargeRequired: n & 0b0000100000000000 ? true : false,\n        chargeLevel: Math.min((n & 0b0000011111111111) / 10, 100),\n      };\n    } else if (service_id === 5) {\n      const code = n & 0b0000111111111111;\n      let text = \"\";\n      if (code === 0x00) {\n        text = \"Power\";\n      } else if (code === 0x01) {\n        text = \"Return\";\n      } else if (code === 0x02) {\n        text = \"SingleClick\";\n      } else if (code === 0x03) {\n        text = \"Home\";\n      } else if (code === 0x04) {\n        text = \"DoubleClick\";\n      } else if (code === 0x05) {\n        text = \"VolumeUp\";\n      } else if (code === 0x06) {\n        text = \"VolumeDown\";\n      } else if (code === 0x07) {\n        text = \"LongPress\";\n      } else if (code === 0x08) {\n        text = \"Pause\";\n      } else if (code === 0x09) {\n        text = \"LongPressRelease\";\n      } else if (code === 0x0a) {\n        text = \"FastForward\";\n      } else if (code === 0x0b) {\n        text = \"ReWind\";\n      } else if (code === 0x0c) {\n        text = \"Shutter\";\n      } else if (code === 0x0d) {\n        text = \"Up\";\n      } else if (code === 0x0e) {\n        text = \"Down\";\n      } else if (code === 0x0f) {\n        text = \"Left\";\n      } else if (code === 0x10) {\n        text = \"Right\";\n      } else if (code === 0x11) {\n        text = \"Enter\";\n      } else if (code === 0x12) {\n        text = \"Menu\";\n      } else if (code === 0x13) {\n        text = \"Play\";\n      } else if (code === 0x14) {\n        text = \"Stop\";\n      }\n\n      res = {\n        name: \"Pressed button information\",\n        buttonId: code,\n        buttonName: text,\n      };\n    } else if (service_id === 6) {\n      res = {\n        name: \"Opening/closing\",\n        openingStatus: n & 0b0000100000000000 ? true : false,\n        openingCount: n & 0b0000011111111111,\n      };\n    } else if (service_id === 7) {\n      res = {\n        name: \"Human detection\",\n        humanDetectionResponse: n & 0b0000100000000000 ? true : false,\n        humanDetectionCount: n & 0b0000011111111111,\n      };\n    } else if (service_id === 8) {\n      res = {\n        name: \"Vibration\",\n        moveResponse: n & 0b0000100000000000 ? true : false,\n        moveCount: n & 0b0000011111111111,\n      };\n    } else if (service_id === 9) {\n      let illuminance = n;\n      if (n >> 11) {\n        illuminance = (n - 2047) * 50 + 2000;\n      }\n      res = {\n        name: \"Illuminance (lx)\",\n        illuminance,\n      };\n    } else if (service_id === 15) {\n      res = {\n        name: \"Vendor\",\n        bin: (\"000000000000\" + n.toString(2)).slice(-12),\n      };\n    }\n    res.serviceId = service_id;\n    return res;\n  }\n\n  constructor() {}\n}\n"]}