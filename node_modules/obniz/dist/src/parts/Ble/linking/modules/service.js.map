{"version":3,"sources":["../src/parts/Ble/linking/modules/service.ts"],"names":[],"mappings":"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","file":"service.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Linking\n */\n\n/* ------------------------------------------------------------------\n * node-linking - service.js\n *\n * Copyright (c) 2017, Futomi Hatano, All rights reserved.\n * Released under the MIT license\n * Date: 2017-04-15\n * ---------------------------------------------------------------- */\n\"use strict\";\nimport LinkingServiceNotification from \"./service-notification\";\nimport LinkingServiceOperation from \"./service-operation.js\";\nimport LinkingServiceProperty from \"./service-property.js\";\nimport LinkingServiceSensor from \"./service-sensor.js\";\nimport LinkingServiceSetting from \"./service-setting.js\";\n\nexport default class LinkingService {\n  public _services: any = {\n    \"00\": new LinkingServiceProperty(),\n    \"01\": new LinkingServiceNotification(),\n    \"02\": new LinkingServiceOperation(),\n    \"03\": new LinkingServiceSensor(),\n    \"04\": new LinkingServiceSetting(),\n  };\n\n  public _write_message_name_map: any = {\n    // PeripheralDevicePropertyInformation Service\n    GET_DEVICE_INFORMATION: \"00\",\n    // PeripheralDeviceNotification Service\n    CONFIRM_NOTIFY_CATEGORY: \"01\",\n    NOTIFY_INFORMATION: \"01\",\n    // PeripheralDeviceSensorInformation Service\n    GET_SENSOR_INFO: \"03\",\n    SET_NOTIFY_SENSOR_INFO: \"03\",\n    // PeripheralDeviceSettingOperation Service\n    GET_APP_VERSION: \"04\",\n    CONFIRM_INSTALL_APP: \"04\",\n    GET_SETTING_INFORMATION: \"04\",\n    GET_SETTING_NAME: \"04\",\n    SELECT_SETTING_INFORMATION: \"04\",\n  };\n\n  public _device_info: any = null;\n\n  public setDeviceInfo(device_info: any) {\n    for (const code in this._services) {\n      this._services[code].setDeviceInfo(device_info);\n    }\n    this._device_info = device_info;\n  }\n\n  public parseResponse(buf: any) {\n    const service_id_hex = buf.slice(1, 2).toString(\"hex\");\n    const service = this._services[service_id_hex];\n    if (!service) {\n      return null;\n    }\n    const service_id = buf.readUInt8(1);\n    const msg_id = buf.readUInt16LE(2);\n    // let msg_id = buf.readUInt8(2);\n    const msg_id_hex = buf.slice(2, 3).toString(\"hex\");\n    const pnum = buf.readUInt8(4);\n    const payload_buf = buf.slice(5, buf.length);\n    const parameters = service.parsePayload(pnum, payload_buf);\n\n    const parsed = {\n      buffer: buf,\n      serviceId: service_id,\n      serviceName: service.SERVICE_NAME,\n      messageId: msg_id,\n      messageName: service.MESSAGE_NAME_MAP[msg_id_hex],\n      parameters,\n    };\n    return parsed;\n  }\n\n  public createRequest(message_name: any, params: any) {\n    if (!(message_name in this._write_message_name_map)) {\n      return null;\n    }\n    const sid = this._write_message_name_map[message_name];\n    const service = this._services[sid];\n    const buf = service.createRequest(message_name, params);\n    return buf;\n  }\n\n  public isSupportedWriteMessageName(message_name: any) {\n    if (!message_name) {\n      return false;\n    }\n    let sid = this._write_message_name_map[message_name];\n    if (!sid) {\n      return false;\n    }\n    sid = parseInt(sid, 10);\n    const services = this._device_info && this._device_info.services ? this._device_info.services : null;\n    if (!services) {\n      return false;\n    }\n    let res = false;\n    for (const k in services) {\n      if (services[k] === sid) {\n        res = true;\n        break;\n      }\n    }\n    return res;\n  }\n}\n"]}