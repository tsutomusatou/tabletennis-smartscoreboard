{"version":3,"sources":["../src/parts/Ble/LogttaAD/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAIH,OAAO,mBAAmB,MAAM,uDAAuD,CAAC;AACxF,OAAO,sBAAsB,EAAE,EAAE,iBAAiB,EAAE,MAAM,uCAAuC,CAAC;AAElG,MAAM,WAAW,gBAAgB;CAAG;AAEpC,MAAM,WAAW,cAAc;IAC7B,MAAM,EAAE,MAAM,CAAC;IACf,IAAI,EAAE,MAAM,CAAC;IACb,KAAK,EAAE,MAAM,CAAC;CACf;AACD,MAAM,CAAC,OAAO,OAAO,SAAU,YAAW,sBAAsB;WAChD,IAAI,IAAI,iBAAiB;WAMzB,QAAQ,CAAC,UAAU,EAAE,mBAAmB;IAItD,OAAO,CAAC,MAAM,CAAC,QAAQ;IAIhB,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE,cAAc,KAAK,IAAI,CAAC;IAC1C,WAAW,EAAE,IAAI,GAAG,mBAAmB,CAAC;IACxC,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,KAAK,IAAI,CAAC;gBAEhC,UAAU,EAAE,mBAAmB,GAAG,IAAI;IAOrC,WAAW;IAcX,cAAc;IAMd,UAAU,IAAI,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC;IAc5C,aAAa,IAAI,OAAO,CAAC,MAAM,CAAC;IAIhC,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC;IAI9B,YAAY,IAAI,OAAO,CAAC,MAAM,CAAC;IAI/B,eAAe;CAiB7B","file":"index.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.Logtta_AD\n */\n\nimport Obniz from \"../../../obniz\";\nimport bleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface, { ObnizPartsBleInfo } from \"../../../obniz/ObnizPartsBleInterface\";\n\nexport interface Logtta_ADOptions {}\n\nexport interface Logtta_AD_Data {\n  ampere: number;\n  volt: number;\n  count: number;\n}\nexport default class Logtta_AD implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsBleInfo {\n    return {\n      name: \"Logtta_AD\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral) {\n    return peripheral.localName === \"Analog\";\n  }\n\n  private static get_uuid(uuid: string): string {\n    return `4e43${uuid}-6687-4f3c-a1c3-1c327583f29d`;\n  }\n\n  public onNotify?: (data: Logtta_AD_Data) => void;\n  public _peripheral: null | BleRemotePeripheral;\n  public ondisconnect?: (reason: any) => void;\n\n  constructor(peripheral: BleRemotePeripheral | null) {\n    if (peripheral && !Logtta_AD.isDevice(peripheral)) {\n      throw new Error(\"peripheral is not logtta AD\");\n    }\n    this._peripheral = peripheral;\n  }\n\n  public async connectWait() {\n    if (!this._peripheral) {\n      throw new Error(\"Logtta AD not found\");\n    }\n    if (!this._peripheral.connected) {\n      this._peripheral.ondisconnect = (reason: any) => {\n        if (typeof this.ondisconnect === \"function\") {\n          this.ondisconnect(reason);\n        }\n      };\n      await this._peripheral.connectWait();\n    }\n  }\n\n  public async disconnectWait() {\n    if (this._peripheral && this._peripheral.connected) {\n      await this._peripheral.disconnectWait();\n    }\n  }\n\n  public async getAllWait(): Promise<Logtta_AD_Data | null> {\n    if (!(this._peripheral && this._peripheral.connected)) {\n      return null;\n    }\n\n    const c = this._peripheral!.getService(Logtta_AD.get_uuid(\"AE20\"))!.getCharacteristic(Logtta_AD.get_uuid(\"AE21\"));\n    const data: number[] = await c!.readWait();\n    return {\n      ampere: (((data[0] << 8) | data[1]) * 916) / 16,\n      volt: (((data[0] << 8) | data[1]) * 916) / 4,\n      count: (data[2] << 8) | data[3],\n    };\n  }\n\n  public async getAmpereWait(): Promise<number> {\n    return (await this.getAllWait())!.ampere;\n  }\n\n  public async getVoltWait(): Promise<number> {\n    return (await this.getAllWait())!.volt;\n  }\n\n  public async getCountWait(): Promise<number> {\n    return (await this.getAllWait())!.count;\n  }\n\n  public async startNotifyWait() {\n    if (!(this._peripheral && this._peripheral.connected)) {\n      return;\n    }\n\n    const c = this._peripheral!.getService(Logtta_AD.get_uuid(\"AE20\"))!.getCharacteristic(Logtta_AD.get_uuid(\"AE21\"));\n\n    await c!.registerNotifyWait((data: number[]) => {\n      if (this.onNotify) {\n        this.onNotify({\n          ampere: (16 / 916) * ((data[0] << 8) | data[1]),\n          volt: (4 / 916) * ((data[0] << 8) | data[1]),\n          count: (data[2] << 8) | data[3],\n        });\n      }\n    });\n  }\n}\n"]}