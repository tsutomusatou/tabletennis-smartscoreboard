{"version":3,"sources":["../src/parts/Ble/iBS01/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAeH,MAAqB,KAAK;IAkFxB;QAFO,gBAAW,GAA+B,IAAI,CAAC;IAEvC,CAAC;IAjFT,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,OAAO;SACd,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,UAA+B;QACpD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE;YACtD,OAAO,KAAK,CAAC;SACd;QACD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC1D,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;gBAChC,SAAS;aACV;YACD,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBACxD,SAAS;aACV;YACD,OAAO,KAAK,CAAC;SACd;QACD,OAAO,CACL,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,IAAI;YAChC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,IAAI;YAChC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,IAAI;YAChC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,IAAI,CACjC,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,UAA+B;QACnD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;QACD,MAAM,IAAI,GAAe;YACvB,OAAO,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;YACxE,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,KAAK;YAClB,IAAI,EAAE,KAAK;SACZ,CAAC;QAEF,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE;YAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE;YAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;AArDH,wBAmFC;AA5BgB,eAAS,GAAa;IACnC,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;IACF,CAAC,CAAC;CACH,CAAC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.iBS01\n */\n\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface, { ObnizPartsBleInfo } from \"../../../obniz/ObnizPartsBleInterface\";\n\nexport interface IBS01Options {}\n\nexport interface IBS01_Data {\n  battery: number;\n  button: boolean;\n  moving: boolean;\n  hall_sensor: boolean;\n  fall: boolean;\n}\n\nexport default class IBS01 implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsBleInfo {\n    return {\n      name: \"iBS01\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral): boolean {\n    if (this.deviceAdv.length > peripheral.adv_data.length) {\n      return false;\n    }\n    for (let index = 0; index < this.deviceAdv.length; index++) {\n      if (this.deviceAdv[index] === -1) {\n        continue;\n      }\n      if (peripheral.adv_data[index] === this.deviceAdv[index]) {\n        continue;\n      }\n      return false;\n    }\n    return (\n      peripheral.adv_data[12] === 0xff &&\n      peripheral.adv_data[13] === 0xff &&\n      peripheral.adv_data[14] === 0xff &&\n      peripheral.adv_data[15] === 0xff\n    );\n  }\n\n  public static getData(peripheral: BleRemotePeripheral): IBS01_Data | null {\n    if (!IBS01.isDevice(peripheral)) {\n      return null;\n    }\n    const data: IBS01_Data = {\n      battery: (peripheral.adv_data[9] + peripheral.adv_data[10] * 256) * 0.01,\n      button: false,\n      moving: false,\n      hall_sensor: false,\n      fall: false,\n    };\n\n    if (Boolean(peripheral.adv_data[11] & 0b0001)) {\n      data.button = true;\n    }\n    if (Boolean(peripheral.adv_data[11] & 0b0010)) {\n      data.moving = true;\n    }\n    if (Boolean(peripheral.adv_data[11] & 0b0100)) {\n      data.hall_sensor = true;\n    }\n    if (Boolean(peripheral.adv_data[11] & 0b1000)) {\n      data.fall = true;\n    }\n    return data;\n  }\n\n  private static deviceAdv: number[] = [\n    0x02,\n    0x01,\n    0x06,\n    0x12,\n    0xff,\n    0x59, // Manufacturer vendor code\n    0x00, // Manufacturer vendor code\n    0x80, // Magic code\n    0xbc, // Magic code\n    -1, // Battery\n    -1, // Battery\n    -1, // Event\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n    -1, // reserved\n  ];\n\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  constructor() {}\n}\n"]}