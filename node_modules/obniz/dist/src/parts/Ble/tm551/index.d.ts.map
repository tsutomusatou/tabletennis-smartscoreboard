{"version":3,"sources":["../src/parts/Ble/tm551/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,mBAAmB,MAAM,uDAAuD,CAAC;AACxF,OAAO,sBAAsB,EAAE,EAAE,iBAAiB,EAAE,MAAM,uCAAuC,CAAC;AAElG,MAAM,WAAW,YAAY;CAAG;AAEhC,MAAM,WAAW,UAAU;IACzB,OAAO,EAAE,MAAM,CAAC;IAChB,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;CACX;AAED,MAAM,CAAC,OAAO,OAAO,KAAM,YAAW,sBAAsB;WAC5C,IAAI,IAAI,iBAAiB;WAMzB,QAAQ,CAAC,UAAU,EAAE,mBAAmB,GAAG,OAAO;WAgBlD,OAAO,CAAC,UAAU,EAAE,mBAAmB,GAAG,UAAU,GAAG,IAAI;IAazE,OAAO,CAAC,MAAM,CAAC,SAAS,CAqBtB;IAEK,WAAW,EAAE,mBAAmB,GAAG,IAAI,CAAQ;;CAGvD","file":"index.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.TM551\n */\n\nimport BleRemotePeripheral from \"../../../obniz/libs/embeds/bleHci/bleRemotePeripheral\";\nimport ObnizPartsBleInterface, { ObnizPartsBleInfo } from \"../../../obniz/ObnizPartsBleInterface\";\n\nexport interface TM551Options {}\n\nexport interface TM551_Data {\n  battery: number;\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport default class TM551 implements ObnizPartsBleInterface {\n  public static info(): ObnizPartsBleInfo {\n    return {\n      name: \"TM551\",\n    };\n  }\n\n  public static isDevice(peripheral: BleRemotePeripheral): boolean {\n    if (this.deviceAdv.length > peripheral.adv_data.length) {\n      return false;\n    }\n    for (let index = 0; index < this.deviceAdv.length; index++) {\n      if (this.deviceAdv[index] === -1) {\n        continue;\n      }\n      if (peripheral.adv_data[index] === this.deviceAdv[index]) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  public static getData(peripheral: BleRemotePeripheral): TM551_Data | null {\n    if (!TM551.isDevice(peripheral)) {\n      return null;\n    }\n    const data: TM551_Data = {\n      battery: peripheral.adv_data[13],\n      x: peripheral.adv_data[14] + ObnizPartsBleInterface.readFraction(peripheral.adv_data[15]),\n      y: peripheral.adv_data[16] + ObnizPartsBleInterface.readFraction(peripheral.adv_data[17]),\n      z: peripheral.adv_data[18] + ObnizPartsBleInterface.readFraction(peripheral.adv_data[19]),\n    };\n    return data;\n  }\n\n  private static deviceAdv: number[] = [\n    0x02,\n    0x01,\n    0x06,\n    0x03,\n    0x03,\n    0xe1,\n    0xff,\n    -1,\n    -1,\n    -1,\n    -1,\n    0xa1,\n    0x03,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n  ];\n\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  constructor() {}\n}\n"]}