{"version":3,"sources":["../src/parts/Magnet/HMC5883L/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAIH,kEAAsF;AAKtF,MAAqB,QAAS,SAAQ,oBAAU;IAuB9C;QACE,KAAK,EAAE,CAAC;QAHA,gBAAW,GAAgB,GAAG,CAAC;QAIvC,IAAI,CAAC,OAAO,GAAG;YACb,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI;SACX,CAAC;QACF,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAC3B,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAjCM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,UAAU;SACjB,CAAC;IACJ,CAAC;IA+BM,KAAK,CAAC,KAAY;QACvB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnB,wBAAwB;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEM,IAAI;QACT,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,wBAAwB;IAC1B,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAEM,KAAK,CAAC,UAAU;QACrB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC5D,OAAO,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3C,CAAC;IAEM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,SAAS;IACF,KAAK,CAAC,GAAG;QACd,OAAO,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;;AAhEH,2BAiEC;AA1DgB,iBAAQ,GAAG;IACxB,QAAQ,EAAE,IAAI;IACd,QAAQ,EAAE,IAAI;IACd,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,IAAI;IACX,MAAM,EAAE,IAAI;CACb,CAAC;AAEa,eAAM,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC","file":"index.js","sourcesContent":["/**\n * @packageDocumentation\n * @module Parts.HMC5883L\n */\n\nimport Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, { ObnizPartsInfo } from \"../../../obniz/ObnizPartsInterface\";\nimport i2cCompass, { compassUnit, I2cCompassAbstractOptions } from \"../../i2cCompass\";\nimport { I2cInfo, Xyz } from \"../../i2cParts\";\n\nexport interface HMC5883LOptions extends I2cCompassAbstractOptions {}\n\nexport default class HMC5883L extends i2cCompass {\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"HMC5883L\",\n    };\n  }\n\n  private static commands = {\n    config_a: 0x00,\n    config_b: 0x01,\n    mode: 0x02,\n    x_MSB: 0x03,\n    status: 0x09,\n  };\n\n  private static scales = [1 / 1370, 1 / 1090, 1 / 820, 1 / 660, 1 / 440, 1 / 390, 1 / 330, 1 / 230];\n  public i2cinfo: I2cInfo;\n  protected so: number;\n  protected sf: compassUnit;\n  protected range: string;\n\n  protected defaultUnit: compassUnit = \"G\";\n\n  constructor() {\n    super();\n    this.i2cinfo = {\n      address: 0x1e,\n      clock: 100000,\n      voltage: \"3v\",\n      pull: \"3v\",\n    };\n    this.sf = this.defaultUnit;\n    this.so = HMC5883L.scales[1];\n    this.range = \"8G\";\n  }\n\n  public wired(obniz: Obniz) {\n    super.wired(obniz);\n    // this.obniz.wait(500);\n    this.init();\n  }\n\n  public init() {\n    this.reset();\n    // this.obniz.wait(500);\n  }\n\n  public reset() {\n    this.write(HMC5883L.commands.mode, 0x00);\n  }\n\n  public async getAdcWait(): Promise<Xyz> {\n    const raw = await this.readWait(HMC5883L.commands.x_MSB, 6);\n    return HMC5883L.charArrayToXyz(raw, \"b\");\n  }\n\n  public setRange(index: number) {\n    this.write(HMC5883L.commands.config_b, index << 5);\n    this.so = HMC5883L.scales[index];\n  }\n\n  // legacy\n  public async get() {\n    return await this.getWait();\n  }\n}\n"]}