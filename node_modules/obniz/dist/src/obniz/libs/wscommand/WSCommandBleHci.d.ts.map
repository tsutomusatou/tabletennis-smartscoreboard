{"version":3,"sources":["../src/obniz/libs/wscommand/WSCommandBleHci.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,cAAM,eAAe;IACZ,SAAS,EAAE,GAAG,CAAC;IACf,eAAe,SAAM;IACrB,iBAAiB,SAAM;IACvB,eAAe,SAAM;IACrB,eAAe,SAAM;IACrB,8BAA8B,SAAM;gBAE/B,QAAQ,EAAE,GAAG;IAIlB,UAAU;;;;IAYV,kBAAkB;IAMlB,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,GAAG;IAK9B,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,GAAG;IAKhC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,GAAG;IAM9B,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,GAAG;IAWlC,mBAAmB,CAAC,MAAM,EAAE,GAAG;CAUvC;AAED,eAAe,eAAe,CAAC","file":"WSCommandBleHci.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @ignore\n */\nclass WSCommandBleHci {\n  public _delegate: any;\n  public _CommandHCIInit = 41;\n  public _CommandHCIDeinit = 42;\n  public _CommandHCISend = 43;\n  public _CommandHCIRecv = 44;\n  public _CommandHCIAdvertisementFilter = 45;\n\n  constructor(delegate: any) {\n    this._delegate = delegate;\n  }\n\n  public schemaData() {\n    return [\n      { uri: \"/request/ble/hci/init\", onValid: this.init.bind(this) },\n      { uri: \"/request/ble/hci/deinit\", onValid: this.deinit.bind(this) },\n      { uri: \"/request/ble/hci/write\", onValid: this.send.bind(this) },\n      {\n        uri: \"/request/ble/hci/advertisement_filter\",\n        onValid: this.advertisementFilter.bind(this),\n      },\n    ];\n  }\n\n  public notifyFunctionList() {\n    const funcList: any = {};\n    funcList[this._CommandHCIRecv] = this.recv.bind(this);\n    return funcList;\n  }\n\n  public init(params: any, module?: any) {\n    const buf: any = new Uint8Array(0);\n    this._delegate.sendCommand(this._CommandHCIInit, buf);\n  }\n\n  public deinit(params: any, module?: any) {\n    const buf: any = new Uint8Array(0);\n    this._delegate.sendCommand(this._CommandHCIDeinit, buf);\n  }\n\n  public send(params: any, module?: any) {\n    const buf: any = new Uint8Array(params.hci.write.length);\n    buf.set(params.hci.write);\n    this._delegate.sendCommand(this._CommandHCISend, buf);\n  }\n\n  public recv(objToSend: any, payload?: any) {\n    const arr: any = new Array(payload.byteLength);\n    for (let i = 0; i < arr.length; i++) {\n      arr[i] = payload[i];\n    }\n\n    objToSend.ble = objToSend.ble || {};\n    objToSend.ble.hci = objToSend.ble.hci || {};\n    objToSend.ble.hci.read = { data: arr };\n  }\n\n  public advertisementFilter(params: any) {\n    const sendData: number[] = [];\n    params.hci.advertisement_filter.forEach((e: any) => {\n      const one: number[] = [e.range.index, e.range.length, e.value.length, ...e.value];\n      sendData.push(...one);\n    });\n    const buf: any = new Uint8Array(sendData.length);\n    buf.set(sendData);\n    this._delegate.sendCommand(this._CommandHCIAdvertisementFilter, buf);\n  }\n}\n\nexport default WSCommandBleHci;\n"]}