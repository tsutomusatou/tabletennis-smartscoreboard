{"version":3,"sources":["../src/obniz/libs/wscommand/WSCommandPlugin.ts"],"names":[],"mappings":";;;;;AAKA,4DAAoC;AAEpC,MAAM,eAAgB,SAAQ,mBAAS;IAQrC;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEM,IAAI,CAAC,MAAW,EAAE,KAAU;QACjC,MAAM,GAAG,GAAQ,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAC3C,CAAC;IAEM,aAAa,CAAC,IAAS;QAC5B,MAAM,MAAM,GAAQ,IAAI,CAAC,MAAM,CAAC;QAChC,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,OAAO;SACR;QAED,MAAM,UAAU,GAAQ,CAAC,EAAE,GAAG,EAAE,sBAAsB,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAC9E,MAAM,GAAG,GAAQ,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAE1E,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,EAAE;YACnB,IAAI,GAAG,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aAChD;iBAAM;gBACL,MAAM,IAAI,IAAI,CAAC,sBAAsB,CAAC,0BAA0B,CAAC,CAAC;aACnE;SACF;IACH,CAAC;IAEM,gBAAgB,CAAC,SAAc,EAAE,IAAS,EAAE,OAAY;QAC7D,QAAQ,IAAI,EAAE;YACZ,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC;gBACzB,0BAA0B;gBAC1B,MAAM,GAAG,GAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;iBACrB;gBAED,SAAS,CAAC,MAAM,GAAG;oBACjB,OAAO,EAAE,GAAG;iBACb,CAAC;gBACF,MAAM;aACP;SACF;IACH,CAAC;CACF;AAED,kBAAe,eAAe,CAAC","file":"WSCommandPlugin.js","sourcesContent":["/**\n * @packageDocumentation\n * @ignore\n */\nimport JsonBinaryConverter from \"./jsonBinaryConverter\";\nimport WSCommand from \"./WSCommand\";\n\nclass WSCommandPlugin extends WSCommand {\n  public module: any;\n  public _CommandReceive: any; // js <- device\n  public _CommandSend: any; // js -> device\n  public sendCommand: any;\n  public validateCommandSchema: any;\n  public WSCommandNotFoundError: any;\n\n  constructor() {\n    super();\n    this.module = 15;\n\n    this._CommandSend = 0;\n    this._CommandReceive = 1;\n  }\n\n  public send(params: any, index: any) {\n    const buf: any = new Uint8Array(params.send);\n    this.sendCommand(this._CommandSend, buf);\n  }\n\n  public parseFromJson(json: any) {\n    const module: any = json.plugin;\n    if (module === undefined) {\n      return;\n    }\n\n    const schemaData: any = [{ uri: \"/request/plugin/send\", onValid: this.send }];\n    const res: any = this.validateCommandSchema(schemaData, module, \"plugin\");\n\n    if (res.valid === 0) {\n      if (res.invalidButLike.length > 0) {\n        throw new Error(res.invalidButLike[0].message);\n      } else {\n        throw new this.WSCommandNotFoundError(`[network]unknown command`);\n      }\n    }\n  }\n\n  public notifyFromBinary(objToSend: any, func: any, payload: any) {\n    switch (func) {\n      case this._CommandReceive: {\n        // convert buffer to array\n        const arr: any = new Array(payload.byteLength);\n        for (let i = 0; i < arr.length; i++) {\n          arr[i] = payload[i];\n        }\n\n        objToSend.plugin = {\n          receive: arr,\n        };\n        break;\n      }\n    }\n  }\n}\n\nexport default WSCommandPlugin;\n"]}