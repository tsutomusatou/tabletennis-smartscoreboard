{"version":3,"sources":["../src/obniz/libs/network/wifi.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAEH,oDAA4B;AAG5B,MAAqB,IAAI;IAIvB,YAAY,KAAY,EAAE,EAAU;QAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACI,QAAQ;QACb,IAAI,gBAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAa,EAAE,OAAO,CAAC,EAAE;YAChD,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAY,EAAE,MAAW,EAAE,EAAE;YAC/C,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;OAMG;IACI,GAAG;QACR,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED;;;OAGG;IACI,QAAQ,CAAC,GAAQ;QACtB,IAAI,GAAG,CAAC,IAAI,EAAE;YACZ,2FAA2F;YAC3F,MAAM,QAAQ,GAAQ,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aACpB;SACF;IACH,CAAC;IAEO,MAAM;QACZ,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC7B,CAAC;IAEO,mBAAmB,CAAC,QAAa;QACvC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtC;IACH,CAAC;CACF;AAhED,uBAgEC","file":"wifi.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components\n */\n\nimport semver from \"semver\";\nimport Obniz from \"../../index\";\n\nexport default class WiFi {\n  private Obniz: Obniz;\n  private connectObservers: any;\n\n  constructor(obniz: Obniz, id: number) {\n    this.Obniz = obniz;\n    this._reset();\n  }\n\n  /**\n   * Scan WiFi\n   *\n   * ```javascript\n   * // Javascript Example\n   * console.log(await obniz.wifi.scanWait());\n   * ```\n   *\n   */\n  public scanWait(): Promise<any> {\n    if (semver.lt(this.Obniz.firmware_ver!, \"3.3.0\")) {\n      throw new Error(`Please update obniz firmware >= 3.3.0`);\n    }\n\n    this.connectObservers = [];\n    return new Promise((resolve: any, reject: any) => {\n      this._addConnectObserver(resolve);\n      this.Obniz.send({ wifi: { scan: true } });\n    });\n  }\n\n  /**\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.wifi.end();\n   * ```\n   */\n  public end() {\n    this._reset();\n  }\n\n  /**\n   * @ignore\n   * @param obj\n   */\n  public notified(obj: any) {\n    if (obj.scan) {\n      /* Connectino state update. response of connect(), close from destination, response from */\n      const callback: any = this.connectObservers.shift();\n      if (callback) {\n        callback(obj.scan);\n      }\n    }\n  }\n\n  private _reset() {\n    this.connectObservers = [];\n  }\n\n  private _addConnectObserver(callback: any) {\n    if (callback) {\n      this.connectObservers.push(callback);\n    }\n  }\n}\n"]}