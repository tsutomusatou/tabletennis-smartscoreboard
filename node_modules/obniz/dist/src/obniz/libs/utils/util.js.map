{"version":3,"sources":["../src/obniz/libs/utils/util.ts"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore\n */\nclass ObnizUtil {\n  /**\n   * @ignore\n   * @param params\n   * @param keys\n   * @private\n   */\n  public static _keyFilter(params: any, keys: any) {\n    let filterdParams: any = {};\n    if (typeof params !== \"object\") {\n      return filterdParams;\n    }\n    filterdParams = Object.keys(params)\n      .filter((key) => keys.includes(key))\n      .reduce((obj: any, key) => {\n        obj[key] = params[key];\n        return obj;\n      }, {});\n\n    return filterdParams;\n  }\n\n  /**\n   * @ignore\n   * @return {String} key name of not found.\n   */\n  public static _requiredKeys(params: any, keys: any) {\n    if (typeof params !== \"object\") {\n      return keys[0];\n    }\n\n    for (const index in keys) {\n      if (!(keys[index] in params)) {\n        return keys[index];\n      }\n    }\n    return null;\n  }\n\n  /**\n   * convert from data array to string\n   * @param data\n   */\n  public static dataArray2string(data: number[]): string | null {\n    let string: any = null;\n    try {\n      const StringDecoder: any = require(\"string_decoder\").StringDecoder;\n      if (StringDecoder) {\n        string = new StringDecoder(\"utf8\").write(Buffer.from(data));\n      }\n    } catch (e) {\n      // this.obniz.error(e);\n    }\n    return string;\n  }\n\n  /**\n   * convert from string to data array\n   * @param str\n   */\n  public static string2dataArray(str: string) {\n    const buf: any = Buffer.from(str);\n    return [...buf];\n  }\n\n  /**\n   * @ignore\n   * @param data\n   * @param schema\n   */\n  public static hexToBinary(data: string, reverse: boolean = false): number[] {\n    const array: number[] = [];\n    const hex: string = data.toLowerCase().replace(/[^0-9abcdef]/g, \"\");\n    for (let i = 0; i < hex.length / 2; i++) {\n      array[i] = parseInt(hex[i * 2] + hex[i * 2 + 1], 16);\n    }\n    if (reverse) {\n      array.reverse();\n    }\n    return array;\n  }\n\n  /**\n   * @ignore\n   * @param min\n   * @param max\n   * @param variable_name\n   * @param variable\n   */\n  public static assertNumber(min: number, max: number, variable_name: string, variable: number) {\n    if (!(min <= variable && variable <= max)) {\n      throw new Error(\n        `${variable_name} is out of range.Input value : ${variable} .value range [ ${min} <= ${variable_name} <= ${max} ]`,\n      );\n    }\n  }\n\n  public obniz: any;\n  public width: any;\n  public height: any;\n  public createCanvas: any;\n\n  constructor(obniz: any) {\n    this.obniz = obniz;\n  }\n\n  /**\n   * This creates a Canvas context.\n   * It will add a canvas dom to body(in html).\n   *\n   * ```javascript\n   * // Example\n   * const ctx = obniz.util.createCanvasContext(128, 64);\n   * ctx.font = \"9px sans-serif\";\n   * ctx.fillText('Hello', 0, 7);\n   * ```\n   *\n   * @param width\n   * @param height\n   */\n  public createCanvasContext(width: number, height: number) {\n    if (this.obniz.isNode) {\n      try {\n        const { createCanvas } = require(\"canvas\");\n        return createCanvas(this.width, this.height);\n      } catch (e) {\n        throw new Error(\"obniz.js require node-canvas to draw rich contents. see more detail on docs\");\n      }\n    } else {\n      const canvas: any = document.createElement(\"canvas\");\n      canvas.width = width;\n      canvas.height = height;\n      (canvas.style as any)[\"-webkit-font-smoothing\"] = \"none\";\n      const body: any = document.getElementsByTagName(\"body\")[0];\n      body.appendChild(canvas);\n\n      const ctx: any = canvas.getContext(\"2d\");\n      return ctx;\n    }\n  }\n}\n\nexport default ObnizUtil;\n"]}