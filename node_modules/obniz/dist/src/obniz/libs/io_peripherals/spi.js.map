{"version":3,"sources":["../src/obniz/libs/io_peripherals/spi.ts"],"names":[],"mappings":"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","file":"spi.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components\n */\n\nimport semver from \"semver\";\nimport Obniz from \"../../index\";\nimport { ComponentAbstract } from \"../ComponentAbstact\";\nimport ObnizUtil from \"../utils/util\";\nimport { DriveType, PullType } from \"./common\";\n\ninterface PeripheralSPIOptions {\n  /**\n   * SPI mode\n   *\n   * currently only \"master\" is supported\n   */\n  mode: \"master\";\n\n  /**\n   * clock pin no\n   */\n  clk?: number;\n\n  /**\n   * mosi pin no\n   */\n  mosi?: number;\n\n  /**\n   * miso pin no\n   */\n  miso?: number;\n\n  /**\n   * frequency (Hz)\n   */\n  frequency: number;\n\n  drive?: DriveType;\n\n  pull?: PullType;\n\n  /**\n   * gnd pin no\n   */\n  gnd?: number;\n}\n\n/**\n * It is General Purpose SPI\n * @category Peripherals\n */\nexport default class PeripheralSPI extends ComponentAbstract {\n  /**\n   * @ignore\n   */\n  public used!: boolean;\n  private id: number;\n\n  private params!: PeripheralSPIOptions | null;\n\n  constructor(obniz: Obniz, id: number) {\n    super(obniz);\n    this.id = id;\n    this._reset();\n  }\n\n  /**\n   * It starts spi. Now the mode is only \"master\".\n   *\n   *\n   * drive and pull are optional settings for io output.\n   * Default settings are drive:5v, pull:null.\n   * See more using obniz.io.drive() or pull().\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.spi0.start({mode:\"master\", clk :0, mosi:1, miso:2, frequency:1000000});\n   * var ret = await obniz.spi0.writeWait([0x12, 0x98]);\n   * console.log(\"received: \"+ret);\n   *\n   * // drive and pull is optional\n   * obniz.spi0.start({mode:\"master\", clk :0, mosi:1, miso:2, frequency:1000000, drive: \"5v\", pull:null});\n   * ```\n   *\n   * @param params spi parameters\n   */\n  public start(params: PeripheralSPIOptions) {\n    const err: any = ObnizUtil._requiredKeys(params, [\"mode\", \"frequency\"]);\n    if (err) {\n      throw new Error(\"spi start param '\" + err + \"' required, but not found \");\n    }\n    this.params = ObnizUtil._keyFilter(params, [\n      \"mode\",\n      \"clk\",\n      \"mosi\",\n      \"miso\",\n      \"frequency\",\n      \"drive\",\n      \"pull\",\n      \"gnd\",\n    ]) as PeripheralSPIOptions;\n    const obj: any = {};\n\n    const ioKeys: Array<keyof PeripheralSPIOptions> = [\"clk\", \"mosi\", \"miso\", \"gnd\"];\n    for (const key of ioKeys) {\n      if (this.params[key] && !this.Obniz.isValidIO(this.params[key])) {\n        throw new Error(\"spi start param '\" + key + \"' are to be valid io no\");\n      }\n    }\n\n    obj[\"spi\" + this.id] = {\n      mode: this.params.mode,\n      clock: this.params.frequency, // name different\n    };\n    if (this.params.clk !== undefined) {\n      obj[\"spi\" + this.id].clk = this.params.clk;\n    }\n    if (this.params.mosi !== undefined) {\n      obj[\"spi\" + this.id].mosi = this.params.mosi;\n    }\n    if (this.params.miso !== undefined) {\n      obj[\"spi\" + this.id].miso = this.params.miso;\n    }\n\n    if (this.params.drive) {\n      if (this.params.clk !== undefined) {\n        this.Obniz.getIO(this.params.clk).drive(this.params.drive);\n      }\n      if (this.params.mosi !== undefined) {\n        this.Obniz.getIO(this.params.mosi).drive(this.params.drive);\n      }\n      if (this.params.miso !== undefined) {\n        this.Obniz.getIO(this.params.miso).drive(this.params.drive);\n      }\n    } else {\n      if (this.params.clk !== undefined) {\n        this.Obniz.getIO(this.params.clk).drive(\"5v\");\n      }\n      if (this.params.mosi !== undefined) {\n        this.Obniz.getIO(this.params.mosi).drive(\"5v\");\n      }\n      if (this.params.miso !== undefined) {\n        this.Obniz.getIO(this.params.miso).drive(\"5v\");\n      }\n    }\n\n    if (this.params.pull) {\n      if (this.params.clk !== undefined) {\n        this.Obniz.getIO(this.params.clk).pull(this.params.pull);\n      }\n      if (this.params.mosi !== undefined) {\n        this.Obniz.getIO(this.params.mosi).pull(this.params.pull);\n      }\n      if (this.params.miso !== undefined) {\n        this.Obniz.getIO(this.params.miso).pull(this.params.pull);\n      }\n    } else {\n      if (this.params.clk !== undefined) {\n        this.Obniz.getIO(this.params.clk).pull(null);\n      }\n      if (this.params.mosi !== undefined) {\n        this.Obniz.getIO(this.params.mosi).pull(null);\n      }\n      if (this.params.miso !== undefined) {\n        this.Obniz.getIO(this.params.miso).pull(null);\n      }\n    }\n\n    if (this.params.gnd !== undefined) {\n      this.Obniz.getIO(this.params.gnd).output(false);\n      const ioNames: any = {};\n      ioNames[this.params.gnd] = \"gnd\";\n      if (this.Obniz.display) {\n        this.Obniz.display.setPinNames(\"spi\" + this.id, ioNames);\n      }\n    }\n    this.used = true;\n    this.Obniz.send(obj);\n  }\n\n  /**\n   * It sends data to spi and wait until data are received.\n   * The received data length is the same as the sent data.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.spi0.start({mode:\"master\", clk :0, mosi:1, miso:2, frequency:1000000});\n   * var ret = await obniz.spi0.writeWait([0x12, 0x98]);\n   * console.log(\"received: \"+ret);\n   * ```\n   *\n   *\n   * @param data Max length is 1024 bytes.\n   * @return received data\n   */\n  public async writeWait(data: number[]): Promise<number[]> {\n    if (!this.used) {\n      throw new Error(`spi${this.id} is not started`);\n    }\n    if (semver.lte(this.Obniz.firmware_ver!, \"1.0.2\") && data.length > 32) {\n      throw new Error(\n        `with your obniz ${this.Obniz.firmware_ver}. spi max length=32byte but yours ${data.length}. Please update obniz firmware`,\n      );\n    }\n\n    const obj: any = {};\n    obj[\"spi\" + this.id] = {\n      data,\n      read: true,\n    };\n    const receiveData = await this.sendAndReceiveJsonWait(obj, \"/response/spi/read\");\n    return receiveData.data;\n  }\n\n  /**\n   * It only sends data to spi and does not receive it.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.spi0.start({mode:\"master\", clk :0, mosi:1, miso:2, frequency:1000000});\n   * obniz.spi0.write([0x12, 0x98]);\n   * ```\n   *\n   * @param data Max length is 1024 bytes.\n   */\n  public write(data: number[]) {\n    if (!this.used) {\n      throw new Error(`spi${this.id} is not started`);\n    }\n    if (semver.lte(this.Obniz.firmware_ver!, \"1.0.2\") && data.length > 32) {\n      throw new Error(\n        `with your obniz ${this.Obniz.firmware_ver}. spi max length=32byte but yours ${data.length}. Please update obniz firmware`,\n      );\n    }\n\n    const self: any = this;\n    const obj: any = {};\n    obj[\"spi\" + self.id] = {\n      data,\n      read: false,\n    };\n    self.Obniz.send(obj);\n  }\n\n  /**\n   * @ignore\n   */\n  public isUsed() {\n    return this.used;\n  }\n\n  /**\n   * It ends spi\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.spi0.start({mode:\"master\", clk :0, mosi:1, miso:2, clock:1000000});\n   * obniz.spi0.write([0x12, 0x98]);\n   * obniz.spi0.end();\n   * ```\n   *\n   * @param reuse\n   * - True : getFreeSpi will not return this object\n   * - False : getFreeSpi will return this object\n   */\n  public end(reuse?: boolean) {\n    const self: any = this;\n    const obj: any = {};\n    obj[\"spi\" + self.id] = null;\n    this.params = null;\n    self.Obniz.send(obj);\n    if (!reuse) {\n      this.used = false;\n    }\n  }\n\n  /**\n   * @ignore\n   * @private\n   */\n  public schemaBasePath(): string {\n    return \"spi\" + this.id;\n  }\n\n  /**\n   * @ignore\n   * @private\n   */\n  protected _reset() {\n    this.used = false;\n    this.params = null;\n  }\n}\n"]}