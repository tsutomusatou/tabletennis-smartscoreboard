{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/ble.ts"],"names":[],"mappings":"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","file":"ble.js","sourcesContent":["/**\n * Obniz BLE are switches automatically. <br/>\n * obnizOS ver >= 3.0.0  : [[ObnizCore.Components.Ble.Hci | Hci]] <br/>\n * obnizOS ver < 3.0.0   : Not Supported <br/>\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.Hci\n */\n\nimport ObnizBLEHci from \"./hci\";\nimport CentralBindings from \"./protocol/central/bindings\";\nimport HciProtocol from \"./protocol/hci\";\nimport PeripheralBindings from \"./protocol/peripheral/bindings\";\n\nimport semver from \"semver\";\nimport Obniz from \"../../../index\";\nimport {\n  ObnizBleHciStateError,\n  ObnizBleUnsupportedHciError,\n  ObnizBleUnSupportedOSVersionError,\n  ObnizOfflineError,\n} from \"../../../ObnizError\";\nimport { ComponentAbstract } from \"../../ComponentAbstact\";\nimport BleAdvertisement from \"./bleAdvertisement\";\nimport BleCharacteristic from \"./bleCharacteristic\";\nimport BleDescriptor from \"./bleDescriptor\";\nimport BlePeripheral from \"./blePeripheral\";\nimport BleRemotePeripheral from \"./bleRemotePeripheral\";\nimport BleScan from \"./bleScan\";\nimport BleSecurity from \"./bleSecurity\";\nimport BleService from \"./bleService\";\nimport { BleDeviceAddress, BleDeviceAddressType, UUID } from \"./bleTypes\";\n\n/**\n * Use a obniz device as a BLE device.\n * Peripheral and Central mode are supported\n */\nexport default class ObnizBLE extends ComponentAbstract {\n  /**\n   * @ignore\n   *\n   * @param data\n   * @param reverse\n   * @private\n   */\n  public static _dataArray2uuidHex(data: number[], reverse: boolean): UUID {\n    let uuid: any = [];\n    for (let i = 0; i < data.length; i++) {\n      uuid.push((\"00\" + data[i].toString(16).toLowerCase()).slice(-2));\n    }\n    if (reverse) {\n      uuid = uuid.reverse();\n    }\n    let str: any = uuid.join(\"\");\n    if (uuid.length >= 16) {\n      str =\n        str.slice(0, 8) +\n        \"-\" +\n        str.slice(8, 12) +\n        \"-\" +\n        str.slice(12, 16) +\n        \"-\" +\n        str.slice(16, 20) +\n        \"-\" +\n        str.slice(20);\n    }\n    return str;\n  }\n\n  public hci: ObnizBLEHci;\n  public peripheral!: BlePeripheral;\n  public scan!: BleScan;\n  public security!: BleSecurity;\n\n  /**\n   * @ignore\n   */\n  public centralBindings!: CentralBindings;\n\n  /**\n   * @ignore\n   */\n  public peripheralBindings!: PeripheralBindings;\n  public service: typeof BleService;\n  public characteristic: typeof BleCharacteristic;\n  public descriptor: typeof BleDescriptor;\n\n  /**\n   * @ignore\n   */\n  public advertisement!: BleAdvertisement;\n  protected hciProtocol!: HciProtocol;\n  protected _initialized!: boolean;\n  protected _initializeWarning!: boolean;\n  protected remotePeripherals!: BleRemotePeripheral[];\n\n  constructor(obniz: Obniz) {\n    super(obniz);\n    this.hci = new ObnizBLEHci(obniz);\n    this.service = BleService;\n    this.characteristic = BleCharacteristic;\n    this.descriptor = BleDescriptor;\n\n    this.on(\"/response/ble/hci/read\", (obj) => {\n      if (obj.hci) {\n        this.hci.notified(obj.hci);\n      }\n    });\n\n    obniz.on(\"close\", () => {\n      this._reset();\n    });\n\n    this._reset();\n  }\n  public debugHandler: any = () => {};\n\n  /**\n   * Initialize BLE module. You need call this first everything before.\n   * This throws if device is not supported device.\n   *\n   * ```javascript\n   * // Javascript Example\n   * await obniz.ble.initWait();\n   * ```\n   */\n  public async initWait(): Promise<void> {\n    if (!this._initialized) {\n      const MinHCIAvailableOS = \"3.0.0\";\n      if (semver.lt(this.Obniz.firmware_ver!, MinHCIAvailableOS)) {\n        throw new ObnizBleUnSupportedOSVersionError(this.Obniz.firmware_ver!, MinHCIAvailableOS);\n      }\n\n      this._initialized = true;\n\n      // force initialize on obnizOS < 3.2.0\n      if (semver.lt(this.Obniz.firmware_ver!, \"3.2.0\")) {\n        this.hci.init();\n        this.hci.end(); // disable once\n        this.hci.init();\n      }\n\n      try {\n        await this.hciProtocol.initWait();\n      } catch (e) {\n        if (e instanceof ObnizBleUnsupportedHciError) {\n          this.Obniz.reboot();\n        }\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * @ignore\n   * @private\n   */\n  public _reset() {\n    if (this.peripheral && this.peripheral.currentConnectedDeviceAddress) {\n      const address = this.peripheral.currentConnectedDeviceAddress;\n      this.peripheral.currentConnectedDeviceAddress = null;\n      setTimeout(() => {\n        if (this.peripheral.onconnectionupdates) {\n          this.peripheral.onconnectionupdates({\n            address,\n            status: \"disconnected\",\n            reason: new ObnizOfflineError(),\n          });\n        }\n      }, 0);\n    }\n\n    if (this.remotePeripherals) {\n      for (const p of this.remotePeripherals) {\n        if (p.connected) {\n          p.notifyFromServer(\"statusupdate\", { status: \"disconnected\", reason: new ObnizOfflineError() });\n        }\n      }\n    }\n    if (this.scan && this.scan.state !== \"stopped\") {\n      this.scan.notifyFromServer(\"obnizClose\", {});\n    }\n    this.hci._reset();\n    this.hciProtocol = new HciProtocol(this.hci);\n    this.hciProtocol.debugHandler = (text: any) => {\n      this.debug(`BLE-HCI: ${text}`);\n    };\n    this.centralBindings = new CentralBindings(this.hciProtocol);\n    this.peripheralBindings = new PeripheralBindings(this.hciProtocol);\n    this.centralBindings.init();\n    this.peripheralBindings.init();\n    this.centralBindings.debugHandler = (text: any) => {\n      this.debug(`BLE: ${text}`);\n    };\n\n    this._initialized = false;\n    this._initializeWarning = true;\n\n    this.remotePeripherals = [];\n\n    this.peripheral = new BlePeripheral(this);\n\n    this.advertisement = new BleAdvertisement(this);\n    this.scan = new BleScan(this);\n    this.security = new BleSecurity(this);\n\n    this._bind();\n  }\n\n  /**\n   * Connect to peripheral without scanning.\n   * Returns a peripheral instance, but the advertisement information such as localName is null because it has not been scanned.\n   *\n   * ```javascript\n   * // Javascript Example\n   *\n   * await obniz.ble.initWait();\n   * var peripheral = obniz.ble.directConnect(\"e4b9efb29218\",\"random\");\n   * peripheral.onconnect = ()=>{\n   *   console.log(\"connected\");\n   * }\n   * ```\n   *\n   * @param uuid peripheral device address\n   * @param addressType \"random\" or \"public\"\n   */\n  public directConnect(uuid: UUID, addressType: BleDeviceAddressType) {\n    let peripheral: any = this.findPeripheral(uuid);\n    if (!peripheral) {\n      peripheral = new BleRemotePeripheral(this, uuid);\n      this.remotePeripherals.push(peripheral);\n    }\n    this.centralBindings.addPeripheralData(uuid, addressType);\n    peripheral.connect();\n    return peripheral;\n  }\n\n  /**\n   * Connect to peripheral without scanning, and wait to finish connecting.\n   *\n   * It throws when connection establish failed.\n   * Returns a peripheral instance, but the advertisement information such as localName is null because it has not been scanned.\n   *\n   * ```javascript\n   * // Javascript Example\n   * await obniz.ble.initWait();\n   * try {\n   *   var peripheral = await obniz.ble.directConnectWait(\"e4b9efb29218\",\"random\");\n   *   console.log(\"connected\");\n   * } catch(e) {\n   *   console.log(\"can't connect\");\n   * }\n   * ```\n   *\n   * @param address peripheral device address\n   * @param addressType \"random\" or \"public\"\n   */\n  public async directConnectWait(address: BleDeviceAddress, addressType: BleDeviceAddressType) {\n    const peripheral: any = this.directConnect(address, addressType);\n    await peripheral.connectWait();\n    return peripheral;\n  }\n\n  /**\n   * @ignore\n   */\n  public warningIfNotInitialize() {\n    if (!this._initialized && this._initializeWarning) {\n      this._initializeWarning = true;\n      this.Obniz.warning({\n        alert: \"warning\",\n        message: `BLE is not initialized. Please call 'await obniz.ble.initWait()'`,\n      });\n    }\n  }\n\n  public schemaBasePath(): string {\n    return \"ble\";\n  }\n\n  protected onStateChange() {}\n\n  protected findPeripheral(address: BleDeviceAddress) {\n    for (const key in this.remotePeripherals) {\n      if (this.remotePeripherals[key].address === address) {\n        return this.remotePeripherals[key];\n      }\n    }\n    return null;\n  }\n\n  protected onDiscover(\n    uuid: any,\n    address?: any,\n    addressType?: any,\n    connectable?: any,\n    advertisement?: any,\n    rssi?: any,\n  ) {\n    let val: BleRemotePeripheral | null = this.findPeripheral(uuid);\n    if (!val) {\n      val = new BleRemotePeripheral(this, uuid);\n      this.remotePeripherals.push(val);\n    }\n    val.discoverdOnRemote = true;\n\n    const peripheralData: any = {\n      device_type: \"ble\",\n      address_type: addressType,\n      ble_event_type: connectable ? \"connectable_advertisemnt\" : \"non_connectable_advertising\",\n      rssi,\n      adv_data: advertisement.advertisementRaw,\n      scan_resp: advertisement.scanResponseRaw,\n    };\n\n    val.setParams(peripheralData);\n\n    this.scan.notifyFromServer(\"onfind\", val);\n  }\n\n  protected onDisconnect(peripheralUuid: any, reason: ObnizBleHciStateError) {\n    const peripheral: any = this.findPeripheral(peripheralUuid);\n    peripheral.notifyFromServer(\"statusupdate\", { status: \"disconnected\", reason });\n  }\n\n  //\n  // protected onServicesDiscover(peripheralUuid: any, serviceUuids?: any) {\n  //   const peripheral: any = this.findPeripheral(peripheralUuid);\n  //   for (const serviceUuid of serviceUuids) {\n  //     peripheral.notifyFromServer(\"discover\", { service_uuid: serviceUuid });\n  //   }\n  //   peripheral.notifyFromServer(\"discoverfinished\", {});\n  // }\n\n  // protected onIncludedServicesDiscover(peripheralUuid: any, serviceUuid?: any, includedServiceUuids?: any) {}\n\n  // protected onCharacteristicsDiscover(peripheralUuid: any, serviceUuid?: any, characteristics?: any) {\n  //   const peripheral: any = this.findPeripheral(peripheralUuid);\n  //   const service: any = peripheral.findService({ service_uuid: serviceUuid });\n  //   for (const char of characteristics) {\n  //     const obj: any = {\n  //       properties: char.properties.map((e: any) => BleHelper.toSnakeCase(e)),\n  //       characteristic_uuid: char.uuid,\n  //     };\n  //     service.notifyFromServer(\"discover\", obj);\n  //   }\n  //   service.notifyFromServer(\"discoverfinished\", {});\n  // }\n\n  protected onNotification(\n    peripheralUuid: any,\n    serviceUuid?: any,\n    characteristicUuid?: any,\n    data?: any,\n    isNotification?: any,\n    isSuccess?: any,\n  ) {\n    const peripheral: any = this.findPeripheral(peripheralUuid);\n    const characteristic: any = peripheral.findCharacteristic({\n      service_uuid: serviceUuid,\n      characteristic_uuid: characteristicUuid,\n    });\n\n    if (isNotification) {\n      const obj: any = {\n        data: Array.from(data),\n      };\n      characteristic.notifyFromServer(\"onnotify\", obj);\n    }\n  }\n\n  protected onPeripheralStateChange(state: any) {\n    // console.error(\"onPeripheralStateChange\")\n  }\n\n  protected onPeripheralAccept(clientAddress: any) {\n    this.peripheral.currentConnectedDeviceAddress = clientAddress;\n    if (this.peripheral.onconnectionupdates) {\n      this.peripheral.onconnectionupdates({\n        address: clientAddress,\n        status: \"connected\",\n      });\n    }\n  }\n\n  protected onPeripheralMtuChange(mtu: any) {\n    // console.error(\"onPeripheralMtuChange\")\n  }\n\n  protected onPeripheralDisconnect(clientAddress: any, reason: any) {\n    this.peripheral.currentConnectedDeviceAddress = null;\n    if (this.peripheral.onconnectionupdates) {\n      this.peripheral.onconnectionupdates({\n        address: clientAddress,\n        status: \"disconnected\",\n        reason,\n      });\n    }\n  }\n\n  protected _bind() {\n    this.centralBindings.on(\"stateChange\", this.onStateChange.bind(this));\n\n    this.centralBindings.on(\"discover\", this.onDiscover.bind(this));\n    this.centralBindings.on(\"disconnect\", this.onDisconnect.bind(this));\n    this.centralBindings.on(\"notification\", this.onNotification.bind(this));\n\n    this.peripheralBindings.on(\"stateChange\", this.onPeripheralStateChange.bind(this));\n    this.peripheralBindings.on(\"accept\", this.onPeripheralAccept.bind(this));\n    this.peripheralBindings.on(\"mtuChange\", this.onPeripheralMtuChange.bind(this));\n    this.peripheralBindings.on(\"disconnect\", this.onPeripheralDisconnect.bind(this));\n  }\n\n  private debug(text: any) {\n    this.debugHandler(text);\n  }\n}\n"]}