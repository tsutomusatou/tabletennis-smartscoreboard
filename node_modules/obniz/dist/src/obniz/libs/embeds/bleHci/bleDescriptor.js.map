{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleDescriptor.ts"],"names":[],"mappings":";;;;;AAMA,sGAA8E;AAI9E;;GAEG;AACH,MAAqB,aAAc,SAAQ,wCAAuD;IAMhG,2BAA2B;IAE3B;;;;;;;;;;;;;;;;;;;;;;;;;OAyBG;IACH,YAAY,GAAwB;QAClC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEX,4CAA4C;QAC5C,0CAA0C;QAC1C,2CAA2C;QAC3C,IAAI;IACN,CAAC;IAED;;OAEG;IACH,IAAI,UAAU;QACZ,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAED,qCAAqC;IACrC,6CAA6C;IAC7C,oCAAoC;IACpC,MAAM;IACN,IAAI;IAEJ,wCAAwC;IACxC,iEAAiE;IACjE,4BAA4B;IAC5B,QAAQ;IACR,IAAI;IAEJ;;OAEG;IACI,MAAM;QACX,MAAM,GAAG,GAAQ,KAAK,CAAC,MAAM,EAAE,CAAC;QAEhC,qCAAqC;QACrC,wCAAwC;QACxC,IAAI;QACJ,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AAzED,gCAyEC","file":"bleDescriptor.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.Hci\n */\nimport BleCharacteristic from \"./bleCharacteristic\";\nimport BleLocalAttributeAbstract from \"./bleLocalAttributeAbstract\";\nimport BleLocalValueAttributeAbstract from \"./bleLocalValueAttributeAbstract\";\nimport BleService from \"./bleService\";\nimport { BleDescriptorDefine } from \"./bleTypes\";\n\n/**\n * @category Use as Peripheral\n */\nexport default class BleDescriptor extends BleLocalValueAttributeAbstract<BleCharacteristic, null> {\n  /**\n   * Characteristic instance\n   */\n  public characteristic!: BleCharacteristic;\n\n  // public permissions: any;\n\n  /**\n   * Create descriptor.\n   *\n   * ```javascript\n   * await obniz.ble.initWait();\n   * var descriptor = new obniz.ble.characteristic({\n   *                     \"uuid\" : \"2901\",   //Characteristic User Description\n   *                     \"text\" : \"hello world characteristic\",\n   *                 });\n   *\n   *  var characteristic = new obniz.ble.characteristic({\n   *                  \"uuid\" : \"FFF1\",\n   *                  \"text\" : \"Hi\",\n   *                  \"descriptors\" : [ descriptor ]\n   *                });\n   *\n   * var service = new obniz.ble.service({\n   *                \"uuid\" : \"fff0\",\n   *                \"characteristics\" : [ characteristic ]\n   * });\n   * obniz.ble.peripheral.addService(service);\n   *\n   * ```\n   *\n   * @param obj\n   */\n  constructor(obj: BleDescriptorDefine) {\n    super(obj);\n\n    // this.permissions = obj.permissions || [];\n    // if (!Array.isArray(this.permissions)) {\n    //   this.permissions = [this.permissions];\n    // }\n  }\n\n  /**\n   * @ignore\n   */\n  get parentName(): string | null {\n    return \"characteristic\";\n  }\n\n  // public addPermission(param: any) {\n  //   if (!this.permissions.includes(param)) {\n  //     this.permissions.push(param);\n  //   }\n  // }\n\n  // public removePermission(param: any) {\n  //   this.permissions = this.permissions.filter ((elm: any ) => {\n  //     return elm !== param;\n  //   });\n  // }\n\n  /**\n   * @ignore\n   */\n  public toJSON() {\n    const obj: any = super.toJSON();\n\n    // if (this.permissions.length > 0) {\n    //   obj.permissions = this.permissions;\n    // }\n    return obj;\n  }\n}\n"]}