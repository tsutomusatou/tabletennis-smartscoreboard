{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/central/gap.ts"],"names":[],"mappings":"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","file":"gap.js","sourcesContent":["/**\n * @packageDocumentation\n *\n * @ignore\n */\n// let debug = require('debug')('gap');\nimport ObnizBLEHci from \"../../hci\";\n\n/**\n * @ignore\n */\nconst debug: any = () => {};\n\nimport EventEmitter from \"eventemitter3\";\nimport { ObnizBleOpError } from \"../../../../../ObnizError\";\nimport Hci from \"../hci\";\n\ntype GapEventTypes = \"scanStop\" | \"discover\";\n\n/**\n * @ignore\n */\nclass Gap extends EventEmitter<GapEventTypes> {\n  public _hci: Hci;\n  public _scanState: null | \"starting\" | \"started\" | \"stopping\" | \"stopped\";\n  public _scanFilterDuplicates: null | boolean;\n  public _discoveries: any;\n\n  constructor(hci: Hci) {\n    super();\n    this._hci = hci;\n\n    this._scanState = null;\n    this._scanFilterDuplicates = null;\n    this._discoveries = {};\n\n    this._hci.on(\"leAdvertisingReport\", this.onHciLeAdvertisingReport.bind(this));\n  }\n\n  public async startScanningWait(allowDuplicates: boolean, activeScan: boolean) {\n    this._scanState = \"starting\";\n    this._scanFilterDuplicates = !allowDuplicates;\n    this._discoveries = {};\n    // Always set scan parameters before scanning\n    // https://www.bluetooth.org/docman/handlers/downloaddoc.ashx?doc_id=229737\n    // p106 - p107\n\n    try {\n      await this.setScanEnabledWait(false, true);\n    } catch (e) {\n      if (e instanceof ObnizBleOpError) {\n        // nop\n      } else {\n        throw e;\n      }\n    }\n\n    const setParamStatus = await this._hci.setScanParametersWait(activeScan);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    await this.setScanEnabledWait(true, this._scanFilterDuplicates);\n  }\n\n  public async stopScanningWait() {\n    this._scanState = \"stopping\";\n    await this._hci.setScanEnabledWait(false, true);\n  }\n\n  public onHciLeAdvertisingReport(status: any, type?: any, address?: any, addressType?: any, eir?: any, rssi?: any) {\n    const previouslyDiscovered: any = !!this._discoveries[address];\n    const advertisement: any = previouslyDiscovered\n      ? this._discoveries[address].advertisement\n      : {\n          localName: undefined,\n          txPowerLevel: undefined,\n          manufacturerData: undefined,\n          serviceData: [],\n          serviceUuids: [],\n          solicitationServiceUuids: [],\n          advertisementRaw: [],\n          scanResponseRaw: [],\n          raw: [],\n        };\n\n    let discoveryCount: any = previouslyDiscovered ? this._discoveries[address].count : 0;\n    let hasScanResponse: any = previouslyDiscovered ? this._discoveries[address].hasScanResponse : false;\n\n    if (type === 0x04) {\n      hasScanResponse = true;\n\n      if (eir.length > 0) {\n        advertisement.scanResponseRaw = Array.from(eir);\n      }\n    } else {\n      // reset service data every non-scan response event\n      advertisement.serviceData = [];\n      advertisement.serviceUuids = [];\n      advertisement.serviceSolicitationUuids = [];\n\n      if (eir.length > 0) {\n        advertisement.advertisementRaw = Array.from(eir);\n      }\n    }\n\n    discoveryCount++;\n\n    let i: any = 0;\n    let j: any = 0;\n    let serviceUuid: any = null;\n    let serviceSolicitationUuid: any = null;\n\n    while (i + 1 < eir.length) {\n      const length: any = eir.readUInt8(i);\n\n      if (length < 1) {\n        debug(\"invalid EIR data, length = \" + length);\n        break;\n      }\n\n      const eirType: any = eir.readUInt8(i + 1); // https://www.bluetooth.org/en-us/specification/assigned-numbers/generic-access-profile\n\n      if (i + length + 1 > eir.length) {\n        debug(\"invalid EIR data, out of range of buffer length\");\n        break;\n      }\n\n      const bytes: any = eir.slice(i + 2).slice(0, length - 1);\n\n      switch (eirType) {\n        case 0x02: // Incomplete List of 16-bit Service Class UUID\n        case 0x03: // Complete List of 16-bit Service Class UUIDs\n          for (j = 0; j < bytes.length; j += 2) {\n            serviceUuid = bytes.readUInt16LE(j).toString(16);\n            if (advertisement.serviceUuids.indexOf(serviceUuid) === -1) {\n              advertisement.serviceUuids.push(serviceUuid);\n            }\n          }\n          break;\n\n        case 0x06: // Incomplete List of 128-bit Service Class UUIDs\n        case 0x07: // Complete List of 128-bit Service Class UUIDs\n          for (j = 0; j < bytes.length; j += 16) {\n            serviceUuid = bytes\n              .slice(j, j + 16)\n              .toString(\"hex\")\n              .match(/.{1,2}/g)\n              .reverse()\n              .join(\"\");\n            if (advertisement.serviceUuids.indexOf(serviceUuid) === -1) {\n              advertisement.serviceUuids.push(serviceUuid);\n            }\n          }\n          break;\n\n        case 0x08: // Shortened Local Name\n        case 0x09: // Complete Local Name\n          advertisement.localName = bytes.toString(\"utf8\");\n          break;\n\n        case 0x0a: {\n          // Tx Power Level\n          advertisement.txPowerLevel = bytes.readInt8(0);\n          break;\n        }\n        case 0x14: {\n          // List of 16 bit solicitation UUIDs\n          for (j = 0; j < bytes.length; j += 2) {\n            serviceSolicitationUuid = bytes.readUInt16LE(j).toString(16);\n            if (advertisement.serviceSolicitationUuids.indexOf(serviceSolicitationUuid) === -1) {\n              advertisement.serviceSolicitationUuids.push(serviceSolicitationUuid);\n            }\n          }\n          break;\n        }\n        case 0x15: {\n          // List of 128 bit solicitation UUIDs\n          for (j = 0; j < bytes.length; j += 16) {\n            serviceSolicitationUuid = bytes\n              .slice(j, j + 16)\n              .toString(\"hex\")\n              .match(/.{1,2}/g)\n              .reverse()\n              .join(\"\");\n            if (advertisement.serviceSolicitationUuids.indexOf(serviceSolicitationUuid) === -1) {\n              advertisement.serviceSolicitationUuids.push(serviceSolicitationUuid);\n            }\n          }\n          break;\n        }\n        case 0x16: {\n          // 16-bit Service Data, there can be multiple occurences\n          const serviceDataUuid: any = bytes\n            .slice(0, 2)\n            .toString(\"hex\")\n            .match(/.{1,2}/g)\n            .reverse()\n            .join(\"\");\n          const serviceData: any = bytes.slice(2, bytes.length);\n\n          advertisement.serviceData.push({\n            uuid: serviceDataUuid,\n            data: serviceData,\n          });\n          break;\n        }\n        case 0x20: {\n          // 32-bit Service Data, there can be multiple occurences\n          const serviceData32Uuid: any = bytes\n            .slice(0, 4)\n            .toString(\"hex\")\n            .match(/.{1,2}/g)\n            .reverse()\n            .join(\"\");\n          const serviceData32: any = bytes.slice(4, bytes.length);\n\n          advertisement.serviceData.push({\n            uuid: serviceData32Uuid,\n            data: serviceData32,\n          });\n          break;\n        }\n        case 0x21: {\n          // 128-bit Service Data, there can be multiple occurences\n\n          const serviceData128Uuid: any = bytes\n            .slice(0, 16)\n            .toString(\"hex\")\n            .match(/.{1,2}/g)\n            .reverse()\n            .join(\"\");\n          const serviceData128: any = bytes.slice(16, bytes.length);\n\n          advertisement.serviceData.push({\n            uuid: serviceData128Uuid,\n            data: serviceData128,\n          });\n          break;\n        }\n        case 0x1f: // List of 32 bit solicitation UUIDs\n          for (j = 0; j < bytes.length; j += 4) {\n            serviceSolicitationUuid = bytes.readUInt32LE(j).toString(16);\n            if (advertisement.serviceSolicitationUuids.indexOf(serviceSolicitationUuid) === -1) {\n              advertisement.serviceSolicitationUuids.push(serviceSolicitationUuid);\n            }\n          }\n          break;\n\n        case 0xff: // Manufacturer Specific Data\n          advertisement.manufacturerData = bytes;\n          break;\n      }\n\n      i += length + 1;\n    }\n\n    debug(\"advertisement = \" + JSON.stringify(advertisement, null, 0));\n\n    const connectable: any =\n      type === 0x04 && previouslyDiscovered ? this._discoveries[address].connectable : type !== 0x03;\n\n    this._discoveries[address] = {\n      address,\n      addressType,\n      connectable,\n      advertisement,\n      rssi,\n      count: discoveryCount,\n      hasScanResponse,\n    };\n\n    this.emit(\"discover\", status, address, addressType, connectable, advertisement, rssi);\n  }\n\n  private async setScanEnabledWait(enabled: boolean, filterDuplicates: boolean) {\n    const scanStopStatus = await this._hci.setScanEnabledWait(enabled, true);\n\n    // Check the status we got from the command complete function.\n    if (scanStopStatus !== 0) {\n      // If it is non-zero there was an error, and we should not change\n      // our status as a result.\n      // throw new ObnizBleOpError();\n    } else {\n      if (this._scanState === \"starting\") {\n        this._scanState = \"started\";\n      } else if (this._scanState === \"stopping\") {\n        this._scanState = \"stopped\";\n      }\n    }\n  }\n}\n\nexport default Gap;\n"]}