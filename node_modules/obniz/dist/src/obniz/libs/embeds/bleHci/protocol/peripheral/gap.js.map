{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/peripheral/gap.ts"],"names":[],"mappings":"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","file":"gap.js","sourcesContent":["/**\n * @packageDocumentation\n *\n * @ignore\n */\n// var debug = require('debug')('gap');\n\n/**\n * @ignore\n */\nconst debug: any = () => {};\nimport EventEmitter from \"eventemitter3\";\nimport Hci from \"../hci\";\n\ntype GapEventTypes = \"\";\n\n/**\n * @ignore\n */\nclass Gap extends EventEmitter<GapEventTypes> {\n  public _hci: Hci;\n  public _advertiseState: any;\n\n  constructor(hci: any) {\n    super();\n    this._hci = hci;\n\n    this._advertiseState = null;\n  }\n\n  public async startAdvertisingWait(name: any, serviceUuids: any) {\n    debug(\"startAdvertising: name = \" + name + \", serviceUuids = \" + JSON.stringify(serviceUuids, null, 2));\n\n    let advertisementDataLength: any = 3;\n    let scanDataLength: any = 0;\n\n    const serviceUuids16bit: any = [];\n    const serviceUuids128bit: any = [];\n    let i: any = 0;\n\n    if (name && name.length) {\n      scanDataLength += 2 + name.length;\n    }\n\n    if (serviceUuids && serviceUuids.length) {\n      for (i = 0; i < serviceUuids.length; i++) {\n        const serviceUuid: any = Buffer.from(\n          serviceUuids[i]\n            .match(/.{1,2}/g)\n            .reverse()\n            .join(\"\"),\n          \"hex\",\n        );\n\n        if (serviceUuid.length === 2) {\n          serviceUuids16bit.push(serviceUuid);\n        } else if (serviceUuid.length === 16) {\n          serviceUuids128bit.push(serviceUuid);\n        }\n      }\n    }\n\n    if (serviceUuids16bit.length) {\n      advertisementDataLength += 2 + 2 * serviceUuids16bit.length;\n    }\n\n    if (serviceUuids128bit.length) {\n      advertisementDataLength += 2 + 16 * serviceUuids128bit.length;\n    }\n\n    const advertisementData: any = Buffer.alloc(advertisementDataLength);\n    const scanData: any = Buffer.alloc(scanDataLength);\n\n    // flags\n    advertisementData.writeUInt8(2, 0);\n    advertisementData.writeUInt8(0x01, 1);\n    advertisementData.writeUInt8(0x06, 2);\n\n    let advertisementDataOffset: any = 3;\n\n    if (serviceUuids16bit.length) {\n      advertisementData.writeUInt8(1 + 2 * serviceUuids16bit.length, advertisementDataOffset);\n      advertisementDataOffset++;\n\n      advertisementData.writeUInt8(0x03, advertisementDataOffset);\n      advertisementDataOffset++;\n\n      for (i = 0; i < serviceUuids16bit.length; i++) {\n        serviceUuids16bit[i].copy(advertisementData, advertisementDataOffset);\n        advertisementDataOffset += serviceUuids16bit[i].length;\n      }\n    }\n\n    if (serviceUuids128bit.length) {\n      advertisementData.writeUInt8(1 + 16 * serviceUuids128bit.length, advertisementDataOffset);\n      advertisementDataOffset++;\n\n      advertisementData.writeUInt8(0x06, advertisementDataOffset);\n      advertisementDataOffset++;\n\n      for (i = 0; i < serviceUuids128bit.length; i++) {\n        serviceUuids128bit[i].copy(advertisementData, advertisementDataOffset);\n        advertisementDataOffset += serviceUuids128bit[i].length;\n      }\n    }\n\n    // name\n    if (name && name.length) {\n      const nameBuffer: any = Buffer.alloc(name);\n\n      scanData.writeUInt8(1 + nameBuffer.length, 0);\n      scanData.writeUInt8(0x08, 1);\n      nameBuffer.copy(scanData, 2);\n    }\n\n    await this.startAdvertisingWithEIRDataWait(advertisementData, scanData);\n  }\n\n  public async startAdvertisingIBeaconWait(data: any) {\n    debug(\"startAdvertisingIBeacon: data = \" + data.toString(\"hex\"));\n\n    const dataLength: any = data.length;\n    const manufacturerDataLength: any = 4 + dataLength;\n    const advertisementDataLength: any = 5 + manufacturerDataLength;\n    // let scanDataLength = 0;\n\n    const advertisementData: any = Buffer.alloc(advertisementDataLength);\n    const scanData: any = Buffer.alloc(0);\n\n    // flags\n    advertisementData.writeUInt8(2, 0);\n    advertisementData.writeUInt8(0x01, 1);\n    advertisementData.writeUInt8(0x06, 2);\n\n    advertisementData.writeUInt8(manufacturerDataLength + 1, 3);\n    advertisementData.writeUInt8(0xff, 4);\n    advertisementData.writeUInt16LE(0x004c, 5); // Apple Company Identifier LE (16 bit)\n    advertisementData.writeUInt8(0x02, 7); // type, 2 => iBeacon\n    advertisementData.writeUInt8(dataLength, 8);\n\n    data.copy(advertisementData, 9);\n\n    await this.startAdvertisingWithEIRDataWait(advertisementData, scanData);\n  }\n\n  public async startAdvertisingWithEIRDataWait(advertisementData: any, scanData: any) {\n    advertisementData = advertisementData || Buffer.alloc(0);\n    scanData = scanData || Buffer.alloc(0);\n\n    debug(\n      \"startAdvertisingWithEIRData: advertisement data = \" +\n        advertisementData.toString(\"hex\") +\n        \", scan data = \" +\n        scanData.toString(\"hex\"),\n    );\n\n    if (advertisementData.length > 31) {\n      throw new Error(\"Advertisement data is over maximum limit of 31 bytes\");\n    } else if (scanData.length > 31) {\n      throw new Error(\"Scan data is over maximum limit of 31 bytes\");\n    }\n\n    this._advertiseState = \"starting\";\n\n    const p1 = this._hci.setScanResponseDataWait(scanData);\n    const p2 = this._hci.setAdvertisingDataWait(advertisementData);\n    await Promise.all([p1, p2]);\n    const p3 = this._hci.setAdvertiseEnableWait(true);\n    const p4 = this._hci.setScanResponseDataWait(scanData);\n    const p5 = this._hci.setAdvertisingDataWait(advertisementData);\n    await Promise.all([p3, p4, p5]);\n\n    const status = await p3;\n\n    if (this._advertiseState === \"starting\") {\n      this._advertiseState = \"started\";\n      if (status) {\n        throw new Error(Hci.STATUS_MAPPER[status] || \"Unknown (\" + status + \")\");\n      }\n    } else if (this._advertiseState === \"stopping\") {\n      this._advertiseState = \"stopped\";\n    }\n  }\n\n  public async restartAdvertisingWait() {\n    this._advertiseState = \"restarting\";\n\n    await this._hci.setAdvertiseEnableWait(true);\n  }\n\n  public async stopAdvertisingWait() {\n    this._advertiseState = \"stopping\";\n\n    await this._hci.setAdvertiseEnableWait(false);\n  }\n}\n\nexport default Gap;\n"]}