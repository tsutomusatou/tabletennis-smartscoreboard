{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleScan.ts"],"names":[],"mappings":"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","file":"bleScan.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.Hci\n */\nimport { rejects } from \"assert\";\nimport EventEmitter from \"eventemitter3\";\nimport semver from \"semver\";\nimport { ObnizOfflineError } from \"../../../ObnizError\";\nimport Util from \"../../utils/util\";\nimport ObnizBLE from \"./ble\";\nimport BleHelper from \"./bleHelper\";\nimport BleRemotePeripheral from \"./bleRemotePeripheral\";\nimport { BleDeviceAddress, UUID } from \"./bleTypes\";\n\nexport type BleScanMode = \"passive\" | \"active\";\nexport type BleBinary = number[];\n\n/**\n * All parameters are OR. If you set uuid and localName, obniz find uuid match but localName not match device.\n *\n * If you set BleScanSetting.filterOnDevice 'true', filters are apply on obniz device. So it reduce traffic.\n */\nexport interface BleScanTarget {\n  /**\n   * Service UUID for scan. Provide.\n   * Attention: iBeacon uuid is not service uuid. If you want to filter iBeacon. use binary filter\n   */\n  uuids?: UUID[];\n  /**\n   * scan target device localName. This need perfect matching.\n   */\n  localName?: string[] | string;\n\n  /**\n   * scan target device localName. This need prefix matching.\n   */\n  localNamePrefix?: string | string[];\n\n  /**\n   * device address\n   */\n  deviceAddress?: BleDeviceAddress[] | BleDeviceAddress;\n\n  /**\n   * Advanced search.\n   *\n   * You need to enable `filterOnDevice:true` to use this filter.\n   *\n   * Search partially matches advertisement / scan response regarding provided byte array.\n   * If advertisement / scan reponse has a matched byte array in the data, then passed.\n   */\n  binary?: BleBinary[] | BleBinary;\n}\n\n/**\n * @ignore\n */\nexport interface BleScanAdvertisementFilterParam {\n  deviceAddress?: BleDeviceAddress;\n  localNamePrefix?: string;\n  uuid?: UUID;\n  binary?: number[];\n}\n\nexport interface BleScanSetting {\n  /**\n   * Timeout seconds of scanning. Default is 30 seconds.\n   *\n   * If set null, scan don't stop automatically.\n   */\n  duration?: number | null;\n\n  /**\n   * (obnizOS 3 or later only)\n   *\n   * Specifying onfind will be called or not when an advertisement received from already known peripheral. Default is false : never called again.\n   */\n  duplicate?: boolean;\n\n  /**\n   * (obnizOS 3 or later only)\n   *\n   * Active scan or Passive Scan\n   *\n   * Default is true : activeScan.\n   *\n   */\n  activeScan?: boolean;\n\n  /**\n   * (obnizOS >= 3.2.0 only)\n   *\n   * filters are apply on obniz device\n   *\n   * True: filter on device and JavaScript.<br/>\n   * False : filter on JavaScript only.\n   *\n   * Default is false : filter on JavaScript only.\n   *\n   *\n   * ```javascript\n   * // Javascript Example\n   * var target = {\n   *     localName: \"obniz-BLE\",     //scan only has localName \"obniz-BLE\"\n   * };\n   *\n   * var setting = {\n   *    duration : 10,  //scan duration time in seconds. default is 30 sec.\n   *    filterOnDevice: true\n   * }\n   *\n   * await obniz.ble.initWait();\n   * await obniz.ble.scan.startWait(target, setting);\n   * ```\n   *\n   *\n   */\n  filterOnDevice?: boolean;\n}\n\ntype BleScanState = \"stopped\" | \"stopping\" | \"started\" | \"starting\";\n\n/**\n * @category Use as Central\n */\nexport default class BleScan {\n  /**\n   * This function gets called when obniz Board finishes scanning.\n   *\n   * ```javascript\n   * // Javascript Example\n   *\n   * obniz.ble.scan.onfind = function(peripheral){\n   *   console.log(peripheral)\n   * };\n   *\n   * obniz.ble.scan.onfinish = function(peripherals){\n   *    console.log(\"scan timeout!\")\n   * };\n   *\n   * await obniz.ble.initWait();\n   * await obniz.ble.scan.startWait();\n   * ```\n   *\n   */\n  public onfinish?: (peripherals: BleRemotePeripheral[], error?: Error) => void;\n\n  /**\n   * This function gets called when obniz Board finds a new peripheral.\n   *\n   * ```javascript\n   * // Javascript Example\n   *\n   * obniz.ble.scan.onfind = function(peripheral){\n   *  console.log(peripheral)\n   * };\n   *\n   * await obniz.ble.initWait();\n   * await obniz.ble.scan.startWait();\n   * ```\n   */\n  public onfind?: (peripheral: BleRemotePeripheral) => void;\n  public state: BleScanState = \"stopping\";\n  protected scanTarget: BleScanTarget;\n  protected scanSettings: BleScanSetting;\n  protected obnizBle: ObnizBLE;\n  protected emitter: EventEmitter<\"onfind\" | \"onfinish\">;\n  protected scanedPeripherals: BleRemotePeripheral[];\n  private _timeoutTimer?: NodeJS.Timeout;\n  private _delayNotifyTimers: Array<{\n    peripheral: BleRemotePeripheral;\n    timer: NodeJS.Timeout;\n  }> = [];\n\n  constructor(obnizBle: ObnizBLE) {\n    this.scanTarget = {};\n    this.scanSettings = {};\n    this.obnizBle = obnizBle;\n    this.emitter = new EventEmitter();\n\n    this.scanedPeripherals = [];\n    this._timeoutTimer = undefined;\n  }\n\n  /**\n   * Use startWait() instead.\n   * @deprecated\n   */\n  public start(target: BleScanTarget = {}, settings: BleScanSetting = {}) {\n    console.log(`start() is deprecated since 3.5.0. Use startWait() instead`);\n    this.startWait(target, settings)\n      .then(() => {})\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * This starts scanning BLE.\n   *\n   * You can filter uuids or localName using the target param.\n   *\n   * ```javascript\n   * // Javascript Example\n   * var target = {\n   *     uuids: [\"fff0\",\"FFF1\"],     //scan only has uuids \"fff0\" and \"FFF1\"\n   *     localName: \"obniz-BLE\",     //scan only has localName \"obniz-BLE\"\n   * };\n   *\n   * var setting = {\n   *    duration : 10  //scan duration time in seconds. default is 30 sec.\n   * }\n   *\n   * await obniz.ble.initWait();\n   * await obniz.ble.scan.startWait(target, setting);\n   * ```\n   *\n   * This is also possible without params being valid.\n   *\n   * ```javascript\n   * // Javascript Example\n   * await obniz.ble.scan.startWait();\n   * ```\n   *\n   * Scanning starts with no error and results with not advertisement found while a device is trying to connect a peripheral.\n   * Before start scannnig. Establishing connection must be completed or canceled.\n   *\n   * @param target\n   * @param settings\n   */\n  public async startWait(target: BleScanTarget = {}, settings: BleScanSetting = {}) {\n    this.obnizBle.warningIfNotInitialize();\n    this.state = \"starting\";\n\n    const timeout: number | null = settings.duration === undefined ? 30 : settings.duration;\n    settings.duplicate = !!settings.duplicate;\n    settings.filterOnDevice = !!settings.filterOnDevice;\n    settings.activeScan = settings.activeScan !== false;\n    this.scanSettings = settings;\n\n    target = target || {};\n    this.scanTarget.binary = target.binary;\n    this.scanTarget.deviceAddress = target.deviceAddress;\n    this.scanTarget.localName = target.localName;\n    this.scanTarget.localNamePrefix = target.localNamePrefix;\n    this.scanTarget.uuids = [];\n    if (target && target.uuids) {\n      this.scanTarget.uuids = target.uuids.map((elm: UUID) => {\n        return BleHelper.uuidFilter(elm);\n      });\n    }\n    this.scanedPeripherals = [];\n    this._clearDelayNotifyTimer();\n    if (settings.filterOnDevice) {\n      this._setTargetFilterOnDevice(this.scanTarget);\n    } else {\n      this._setTargetFilterOnDevice({}); // clear\n    }\n    await this.obnizBle.centralBindings.startScanningWait(null, false, settings.activeScan);\n\n    this.clearTimeoutTimer();\n    if (timeout !== null) {\n      this._timeoutTimer = setTimeout(async () => {\n        this._timeoutTimer = undefined;\n        try {\n          await this.endWait();\n        } catch (e) {\n          this.finish(e);\n        }\n      }, timeout * 1000);\n    }\n\n    this.state = \"started\";\n  }\n\n  /**\n   * This scans and returns the first peripheral that was found among the objects specified in the target.\n   *\n   * ```javascript\n   * // Javascript Example\n   *\n   * await obniz.ble.initWait();\n   * var target = {\n   *   uuids: [\"fff0\"],\n   * };\n   *\n   * var peripheral = await obniz.ble.scan.startOneWait(target);\n   * console.log(peripheral);\n   * ```\n   *\n   * @param target\n   * @param settings\n   */\n  public async startOneWait(target: BleScanTarget, settings: BleScanSetting = {}): Promise<BleRemotePeripheral | null> {\n    await this.startWait(target, settings);\n\n    return new Promise((resolve: any, reject: any) => {\n      this.emitter.once(\"onfind\", async (peripheral: BleRemotePeripheral, error: any) => {\n        if (error) {\n          rejects(error);\n          return;\n        }\n        resolve(peripheral);\n        await this.endWait();\n      });\n\n      this.emitter.once(\"onfinish\", (peripherals: BleRemotePeripheral[], error: any) => {\n        if (error) {\n          rejects(error);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  /**\n   * This scans and returns all the peripherals found.\n   *\n   * This function does not return until scanning gets timed out.(default 30sec)\n   * If you want to change the default duration, you can do so with the duration param.\n   *\n   * ```javascript\n   * // Javascript Example\n   *\n   * await obniz.ble.initWait();\n   * var target = {\n   *  uuids: [\"fff0\"],\n   * };\n   * var setting = {\n   *   duration : 10\n   * }\n   *\n   * var peripherals = await obniz.ble.scan.startAllWait(target,setting);\n   *\n   * for(var peripheral of peripherals){\n   *   console.log(peripheral);\n   * }\n   * ```\n   *\n   * @param target\n   * @param settings\n   */\n  public async startAllWait(target: BleScanTarget, settings: BleScanSetting): Promise<BleRemotePeripheral[]> {\n    await this.startWait(target, settings);\n    return new Promise((resolve: any, reject: any) => {\n      this.emitter.once(\"onfinish\", (peripherals: BleRemotePeripheral, error: any) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(this.scanedPeripherals);\n      });\n    });\n  }\n\n  /**\n   * Use endWait() instead\n   * @deprecated\n   */\n  public end() {\n    console.log(`end() is deprecated since 3.5.0. Use endWait() instead`);\n    this.endWait()\n      .then(() => {})\n      .catch((e) => {\n        throw e;\n      });\n  }\n\n  /**\n   * This stops scanning BLE.\n   *\n   * ```javascript\n   * // Javascript Example\n   * await obniz.ble.initWait();\n   * await obniz.ble.scan.startWait();\n   * await obniz.wait(5000);\n   * await obniz.ble.scan.endWait();\n   * ```\n   */\n  public async endWait() {\n    if (this.state === \"started\" || this.state === \"starting\") {\n      this.state = \"stopping\";\n      this.clearTimeoutTimer();\n      await this.obnizBle.centralBindings.stopScanningWait();\n      this.finish();\n    }\n  }\n\n  /**\n   * @ignore\n   * @param notifyName\n   * @param params\n   */\n  public notifyFromServer(notifyName: string, params: any) {\n    switch (notifyName) {\n      case \"obnizClose\": {\n        this.finish(new ObnizOfflineError());\n        break;\n      }\n      case \"onfind\": {\n        const peripheral: BleRemotePeripheral = params;\n\n        const alreadyGotCompleteAdveData =\n          peripheral.adv_data &&\n          peripheral.adv_data.length > 0 &&\n          peripheral.scan_resp &&\n          peripheral.scan_resp.length > 0;\n        const nonConnectable = peripheral.ble_event_type === \"non_connectable_advertising\";\n        const maybeAdvOnly =\n          this._delayNotifyTimers.find((e) => e.peripheral.address === peripheral.address) &&\n          (!peripheral.scan_resp || peripheral.scan_resp.length === 0);\n\n        // wait for adv_data + scan resp\n        // 10 seconds timeout\n        if (alreadyGotCompleteAdveData || nonConnectable || maybeAdvOnly) {\n          this._removeDelayNotifyTimer(peripheral.address);\n          this._notifyOnFind(peripheral);\n        } else {\n          const timer = setInterval(() => {\n            this._notifyOnFind(peripheral);\n          }, 10000);\n          this._delayNotifyTimers.push({ timer, peripheral });\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Clear advertisement filter.\n   */\n  public clearAdvertisementFilter() {\n    this.obnizBle.Obniz.send({\n      ble: {\n        hci: {\n          advertisement_filter: [],\n        },\n      },\n    });\n  }\n\n  protected _setAdvertisementFilter(filterVals: BleScanAdvertisementFilterParam[]) {\n    // < 3.2.0\n    if (semver.lt(this.obnizBle.Obniz.firmware_ver!, \"3.2.0\")) {\n      return;\n    }\n\n    // #define BLE_AD_REPORT_DEVICE_ADDRESS_INDEX 2\n    // #define BLE_AD_REPORT_ADVERTISMENT_INDEX 9\n\n    const filters: any = [];\n    filterVals.forEach((filterVal: BleScanAdvertisementFilterParam) => {\n      if (filterVal.localNamePrefix) {\n        filters.push({\n          range: {\n            index: 9,\n            length: 255,\n          },\n          value: [0x08, ...Util.string2dataArray(filterVal.localNamePrefix)],\n        });\n        filters.push({\n          range: {\n            index: 9,\n            length: 255,\n          },\n          value: [0x09, ...Util.string2dataArray(filterVal.localNamePrefix)],\n        });\n      }\n\n      if (filterVal.deviceAddress) {\n        filters.push({\n          range: {\n            index: 2,\n            length: 6,\n          },\n          value: Util.hexToBinary(filterVal.deviceAddress, true),\n        });\n      }\n\n      if (filterVal.uuid) {\n        const binary = Util.hexToBinary(filterVal.uuid, true);\n\n        filters.push({\n          range: {\n            index: 9,\n            length: 255,\n          },\n          value: binary,\n        });\n      }\n\n      if (filterVal.binary) {\n        filters.push({\n          range: {\n            index: 0,\n            length: 255,\n          },\n          value: filterVal.binary,\n        });\n      }\n    });\n\n    this.obnizBle.Obniz.send({\n      ble: {\n        hci: {\n          advertisement_filter: filters,\n        },\n      },\n    });\n  }\n\n  protected _arrayWrapper<T>(val: T | T[]): T[] {\n    if (Array.isArray(val)) {\n      return val;\n    } else {\n      return [val];\n    }\n  }\n\n  protected _setTargetFilterOnDevice(scanTarget: BleScanTarget) {\n    // < 3.2.0\n    if (semver.lt(this.obnizBle.Obniz.firmware_ver!, \"3.2.0\")) {\n      return;\n    }\n\n    const adFilters: BleScanAdvertisementFilterParam[] = [];\n    if (scanTarget.uuids) {\n      scanTarget.uuids.map((elm: UUID) => {\n        adFilters.push({ uuid: BleHelper.uuidFilter(elm) });\n      });\n    }\n    if (scanTarget.localName) {\n      this._arrayWrapper(scanTarget.localName).forEach((name) => {\n        adFilters.push({ localNamePrefix: name });\n      });\n    }\n\n    if (scanTarget.deviceAddress) {\n      this._arrayWrapper(scanTarget.deviceAddress).forEach((address) => {\n        adFilters.push({ deviceAddress: address });\n      });\n    }\n\n    if (scanTarget.localNamePrefix) {\n      this._arrayWrapper(scanTarget.localNamePrefix).forEach((name) => {\n        adFilters.push({ localNamePrefix: name });\n      });\n    }\n    if (scanTarget.binary) {\n      if (Array.isArray(scanTarget.binary)) {\n        scanTarget.binary.forEach((e: any) => {\n          adFilters.push({ binary: e });\n        });\n      } else {\n        adFilters.push({ binary: scanTarget.binary as number[] });\n      }\n    }\n    this._setAdvertisementFilter(adFilters);\n  }\n\n  protected isTarget(peripheral: BleRemotePeripheral) {\n    const functionBinding = {\n      localNamePrefix: this.isLocalNamePrefixTarget.bind(this),\n      localName: this.isLocalNameTarget.bind(this),\n      uuids: this.isUuidTarget.bind(this),\n      deviceAddress: this.isDeviceAddressTarget.bind(this),\n      binary: this.isBinaryTarget.bind(this),\n    };\n\n    if (!this.scanTarget) {\n      // no filter\n      return true;\n    }\n\n    let noFilter = true;\n    // no filter\n    for (const key in functionBinding) {\n      const oneTarget: any = (this.scanTarget as any)[key] as any;\n      if (oneTarget) {\n        if (Array.isArray(oneTarget) && oneTarget.length > 0) {\n          noFilter = false;\n        } else if (!Array.isArray(oneTarget) && oneTarget) {\n          noFilter = false;\n        }\n      }\n    }\n    if (noFilter) {\n      return true;\n    }\n\n    let isTarget = false;\n    for (const key in functionBinding) {\n      const targetDetectFunc = (functionBinding as any)[key];\n      isTarget = isTarget || targetDetectFunc(peripheral);\n    }\n\n    return isTarget;\n  }\n\n  protected clearTimeoutTimer() {\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n      this._timeoutTimer = undefined;\n    }\n  }\n\n  private finish(error?: Error) {\n    if (this.state !== \"stopped\") {\n      this.clearTimeoutTimer();\n      this._delayNotifyTimers.forEach((e) => this._notifyOnFind(e.peripheral));\n      this._clearDelayNotifyTimer();\n      this.state = \"stopped\";\n      this.obnizBle.Obniz._runUserCreatedFunction(this.onfinish, this.scanedPeripherals, error);\n      this.emitter.emit(\"onfinish\", this.scanedPeripherals, error);\n    }\n  }\n\n  private _notifyOnFind(peripheral: BleRemotePeripheral) {\n    if (this.scanSettings.duplicate === false) {\n      // duplicate filter\n      if (this.scanedPeripherals.find((e: any) => e.address === peripheral.address)) {\n        return;\n      }\n    }\n    if (this.isTarget(peripheral)) {\n      this.scanedPeripherals.push(peripheral);\n      this.obnizBle.Obniz._runUserCreatedFunction(this.onfind, peripheral);\n      this.emitter.emit(\"onfind\", peripheral);\n    }\n  }\n\n  private isLocalNameTarget(peripheral: BleRemotePeripheral) {\n    if (!this.scanTarget.localName) {\n      return false;\n    }\n    for (const name of this._arrayWrapper(this.scanTarget.localName)) {\n      if (name === peripheral.localName) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private isLocalNamePrefixTarget(peripheral: BleRemotePeripheral) {\n    if (!this.scanTarget.localNamePrefix) {\n      return false;\n    }\n    for (const name of this._arrayWrapper(this.scanTarget.localNamePrefix)) {\n      if (peripheral.localName && peripheral.localName.startsWith(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private isBinaryTarget(peripheral: BleRemotePeripheral) {\n    if (!this.scanTarget.binary) {\n      return false;\n    }\n    return true; // cannot detect on obnizjs\n\n    return false;\n  }\n\n  private isUuidTarget(peripheral: BleRemotePeripheral) {\n    if (!this.scanTarget.uuids || this.scanTarget.uuids.length === 0) {\n      return false;\n    }\n    const uuids: any = peripheral.advertisementServiceUuids().map((e: any) => {\n      return BleHelper.uuidFilter(e);\n    });\n    for (const uuid of this.scanTarget.uuids) {\n      if (uuids.includes(uuid)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isDeviceAddressTarget(peripheral: BleRemotePeripheral) {\n    if (!this.scanTarget.deviceAddress) {\n      return false;\n    }\n    if (this.scanTarget.deviceAddress === peripheral.address) {\n      return true;\n    }\n    return false;\n  }\n\n  private _clearDelayNotifyTimer() {\n    this._delayNotifyTimers.forEach((e) => {\n      clearTimeout(e.timer);\n    });\n    this._delayNotifyTimers = [];\n  }\n\n  private _removeDelayNotifyTimer(targetAddress: BleDeviceAddress) {\n    this._delayNotifyTimers = this._delayNotifyTimers.filter((e) => {\n      if (e.peripheral.address === targetAddress) {\n        clearTimeout(e.timer);\n        return false;\n      }\n      return true;\n    });\n  }\n}\n"]}