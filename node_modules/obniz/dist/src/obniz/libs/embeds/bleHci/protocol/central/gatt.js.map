{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/central/gatt.ts"],"names":[],"mappings":"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","file":"gatt.js","sourcesContent":["/**\n * @packageDocumentation\n *\n * @ignore\n */\nimport AclStream from \"./acl-stream\";\n\n// let debug = require('debug')('att');\nconst debug: any = () => {};\n\n/* eslint-disable no-unused-vars */\n\nimport EventEmitter from \"eventemitter3\";\nimport {\n  ObnizBleAttError,\n  ObnizBleOpError,\n  ObnizBleUnknownCharacteristicError,\n  ObnizBleUnknownDescriptorError,\n  ObnizBleUnknownServiceError,\n} from \"../../../../../ObnizError\";\nimport { UUID } from \"../../bleTypes\";\n\n/**\n * @ignore\n */\nnamespace ATT {\n  export const OP_ERROR: any = 0x01;\n  export const OP_MTU_REQ: any = 0x02;\n  export const OP_MTU_RESP: any = 0x03;\n  export const OP_FIND_INFO_REQ: any = 0x04;\n  export const OP_FIND_INFO_RESP: any = 0x05;\n  export const OP_READ_BY_TYPE_REQ: any = 0x08;\n  export const OP_READ_BY_TYPE_RESP: any = 0x09;\n  export const OP_READ_REQ: any = 0x0a;\n  export const OP_READ_RESP: any = 0x0b;\n  export const OP_READ_BLOB_REQ: any = 0x0c;\n  export const OP_READ_BLOB_RESP: any = 0x0d;\n  export const OP_READ_BY_GROUP_REQ: any = 0x10;\n  export const OP_READ_BY_GROUP_RESP: any = 0x11;\n  export const OP_WRITE_REQ: any = 0x12;\n  export const OP_WRITE_RESP: any = 0x13;\n  export const OP_PREPARE_WRITE_REQ: any = 0x16;\n  export const OP_PREPARE_WRITE_RESP: any = 0x17;\n  export const OP_EXECUTE_WRITE_REQ: any = 0x18;\n  export const OP_EXECUTE_WRITE_RESP: any = 0x19;\n  export const OP_HANDLE_NOTIFY: any = 0x1b;\n  export const OP_HANDLE_IND: any = 0x1d;\n  export const OP_HANDLE_CNF: any = 0x1e;\n  export const OP_WRITE_CMD: any = 0x52;\n\n  export const ECODE_SUCCESS: any = 0x00;\n  export const ECODE_INVALID_HANDLE: any = 0x01;\n  export const ECODE_READ_NOT_PERM: any = 0x02;\n  export const ECODE_WRITE_NOT_PERM: any = 0x03;\n  export const ECODE_INVALID_PDU: any = 0x04;\n  export const ECODE_AUTHENTICATION: any = 0x05;\n  export const ECODE_REQ_NOT_SUPP: any = 0x06;\n  export const ECODE_INVALID_OFFSET: any = 0x07;\n  export const ECODE_AUTHORIZATION: any = 0x08;\n  export const ECODE_PREP_QUEUE_FULL: any = 0x09;\n  export const ECODE_ATTR_NOT_FOUND: any = 0x0a;\n  export const ECODE_ATTR_NOT_LONG: any = 0x0b;\n  export const ECODE_INSUFF_ENCR_KEY_SIZE: any = 0x0c;\n  export const ECODE_INVAL_ATTR_VALUE_LEN: any = 0x0d;\n  export const ECODE_UNLIKELY: any = 0x0e;\n  export const ECODE_INSUFF_ENC: any = 0x0f;\n  export const ECODE_UNSUPP_GRP_TYPE: any = 0x10;\n  export const ECODE_INSUFF_RESOURCES: any = 0x11;\n\n  export const CID: any = 0x0004;\n}\n\nconst ATT_OP_READABLES: { [_: number]: string } = {\n  0x01: \"OP_ERROR\",\n  0x02: \"OP_MTU_REQ\",\n  0x03: \"OP_MTU_RESP\",\n  0x04: \"OP_FIND_INFO_REQ\",\n  0x05: \"OP_FIND_INFO_RESP\",\n  0x08: \"OP_READ_BY_TYPE_REQ\",\n  0x09: \"OP_READ_BY_TYPE_RESP\",\n  0x0a: \"OP_READ_REQ\",\n  0x0b: \"OP_READ_RESP\",\n  0x0c: \"OP_READ_BLOB_REQ\",\n  0x0d: \"OP_READ_BLOB_RESP\",\n  0x10: \"OP_READ_BY_GROUP_REQ\",\n  0x11: \"OP_READ_BY_GROUP_RESP\",\n  0x12: \"OP_WRITE_REQ\",\n  0x13: \"OP_WRITE_RESP\",\n  0x16: \"OP_PREPARE_WRITE_REQ\",\n  0x17: \"OP_PREPARE_WRITE_RESP\",\n  0x18: \"OP_EXECUTE_WRITE_REQ\",\n  0x19: \"OP_EXECUTE_WRITE_RESP\",\n  0x1b: \"OP_HANDLE_NOTIFY\",\n  0x1d: \"OP_HANDLE_IND\",\n  0x1e: \"OP_HANDLE_CNF\",\n  0x52: \"OP_WRITE_CMD\",\n};\n\nconst ATT_ECODE_READABLES: { [_: number]: string } = {\n  0x00: \"ECODE_SUCCESS\",\n  0x01: \"ECODE_INVALID_HANDLE\",\n  0x02: \"ECODE_READ_NOT_PERM\",\n  0x03: \"ECODE_WRITE_NOT_PERM\",\n  0x04: \"ECODE_INVALID_PDU\",\n  0x05: \"ECODE_AUTHENTICATION\",\n  0x06: \"ECODE_REQ_NOT_SUPP\",\n  0x07: \"ECODE_INVALID_OFFSET\",\n  0x08: \"ECODE_AUTHORIZATION\",\n  0x09: \"ECODE_PREP_QUEUE_FULL\",\n  0x0a: \"ECODE_ATTR_NOT_FOUND\",\n  0x0b: \"ECODE_ATTR_NOT_LONG\",\n  0x0c: \"ECODE_INSUFF_ENCR_KEY_SIZE\",\n  0x0d: \"ECODE_INVAL_ATTR_VALUE_LEN\",\n  0x0e: \"ECODE_UNLIKELY\",\n  0x0f: \"ECODE_INSUFF_ENC\",\n  0x10: \"ECODE_UNSUPP_GRP_TYPE\",\n  0x11: \"ECODE_INSUFF_RESOURCES\",\n};\n\n/**\n * @ignore\n */\nnamespace GATT {\n  export const PRIM_SVC_UUID: any = 0x2800;\n  export const INCLUDE_UUID: any = 0x2802;\n  export const CHARAC_UUID: any = 0x2803;\n\n  export const CLIENT_CHARAC_CFG_UUID: any = 0x2902;\n  export const SERVER_CHARAC_CFG_UUID: any = 0x2903;\n}\n\n/* eslint-enable no-unused-vars */\n\ntype GattEventTypes = \"notification\" | \"handleConfirmation\" | \"handleNotify\" | \"end\";\n\n/**\n * @ignore\n */\nclass Gatt extends EventEmitter<GattEventTypes> {\n  public _address: any;\n  public _aclStream: AclStream;\n  public _services: any;\n  public _characteristics: any;\n  public _descriptors: any;\n  public _currentCommand: any;\n  public _commandQueue: any;\n  public _mtu: any;\n  public _security: any;\n  public _commandPromises: Array<Promise<any>>;\n  public onAclStreamDataBinded: any;\n  public onAclStreamEndBinded: any;\n\n  constructor(address: any, aclStream: AclStream) {\n    super();\n    this._address = address;\n    this._aclStream = aclStream;\n\n    this._services = {};\n    this._characteristics = {};\n    this._descriptors = {};\n\n    this._currentCommand = null;\n    this._commandQueue = [];\n    this._commandPromises = [];\n\n    this._mtu = 23;\n    this._security = \"low\";\n\n    this.onAclStreamDataBinded = this.onAclStreamData.bind(this);\n    this.onAclStreamEndBinded = this.onAclStreamEnd.bind(this);\n\n    this._aclStream.on(\"data\", this.onAclStreamDataBinded);\n    this._aclStream.on(\"end\", this.onAclStreamEndBinded);\n  }\n\n  public async encryptWait(options: any): Promise<string> {\n    const result = await this._serialPromiseQueueWait(async () => {\n      const encrypt = await this._aclStream.encryptWait(options);\n      if (encrypt === 0) {\n        throw new Error(\"Encript failed\");\n      }\n      this._security = \"medium\";\n      return this._aclStream._smp.getKeys();\n    });\n    return result;\n  }\n\n  public async setEncryptOption(options: any) {\n    this._aclStream.setEncryptOption(options);\n  }\n\n  public onEnd(reason: any) {\n    this.emit(\"end\", reason);\n  }\n\n  public async exchangeMtuWait(mtu: any) {\n    const data = await this._execCommandWait(this.mtuRequest(mtu), ATT.OP_MTU_RESP);\n    const opcode: any = data[0];\n\n    const newMtu: any = data.readUInt16LE(1);\n\n    debug(this._address + \": new MTU is \" + newMtu);\n\n    this._mtu = newMtu;\n\n    return this._mtu;\n  }\n\n  public async discoverServicesWait(uuids: any): Promise<any> {\n    const services: any = [];\n    let startHandle = 0x0001;\n\n    while (1) {\n      const data = await this._execCommandWait(this.readByGroupRequest(startHandle, 0xffff, GATT.PRIM_SVC_UUID), [\n        ATT.OP_READ_BY_GROUP_RESP,\n        ATT.OP_ERROR,\n      ]);\n      const opcode: any = data[0];\n      let i: any = 0;\n      if (opcode === ATT.OP_READ_BY_GROUP_RESP) {\n        const type: any = data[1];\n        const num: any = (data.length - 2) / type;\n\n        for (i = 0; i < num; i++) {\n          services.push({\n            startHandle: data.readUInt16LE(2 + i * type + 0),\n            endHandle: data.readUInt16LE(2 + i * type + 2),\n            uuid:\n              type === 6\n                ? data.readUInt16LE(2 + i * type + 4).toString(16)\n                : data\n                    .slice(2 + i * type + 4)\n                    .slice(0, 16)\n                    .toString(\"hex\")\n                    .match(/.{1,2}/g)!\n                    .reverse()\n                    .join(\"\"),\n          });\n        }\n      }\n\n      if (opcode !== ATT.OP_READ_BY_GROUP_RESP || services[services.length - 1].endHandle === 0xffff) {\n        const serviceUuids: any = [];\n        for (i = 0; i < services.length; i++) {\n          if (uuids.length === 0 || uuids.indexOf(services[i].uuid) !== -1) {\n            serviceUuids.push(services[i].uuid);\n          }\n\n          this._services[services[i].uuid] = services[i];\n        }\n        return serviceUuids;\n      }\n      startHandle = services[services.length - 1].endHandle + 1;\n    }\n  }\n\n  public async discoverIncludedServicesWait(serviceUuid: UUID, uuids: UUID[]) {\n    const service: any = this.getService(serviceUuid);\n    const includedServices: any = [];\n    let startHandle = service.startHandle;\n    while (1) {\n      const data = await this._execCommandWait(\n        this.readByTypeRequest(startHandle, service.endHandle, GATT.INCLUDE_UUID),\n        [ATT.OP_READ_BY_TYPE_RESP, ATT.OP_ERROR],\n      );\n      const opcode: any = data[0];\n      let i: any = 0;\n\n      if (opcode === ATT.OP_READ_BY_TYPE_RESP) {\n        const type: any = data[1];\n        const num: any = (data.length - 2) / type;\n\n        for (i = 0; i < num; i++) {\n          includedServices.push({\n            endHandle: data.readUInt16LE(2 + i * type + 0),\n            startHandle: data.readUInt16LE(2 + i * type + 2),\n            uuid:\n              type === 8\n                ? data.readUInt16LE(2 + i * type + 6).toString(16)\n                : data\n                    .slice(2 + i * type + 6)\n                    .slice(0, 16)\n                    .toString(\"hex\")\n                    .match(/.{1,2}/g)!\n                    .reverse()\n                    .join(\"\"),\n          });\n        }\n      }\n\n      if (\n        opcode !== ATT.OP_READ_BY_TYPE_RESP ||\n        includedServices[includedServices.length - 1].endHandle === service.endHandle\n      ) {\n        const includedServiceUuids: any = [];\n\n        for (i = 0; i < includedServices.length; i++) {\n          if (uuids.length === 0 || uuids.indexOf(includedServices[i].uuid) !== -1) {\n            includedServiceUuids.push(includedServices[i].uuid);\n          }\n        }\n\n        return includedServiceUuids;\n      }\n      startHandle = includedServices[includedServices.length - 1].endHandle + 1;\n    }\n  }\n\n  public async discoverCharacteristicsWait(serviceUuid: any, characteristicUuids: any) {\n    const service: any = this.getService(serviceUuid);\n    const characteristics: any = [];\n\n    this._characteristics[serviceUuid] = this._characteristics[serviceUuid] || {};\n    this._descriptors[serviceUuid] = this._descriptors[serviceUuid] || {};\n    let startHandle = service.startHandle;\n\n    while (1) {\n      const data = await this._execCommandWait(\n        this.readByTypeRequest(startHandle, service.endHandle, GATT.CHARAC_UUID),\n        [ATT.OP_READ_BY_TYPE_RESP, ATT.OP_ERROR],\n      );\n\n      const opcode: any = data[0];\n      let i: any = 0;\n\n      if (opcode === ATT.OP_READ_BY_TYPE_RESP) {\n        const type: any = data[1];\n        const num: any = (data.length - 2) / type;\n\n        for (i = 0; i < num; i++) {\n          characteristics.push({\n            startHandle: data.readUInt16LE(2 + i * type + 0),\n            properties: data.readUInt8(2 + i * type + 2),\n            valueHandle: data.readUInt16LE(2 + i * type + 3),\n            uuid:\n              type === 7\n                ? data.readUInt16LE(2 + i * type + 5).toString(16)\n                : data\n                    .slice(2 + i * type + 5)\n                    .slice(0, 16)\n                    .toString(\"hex\")\n                    .match(/.{1,2}/g)!\n                    .reverse()\n                    .join(\"\"),\n          });\n        }\n      }\n\n      if (\n        opcode !== ATT.OP_READ_BY_TYPE_RESP ||\n        characteristics[characteristics.length - 1].valueHandle === service.endHandle\n      ) {\n        const characteristicsDiscovered: any = [];\n        for (i = 0; i < characteristics.length; i++) {\n          const properties: any = characteristics[i].properties;\n\n          const characteristic: any = {\n            properties: [],\n            uuid: characteristics[i].uuid,\n          };\n\n          if (i !== 0) {\n            characteristics[i - 1].endHandle = characteristics[i].startHandle - 1;\n          }\n\n          if (i === characteristics.length - 1) {\n            characteristics[i].endHandle = service.endHandle;\n          }\n\n          this._characteristics[serviceUuid][characteristics[i].uuid] = characteristics[i];\n\n          if (properties & 0x01) {\n            characteristic.properties.push(\"broadcast\");\n          }\n\n          if (properties & 0x02) {\n            characteristic.properties.push(\"read\");\n          }\n\n          if (properties & 0x04) {\n            characteristic.properties.push(\"writeWithoutResponse\");\n          }\n\n          if (properties & 0x08) {\n            characteristic.properties.push(\"write\");\n          }\n\n          if (properties & 0x10) {\n            characteristic.properties.push(\"notify\");\n          }\n\n          if (properties & 0x20) {\n            characteristic.properties.push(\"indicate\");\n          }\n\n          if (properties & 0x40) {\n            characteristic.properties.push(\"authenticatedSignedWrites\");\n          }\n\n          if (properties & 0x80) {\n            characteristic.properties.push(\"extendedProperties\");\n          }\n\n          if (characteristicUuids.length === 0 || characteristicUuids.indexOf(characteristic.uuid) !== -1) {\n            characteristicsDiscovered.push(characteristic);\n          }\n        }\n\n        return characteristicsDiscovered;\n      }\n      startHandle = characteristics[characteristics.length - 1].valueHandle + 1;\n    }\n  }\n\n  public async readWait(serviceUuid: any, characteristicUuid: any): Promise<Buffer> {\n    const characteristic = this.getCharacteristic(serviceUuid, characteristicUuid);\n\n    let readData: any = Buffer.alloc(0);\n    while (1) {\n      let data;\n      if (readData.length === 0) {\n        data = await this._execCommandWait(this.readRequest(characteristic.valueHandle), ATT.OP_READ_RESP);\n      } else {\n        data = await this._execCommandWait(\n          this.readBlobRequest(characteristic.valueHandle, readData.length),\n          ATT.OP_READ_BLOB_RESP,\n        );\n      }\n      const opcode: any = data[0];\n\n      readData = Buffer.from(readData.toString(\"hex\") + data.slice(1).toString(\"hex\"), \"hex\");\n\n      if (data.length === this._mtu) {\n        continue;\n      } else {\n        return readData;\n      }\n    }\n    return readData;\n  }\n\n  public async writeWait(serviceUuid: any, characteristicUuid: any, data: any, withoutResponse: any): Promise<void> {\n    const characteristic: any = this.getCharacteristic(serviceUuid, characteristicUuid);\n    if (withoutResponse) {\n      await this._execNoRespCommandWait(this.writeRequest(characteristic.valueHandle, data, true));\n    } else if (data.length + 3 > this._mtu) {\n      await this.longWriteWait(serviceUuid, characteristicUuid, data, withoutResponse);\n    } else {\n      await this._execCommandWait(this.writeRequest(characteristic.valueHandle, data, false), ATT.OP_WRITE_RESP);\n    }\n  }\n\n  public async broadcastWait(serviceUuid: any, characteristicUuid: any, broadcast: any) {\n    const characteristic: any = this.getCharacteristic(serviceUuid, characteristicUuid);\n\n    const data = await this._execCommandWait(\n      this.readByTypeRequest(characteristic.startHandle, characteristic.endHandle, GATT.SERVER_CHARAC_CFG_UUID),\n      ATT.OP_READ_BY_TYPE_RESP,\n    );\n\n    const opcode: any = data[0];\n    // let type = data[1];\n    const handle: any = data.readUInt16LE(2);\n    let value: any = data.readUInt16LE(4);\n\n    if (broadcast) {\n      value |= 0x0001;\n    } else {\n      value &= 0xfffe;\n    }\n\n    const valueBuffer: any = Buffer.alloc(2);\n    valueBuffer.writeUInt16LE(value, 0);\n\n    const _data = await this._execCommandWait(this.writeRequest(handle, valueBuffer, false), ATT.OP_WRITE_RESP);\n  }\n\n  public async notifyWait(serviceUuid: any, characteristicUuid: any, notify: any): Promise<void> {\n    const characteristic: any = this.getCharacteristic(serviceUuid, characteristicUuid);\n\n    const data = await this._execCommandWait(\n      this.readByTypeRequest(characteristic.startHandle, characteristic.endHandle, GATT.CLIENT_CHARAC_CFG_UUID),\n      ATT.OP_READ_BY_TYPE_RESP,\n    );\n\n    const opcode: any = data[0];\n    // let type = data[1];\n    const handle: any = data.readUInt16LE(2);\n    let value: any = data.readUInt16LE(4);\n\n    const useNotify: any = characteristic.properties & 0x10;\n    const useIndicate: any = characteristic.properties & 0x20;\n\n    if (notify) {\n      if (useNotify) {\n        value |= 0x0001;\n      } else if (useIndicate) {\n        value |= 0x0002;\n      }\n    } else {\n      if (useNotify) {\n        value &= 0xfffe;\n      } else if (useIndicate) {\n        value &= 0xfffd;\n      }\n    }\n\n    const valueBuffer: any = Buffer.alloc(2);\n    valueBuffer.writeUInt16LE(value, 0);\n\n    const _data = await this._execCommandWait(this.writeRequest(handle, valueBuffer, false), ATT.OP_WRITE_RESP);\n    const _opcode: any = _data[0];\n    debug(\"set notify write results: \" + (_opcode === ATT.OP_WRITE_RESP));\n  }\n\n  public async discoverDescriptorsWait(serviceUuid: any, characteristicUuid: any) {\n    const characteristic: any = this.getCharacteristic(serviceUuid, characteristicUuid);\n    const descriptors: any = [];\n\n    this._descriptors[serviceUuid][characteristicUuid] = {};\n    let startHandle = characteristic.valueHandle + 1;\n    while (1) {\n      const data = await this._execCommandWait(this.findInfoRequest(startHandle, characteristic.endHandle), [\n        ATT.OP_FIND_INFO_RESP,\n        ATT.OP_ERROR,\n      ]);\n\n      const opcode: any = data[0];\n      let i: any = 0;\n\n      if (opcode === ATT.OP_FIND_INFO_RESP) {\n        const num: any = data[1];\n\n        for (i = 0; i < num; i++) {\n          descriptors.push({\n            handle: data.readUInt16LE(2 + i * 4 + 0),\n            uuid: data.readUInt16LE(2 + i * 4 + 2).toString(16),\n          });\n        }\n      }\n\n      if (opcode !== ATT.OP_FIND_INFO_RESP || descriptors[descriptors.length - 1].handle === characteristic.endHandle) {\n        const descriptorUuids: any = [];\n        for (i = 0; i < descriptors.length; i++) {\n          descriptorUuids.push(descriptors[i].uuid);\n\n          this._descriptors[serviceUuid][characteristicUuid][descriptors[i].uuid] = descriptors[i];\n        }\n\n        return descriptorUuids;\n      }\n      startHandle = descriptors[descriptors.length - 1].handle + 1;\n    }\n  }\n\n  public async readValueWait(serviceUuid: any, characteristicUuid: any, descriptorUuid: any): Promise<Buffer> {\n    const descriptor: any = this.getDescriptor(serviceUuid, characteristicUuid, descriptorUuid);\n\n    const data = await this._execCommandWait(this.readRequest(descriptor.handle), ATT.OP_READ_RESP);\n\n    return data.slice(1);\n  }\n\n  public async writeValueWait(\n    serviceUuid: any,\n    characteristicUuid: any,\n    descriptorUuid: any,\n    data: any,\n  ): Promise<void> {\n    const descriptor: any = this.getDescriptor(serviceUuid, characteristicUuid, descriptorUuid);\n\n    await this._execCommandWait(this.writeRequest(descriptor.handle, data, false), ATT.OP_WRITE_RESP);\n  }\n\n  public async readHandleWait(handle: any): Promise<Buffer> {\n    const data = await this._execCommandWait(this.readRequest(handle), ATT.OP_READ_RESP);\n    return data.slice(1);\n  }\n\n  public async writeHandleWait(handle: any, data: any, withoutResponse: any) {\n    if (withoutResponse) {\n      await this._execNoRespCommandWait(this.writeRequest(handle, data, true));\n    } else {\n      await this._execCommandWait(this.writeRequest(handle, data, false), ATT.OP_WRITE_RESP);\n    }\n  }\n\n  private onAclStreamData(cid: any, data?: any) {\n    if (cid !== ATT.CID) {\n      return;\n    }\n\n    // notify / indicate\n    if (data[0] === ATT.OP_HANDLE_NOTIFY || data[0] === ATT.OP_HANDLE_IND) {\n      const valueHandle: any = data.readUInt16LE(1);\n      const valueData: any = data.slice(3);\n\n      this.emit(\"handleNotify\", this._address, valueHandle, valueData);\n\n      if (data[0] === ATT.OP_HANDLE_IND) {\n        // background\n        this._execNoRespCommandWait(this.handleConfirmation()).then(() => {\n          this.emit(\"handleConfirmation\", this._address, valueHandle);\n        });\n      }\n\n      for (const serviceUuid in this._services) {\n        for (const characteristicUuid in this._characteristics[serviceUuid]) {\n          if (this._characteristics[serviceUuid][characteristicUuid].valueHandle === valueHandle) {\n            this.emit(\"notification\", this._address, serviceUuid, characteristicUuid, valueData);\n          }\n        }\n      }\n    }\n  }\n\n  private onAclStreamEnd() {\n    this._aclStream.removeListener(\"data\", this.onAclStreamDataBinded);\n    this._aclStream.removeListener(\"end\", this.onAclStreamEndBinded);\n  }\n\n  private writeAtt(data: Buffer) {\n    const opCode = data[0];\n    const handle = data.length > 3 ? data.readUInt16LE(1) : \"none\";\n    debug(\n      `ATT: opCode=${opCode}(${ATT_OP_READABLES[opCode]}) handle=${handle} address=` +\n        this._address +\n        \": write: \" +\n        data.toString(\"hex\"),\n    );\n\n    this._aclStream.write(ATT.CID, data);\n  }\n\n  private errorResponse(opcode: any, handle: any, status: any) {\n    const buf: any = Buffer.alloc(5);\n\n    buf.writeUInt8(ATT.OP_ERROR, 0);\n    buf.writeUInt8(opcode, 1);\n    buf.writeUInt16LE(handle, 2);\n    buf.writeUInt8(status, 4);\n\n    return buf;\n  }\n\n  private mtuRequest(mtu: any) {\n    const buf: any = Buffer.alloc(3);\n\n    buf.writeUInt8(ATT.OP_MTU_REQ, 0);\n    buf.writeUInt16LE(mtu, 1);\n\n    return buf;\n  }\n\n  private readByGroupRequest(startHandle: any, endHandle: any, groupUuid: any) {\n    const buf: any = Buffer.alloc(7);\n\n    buf.writeUInt8(ATT.OP_READ_BY_GROUP_REQ, 0);\n    buf.writeUInt16LE(startHandle, 1);\n    buf.writeUInt16LE(endHandle, 3);\n    buf.writeUInt16LE(groupUuid, 5);\n\n    return buf;\n  }\n\n  private readByTypeRequest(startHandle: any, endHandle: any, groupUuid: any) {\n    const buf: any = Buffer.alloc(7);\n\n    buf.writeUInt8(ATT.OP_READ_BY_TYPE_REQ, 0);\n    buf.writeUInt16LE(startHandle, 1);\n    buf.writeUInt16LE(endHandle, 3);\n    buf.writeUInt16LE(groupUuid, 5);\n\n    return buf;\n  }\n\n  private readRequest(handle: any) {\n    const buf: any = Buffer.alloc(3);\n\n    buf.writeUInt8(ATT.OP_READ_REQ, 0);\n    buf.writeUInt16LE(handle, 1);\n\n    return buf;\n  }\n\n  private readBlobRequest(handle: any, offset: any) {\n    const buf: any = Buffer.alloc(5);\n\n    buf.writeUInt8(ATT.OP_READ_BLOB_REQ, 0);\n    buf.writeUInt16LE(handle, 1);\n    buf.writeUInt16LE(offset, 3);\n\n    return buf;\n  }\n\n  private findInfoRequest(startHandle: any, endHandle: any) {\n    const buf: any = Buffer.alloc(5);\n\n    buf.writeUInt8(ATT.OP_FIND_INFO_REQ, 0);\n    buf.writeUInt16LE(startHandle, 1);\n    buf.writeUInt16LE(endHandle, 3);\n\n    return buf;\n  }\n\n  private writeRequest(handle: any, data: any, withoutResponse: any) {\n    const buf: any = Buffer.alloc(3 + data.length);\n\n    buf.writeUInt8(withoutResponse ? ATT.OP_WRITE_CMD : ATT.OP_WRITE_REQ, 0);\n    buf.writeUInt16LE(handle, 1);\n\n    for (let i = 0; i < data.length; i++) {\n      buf.writeUInt8(data.readUInt8(i), i + 3);\n    }\n\n    return buf;\n  }\n\n  private prepareWriteRequest(handle: any, offset: any, data: any) {\n    const buf: any = Buffer.alloc(5 + data.length);\n\n    buf.writeUInt8(ATT.OP_PREPARE_WRITE_REQ, 0);\n    buf.writeUInt16LE(handle, 1);\n    buf.writeUInt16LE(offset, 3);\n\n    for (let i = 0; i < data.length; i++) {\n      buf.writeUInt8(data.readUInt8(i), i + 5);\n    }\n\n    return buf;\n  }\n\n  private executeWriteRequest(handle: any, cancelPreparedWrites?: any) {\n    const buf: any = Buffer.alloc(2);\n\n    buf.writeUInt8(ATT.OP_EXECUTE_WRITE_REQ, 0);\n    buf.writeUInt8(cancelPreparedWrites ? 0 : 1, 1);\n\n    return buf;\n  }\n\n  private handleConfirmation() {\n    const buf: any = Buffer.alloc(1);\n\n    buf.writeUInt8(ATT.OP_HANDLE_CNF, 0);\n\n    return buf;\n  }\n\n  /* Perform a \"long write\" as described Bluetooth Spec section 4.9.4 \"Write Long Characteristic Values\" */\n  private async longWriteWait(serviceUuid: any, characteristicUuid: any, data: any, withoutResponse: any) {\n    const characteristic: any = this.getCharacteristic(serviceUuid, characteristicUuid);\n    const limit: any = this._mtu - 5;\n\n    /* split into prepare-write chunks and queue them */\n    let offset: any = 0;\n\n    while (offset < data.length) {\n      const end: any = offset + limit;\n      const chunk: any = data.slice(offset, end);\n      const _resp = await this._execCommandWait(\n        this.prepareWriteRequest(characteristic.valueHandle, offset, chunk),\n        ATT.OP_PREPARE_WRITE_RESP,\n      );\n\n      const expected_length: any = chunk.length + 5;\n\n      if (_resp.length !== expected_length) {\n        /* the response should contain the data packet echoed back to the caller */\n        throw new Error(`unexpected prepareWriteResponse length ${_resp.length} (expecting ${expected_length})`);\n      }\n\n      offset = end;\n    }\n\n    if (withoutResponse) {\n      await this._execNoRespCommandWait(this.executeWriteRequest(characteristic.valueHandle));\n    } else {\n      await this._execCommandWait(this.executeWriteRequest(characteristic.valueHandle), ATT.OP_EXECUTE_WRITE_RESP);\n    }\n    throw new ObnizBleOpError();\n  }\n\n  private getService(serviceUuid: any) {\n    if (!this._services[serviceUuid]) {\n      throw new ObnizBleUnknownServiceError(this._address, serviceUuid);\n    }\n\n    return this._services[serviceUuid];\n  }\n\n  private getCharacteristic(serviceUuid: any, characteristicUuid: any) {\n    if (!this._characteristics[serviceUuid] || !this._characteristics[serviceUuid][characteristicUuid]) {\n      throw new ObnizBleUnknownCharacteristicError(this._address, serviceUuid, characteristicUuid);\n    }\n\n    return this._characteristics[serviceUuid][characteristicUuid];\n  }\n\n  private getDescriptor(serviceUuid: any, characteristicUuid: any, descriptorUuid: any) {\n    if (\n      !this._descriptors[serviceUuid] ||\n      !this._descriptors[serviceUuid][characteristicUuid] ||\n      !this._descriptors[serviceUuid][characteristicUuid][descriptorUuid]\n    ) {\n      throw new ObnizBleUnknownDescriptorError(this._address, serviceUuid, characteristicUuid, descriptorUuid);\n    }\n\n    return this._descriptors[serviceUuid][characteristicUuid][descriptorUuid];\n  }\n\n  private _queueCommand(buffer: Buffer, callback: any, writeCallback?: any) {\n    this._commandQueue.push({\n      buffer,\n      callback,\n      writeCallback,\n    });\n\n    this._runQueueCommand();\n  }\n\n  private _runQueueCommand() {\n    if (this._currentCommand === null) {\n      while (this._commandQueue.length) {\n        this._currentCommand = this._commandQueue.shift();\n\n        this.writeAtt(this._currentCommand.buffer);\n        if (this._currentCommand.callback) {\n          break;\n        } else if (this._currentCommand.writeCallback) {\n          this._currentCommand.writeCallback();\n          this._currentCommand = null;\n        }\n      }\n    }\n  }\n\n  private _serialPromiseQueueWait(func: any) {\n    const onfinish = () => {\n      this._commandPromises = this._commandPromises.filter((e) => e !== resultPromise);\n      if (disconnectReject) {\n        this.off(\"end\", disconnectReject);\n      }\n    };\n\n    let disconnectReject: any = null;\n    const doPromise = Promise.all(this._commandPromises)\n      .catch((error) => {\n        // nothing\n      })\n      .then(() => {\n        return func();\n      })\n      .catch((reason) => {\n        throw reason;\n      })\n      .then(\n        (result) => {\n          onfinish();\n          return Promise.resolve(result);\n        },\n        (error) => {\n          onfinish();\n          return Promise.reject(error);\n        },\n      );\n    const disconnectPromise = new Promise((resolve, reject) => {\n      disconnectReject = (reason: any) => {\n        onfinish();\n        reject(reason);\n      };\n      this.on(\"end\", disconnectReject);\n    });\n    const resultPromise = Promise.race([doPromise, disconnectPromise]);\n    this._commandPromises.push(resultPromise);\n    return resultPromise as Promise<any>;\n  }\n\n  private _execCommandWait(buffer: Buffer, waitOpcode: number | number[]): Promise<Buffer> {\n    const waitOpcodes: number[] = Array.isArray(waitOpcode) ? waitOpcode : [waitOpcode];\n    let errorHandle = true;\n    if (!waitOpcodes.includes(ATT.OP_ERROR)) {\n      waitOpcodes.push(ATT.OP_ERROR);\n      errorHandle = false;\n    }\n    return this._serialPromiseQueueWait(async () => {\n      while (1) {\n        this.writeAtt(buffer);\n        const promises = [];\n        for (const code of waitOpcodes) {\n          promises.push(this._aclStream.readWait(ATT.CID, code));\n        }\n        debug(`ATT: wait for opcode=${waitOpcodes}`);\n        const data: Buffer = await Promise.race(promises);\n        const opCode = data.readUInt8(0);\n        debug(`ATT: received opCode=${opCode}(${ATT_OP_READABLES[opCode]})`);\n        if (opCode === ATT.OP_ERROR) {\n          const errCode = data[4];\n          if (\n            (errCode === ATT.ECODE_AUTHENTICATION ||\n              errCode === ATT.ECODE_AUTHORIZATION ||\n              errCode === ATT.ECODE_INSUFF_ENC) &&\n            this._security !== \"medium\"\n          ) {\n            // retry after encrypt\n            debug(`ATT: going to encrypt and try it later.`);\n            await this._aclStream.encryptWait();\n            continue;\n          }\n          if (errorHandle) {\n            return data;\n          }\n          const requestOpCode = data.readUInt8(1);\n          const attributeHandle = data.readUInt16LE(2);\n\n          throw new ObnizBleAttError(\n            errCode,\n            `errorCode=${errCode}(${ATT_ECODE_READABLES[errCode]}) for request_opcode=${requestOpCode}(${ATT_OP_READABLES[requestOpCode]}) atributeHandle=${attributeHandle} `,\n          );\n        }\n        return data;\n      }\n    }).catch((reason) => {\n      throw reason;\n    });\n  }\n\n  private _execNoRespCommandWait(buffer: Buffer): Promise<Buffer> {\n    return this._serialPromiseQueueWait(async () => {\n      this.writeAtt(buffer);\n    });\n  }\n}\n\nexport default Gatt;\n"]}