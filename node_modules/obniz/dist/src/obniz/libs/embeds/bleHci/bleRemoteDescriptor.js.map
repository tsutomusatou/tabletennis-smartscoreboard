{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleRemoteDescriptor.ts"],"names":[],"mappings":";;;;;AAMA,wGAAgF;AAEhF;;GAEG;AACH,MAAqB,mBAAoB,SAAQ,yCAA8D;IAG7G,YAAY,MAAW;QACrB,KAAK,CAAC,MAAM,CAAC,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,IAAI,UAAU;QACZ,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;OAwBG;IACI,KAAK,CAAC,QAAQ;QACnB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,aAAa,CAC7F,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAC9C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAChC,IAAI,CAAC,cAAc,CAAC,IAAI,EACxB,IAAI,CAAC,IAAI,CACV,CAAC;QACF,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;OAwBG;IACI,KAAK,CAAC,SAAS,CAAC,IAAc;QACnC,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,cAAc,CAClF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAC9C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAChC,IAAI,CAAC,cAAc,CAAC,IAAI,EACxB,IAAI,CAAC,IAAI,EACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAClB,CAAC;QACF,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACI,UAAU,CAAC,KAAU,IAAS,CAAC;IAEtC;;;OAGG;IACI,kBAAkB,CAAC,QAAa,IAAS,CAAC;CAClD;AAlGD,sCAkGC","file":"bleRemoteDescriptor.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.Hci\n */\nimport BleRemoteAttributeAbstract from \"./bleRemoteAttributeAbstract\";\nimport BleRemoteCharacteristic from \"./bleRemoteCharacteristic\";\nimport BleRemoteValueAttributeAbstract from \"./bleRemoteValueAttributeAbstract\";\n\n/**\n * @category Use as Central\n */\nexport default class BleRemoteDescriptor extends BleRemoteValueAttributeAbstract<BleRemoteCharacteristic, null> {\n  public characteristic!: BleRemoteCharacteristic;\n\n  constructor(params: any) {\n    super(params);\n  }\n\n  /**\n   * @ignore\n   */\n  get parentName(): string | null {\n    return \"characteristic\";\n  }\n\n  /**\n   * Read data from descriptor.\n   *\n   * The return value appears in the callback function [[onread]].\n   * If reading succeeds an Array with data will be returned.\n   * It throws an error when failed.\n   *\n   * ```javascript\n   * // Javascript Example\n   * await obniz.ble.initWait();\n   * var target = {\n   *   uuids: [\"fff0\"],\n   * };\n   * var peripheral = await obniz.ble.scan.startOneWait(target);\n   * if(peripheral){\n   *   await peripheral.connectWait();\n   *   console.log(\"connected\");\n   *   await obniz.wait(1000);\n   *\n   *   var dataArray = await peripheral.getService(\"FF00\").getCharacteristic(\"FF01\").readWait();\n   *   console.log(dataArray);\n   * }\n   * ```\n   *\n   */\n  public async readWait(): Promise<number[]> {\n    const buf = await this.characteristic.service.peripheral.obnizBle.centralBindings.readValueWait(\n      this.characteristic.service.peripheral.address,\n      this.characteristic.service.uuid,\n      this.characteristic.uuid,\n      this.uuid,\n    );\n    const data = Array.from(buf);\n    this._runUserCreatedFunction(this.onread, data);\n    return data;\n  }\n\n  /**\n   * This writes dataArray to descriptor.\n   * It throws an error when failed.\n   *\n   * ```javascript\n   * // Javascript Example\n   *\n   * await obniz.ble.initWait();\n   * var target = {\n   *   uuids: [\"fff0\"],\n   * };\n   * var peripheral = await obniz.ble.scan.startOneWait(target);\n   * if(peripheral){\n   *   await peripheral.connectWait();\n   *   console.log(\"connected\");\n   *   await obniz.wait(1000);\n   *\n   *   var dataArray = [0x02, 0xFF];\n   *   await peripheral.getService(\"FF00\").getCharacteristic(\"FF01\").getDescriptor(\"2901\").writeWait(dataArray);\n   *   console.log(\"write success\");\n   * }\n   * ```\n   *\n   * @param data\n   */\n  public async writeWait(data: number[]): Promise<boolean> {\n    await this.characteristic.service.peripheral.obnizBle.centralBindings.writeValueWait(\n      this.characteristic.service.peripheral.address,\n      this.characteristic.service.uuid,\n      this.characteristic.uuid,\n      this.uuid,\n      Buffer.from(data),\n    );\n    this._runUserCreatedFunction(this.onwrite, \"success\");\n    return true;\n  }\n\n  /**\n   * @ignore\n   */\n  public ondiscover(child: any): void {}\n\n  /**\n   * @ignore\n   * @param children\n   */\n  public ondiscoverfinished(children: any): void {}\n}\n"]}