{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleRemoteAttributeAbstract.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAE1D;;GAEG;AACH,MAAM,CAAC,OAAO,CAAC,QAAQ,OAAO,0BAA0B,CAAC,WAAW,EAAE,aAAa,CAAE,SAAQ,oBAAoB,CAC/G,WAAW,EACX,aAAa,CACd;gBACa,MAAM,EAAE,GAAG;IAOvB;;OAEG;IACH,IAAI,eAAe,kBAOlB;IAED;;;OAGG;aACa,UAAU,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI;IAE5C;;;OAGG;aACa,kBAAkB,CAAC,QAAQ,EAAE,GAAG,GAAG,IAAI;CACxD","file":"bleRemoteAttributeAbstract.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.Hci\n */\nimport BleAttributeAbstract from \"./bleAttributeAbstract\";\n\n/**\n * @category Use as Central\n */\nexport default abstract class BleRemoteAttributeAbstract<ParentClass, ChildrenClass> extends BleAttributeAbstract<\n  ParentClass,\n  ChildrenClass\n> {\n  constructor(params: any) {\n    super(params);\n\n    this.isRemote = false;\n    this.discoverdOnRemote = false;\n  }\n\n  /**\n   * @ignore\n   */\n  get wsChildUuidName() {\n    const childrenName: any = this.childrenName;\n    if (!childrenName) {\n      return null;\n    }\n    const childName: any = childrenName.slice(0, -1);\n    return childName + \"_uuid\";\n  }\n\n  /**\n   * @ignore\n   * @param child\n   */\n  public abstract ondiscover(child: any): void;\n\n  /**\n   * @ignore\n   * @param children\n   */\n  public abstract ondiscoverfinished(children: any): void;\n}\n"]}