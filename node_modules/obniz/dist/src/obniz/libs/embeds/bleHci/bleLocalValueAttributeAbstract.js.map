{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleLocalValueAttributeAbstract.ts"],"names":[],"mappings":";;;;;AAMA,4FAAoE;AAGpE;;GAEG;AACH,MAAqB,8BAA2D,SAAQ,mCAGvF;IACC,YAAY,MAAW;QACrB,KAAK,CAAC,MAAM,CAAC,CAAC;IAChB,CAAC;IAED;;;;;;;;;;;OAWG;IACI,KAAK,CAAC,SAAS,CAAC,IAAS;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;;;;;OAWG;IACI,KAAK,CAAC,QAAQ;QACnB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACI,gBAAgB,CAAC,UAAe,EAAE,MAAW;QAClD,KAAK,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACtC,QAAQ,UAAU,EAAE;YAClB,KAAK,mBAAmB,CAAC,CAAC;gBACxB,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;gBAClF,MAAM;aACP;YACD,KAAK,kBAAkB,CAAC,CAAC;gBACvB,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;gBACpE,MAAM;aACP;SACF;IACH,CAAC;CACF;AA9DD,iDA8DC","file":"bleLocalValueAttributeAbstract.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.Hci\n */\nimport BleCharacteristic from \"./bleCharacteristic\";\nimport BleHelper from \"./bleHelper\";\nimport BleLocalAttributeAbstract from \"./bleLocalAttributeAbstract\";\nimport BleService from \"./bleService\";\n\n/**\n * @category Use as Peripheral\n */\nexport default class BleLocalValueAttributeAbstract<ParentClass, ChildrenClass> extends BleLocalAttributeAbstract<\n  ParentClass,\n  ChildrenClass\n> {\n  constructor(params: any) {\n    super(params);\n  }\n\n  /**\n   * This writes dataArray.\n   * It throws an error when failed.\n   *\n   * ```javascript\n   * // Javascript Example\n   * await attr.writeWait([0xf0,0x27]);\n   * console.log(\"write success\");\n   * ```\n   *\n   * @param data\n   */\n  public async writeWait(data: any): Promise<boolean> {\n    this.data = data;\n    this.notifyFromServer(\"onwrite\", { result: \"success\" });\n    return true;\n  }\n\n  /**\n   * It reads data.\n   *\n   * Even you wrote string or number, it returns binary array.\n   * It throws an error when failed.\n   *\n   * ```javascript\n   * // Javascript Example\n   * let data =  await attr.readWait()\n   *  console.log(\"data: \" , data );\n   * ```\n   */\n  public async readWait(): Promise<number[]> {\n    this.notifyFromServer(\"onread\", { data: this.data });\n    return this.data;\n  }\n\n  /**\n   * @ignore\n   * @param notifyName\n   * @param params\n   */\n  public notifyFromServer(notifyName: any, params: any) {\n    super.notifyFromServer(notifyName, params);\n    this.emitter.emit(notifyName, params);\n    switch (notifyName) {\n      case \"onwritefromremote\": {\n        this._runUserCreatedFunction(this.onwritefromremote, params.address, params.data);\n        break;\n      }\n      case \"onreadfromremote\": {\n        this._runUserCreatedFunction(this.onreadfromremote, params.address);\n        break;\n      }\n    }\n  }\n}\n"]}