{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/central/bindings.ts"],"names":[],"mappings":"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","file":"bindings.js","sourcesContent":["/**\n * @packageDocumentation\n *\n * @ignore\n */\n// var debug = require('debug')('bindings');\n\nimport EventEmitter from \"eventemitter3\";\n\nimport { ObnizBleHciStateError, ObnizBleUnknownPeripheralError, ObnizError } from \"../../../../../ObnizError\";\nimport { BleDeviceAddress, BleDeviceAddressType, Handle, UUID } from \"../../bleTypes\";\nimport Hci from \"../hci\";\nimport AclStream from \"./acl-stream\";\nimport Gap from \"./gap\";\nimport Gatt from \"./gatt\";\nimport Signaling from \"./signaling\";\n\ntype NobleBindingsEventType =\n  // notify from peripheral\n  | \"discover\" // for onfind\n  | \"disconnect\"\n  | \"stateChange\"\n  | \"notification\"\n  | \"handleNotify\";\n\n/**\n * @ignore\n */\nclass NobleBindings extends EventEmitter<NobleBindingsEventType> {\n  public _connectable: any;\n\n  private _state: any;\n  private _addresses: { [uuid: string]: BleDeviceAddress };\n  private _addresseTypes: { [uuid: string]: BleDeviceAddressType };\n  private _connectPromises: Array<Promise<any>>;\n  private _handles: any;\n  private _gatts: { [handle: string]: Gatt };\n  private _aclStreams: { [key: string]: AclStream };\n  private _signalings: any;\n  private _hci: Hci;\n  private _gap: Gap;\n  private _scanServiceUuids: any;\n\n  constructor(hciProtocol: any) {\n    super();\n    this._state = null;\n\n    this._addresses = {};\n    this._addresseTypes = {};\n    this._connectable = {};\n\n    this._connectPromises = [];\n\n    this._handles = {};\n    this._gatts = {};\n    this._aclStreams = {};\n    this._signalings = {};\n\n    this._hci = hciProtocol;\n    this._gap = new Gap(this._hci);\n  }\n  public debugHandler: any = () => {};\n\n  public addPeripheralData(uuid: UUID, addressType: BleDeviceAddressType) {\n    if (!this._addresses[uuid]) {\n      const address: any = uuid.match(/.{1,2}/g)!.join(\":\");\n      this._addresses[uuid] = address;\n      this._addresseTypes[uuid] = addressType;\n      this._connectable[uuid] = true;\n    }\n  }\n\n  public async startScanningWait(serviceUuids: any, allowDuplicates: any, activeScan: boolean) {\n    this._scanServiceUuids = serviceUuids || [];\n\n    await this._gap.startScanningWait(allowDuplicates, activeScan);\n  }\n\n  public async stopScanningWait() {\n    await this._gap.stopScanningWait();\n  }\n\n  public connectWait(peripheralUuid: any) {\n    const address: any = this._addresses[peripheralUuid];\n    const addressType: any = this._addresseTypes[peripheralUuid];\n\n    const doPromise = Promise.all(this._connectPromises)\n      .catch((error) => {\n        // nothing\n      })\n      .then(() => {\n        return this._hci.createLeConnWait(address, addressType, 90 * 1000); // connection timeout for 90 secs.\n      })\n      .then((result) => {\n        return this.onLeConnComplete(\n          result.status,\n          result.handle,\n          result.role,\n          result.addressType,\n          result.address,\n          result.interval,\n          result.latency,\n          result.supervisionTimeout,\n          result.masterClockAccuracy,\n        );\n      })\n      .then(\n        (result) => {\n          this._connectPromises = this._connectPromises.filter((e) => e === doPromise);\n          return Promise.resolve(result);\n        },\n        (error) => {\n          this._connectPromises = this._connectPromises.filter((e) => e === doPromise);\n          return Promise.reject(error);\n        },\n      );\n    this._connectPromises.push(doPromise);\n    return doPromise;\n  }\n\n  public disconnect(peripheralUuid: any) {\n    this._hci.disconnect(this._handles[peripheralUuid]);\n  }\n\n  public async updateRssiWait(peripheralUuid: UUID) {\n    const rssi = await this._hci.readRssiWait(this._handles[peripheralUuid]);\n    return rssi;\n  }\n\n  public init() {\n    this._gap.on(\"discover\", this.onDiscover.bind(this));\n\n    this._hci.on(\"stateChange\", this.onStateChange.bind(this));\n    this._hci.on(\"disconnComplete\", this.onDisconnComplete.bind(this));\n    this._hci.on(\"aclDataPkt\", this.onAclDataPkt.bind(this));\n  }\n\n  public onStateChange(state: any) {\n    if (this._state === state) {\n      return;\n    }\n    this._state = state;\n\n    if (state === \"unauthorized\") {\n      console.log(\"noble warning: adapter state unauthorized, please run as root or with sudo\");\n      console.log(\"               or see README for information on running without root/sudo:\");\n      console.log(\"               https://github.com/sandeepmistry/noble#running-on-linux\");\n    } else if (state === \"unsupported\") {\n      console.log(\"noble warning: adapter does not support Bluetooth Low Energy (BLE, Bluetooth Smart).\");\n      console.log(\"               Try to run with environment variable:\");\n      console.log(\"               [sudo] NOBLE_HCI_DEVICE_ID=x node ...\");\n    }\n\n    this.emit(\"stateChange\", state);\n  }\n\n  public onDiscover(status: any, address?: any, addressType?: any, connectable?: any, advertisement?: any, rssi?: any) {\n    if (this._scanServiceUuids === undefined) {\n      return;\n    }\n\n    let serviceUuids: any = advertisement.serviceUuids || [];\n    const serviceData: any = advertisement.serviceData || [];\n    let hasScanServiceUuids: any = this._scanServiceUuids.length === 0;\n\n    if (!hasScanServiceUuids) {\n      let i: any;\n\n      serviceUuids = serviceUuids.slice();\n\n      for (i in serviceData) {\n        serviceUuids.push(serviceData[i].uuid);\n      }\n\n      for (i in serviceUuids) {\n        hasScanServiceUuids = this._scanServiceUuids.indexOf(serviceUuids[i]) !== -1;\n\n        if (hasScanServiceUuids) {\n          break;\n        }\n      }\n    }\n\n    if (hasScanServiceUuids) {\n      const uuid: any = address.split(\":\").join(\"\");\n      this._addresses[uuid] = address;\n      this._addresseTypes[uuid] = addressType;\n      this._connectable[uuid] = connectable;\n\n      this.emit(\"discover\", uuid, address, addressType, connectable, advertisement, rssi);\n    }\n  }\n\n  public async onLeConnComplete(\n    status: any,\n    handle?: any,\n    role?: any,\n    addressType?: any,\n    address?: any,\n    interval?: any,\n    latency?: any,\n    supervisionTimeout?: any,\n    masterClockAccuracy?: any,\n  ) {\n    if (role !== 0) {\n      // not master, ignore\n      return;\n    }\n\n    let uuid: any = null;\n\n    if (status !== 0) {\n      throw new ObnizBleHciStateError(status);\n    }\n    uuid = address\n      .split(\":\")\n      .join(\"\")\n      .toLowerCase();\n\n    const aclStream: AclStream = new AclStream(\n      this._hci,\n      handle,\n      this._hci.addressType,\n      this._hci.address,\n      addressType,\n      address,\n    );\n    aclStream.debugHandler = (text: any) => {\n      this.debug(text);\n    };\n    const gatt = new Gatt(address, aclStream);\n    const signaling: any = new Signaling(handle, aclStream);\n\n    this._gatts[uuid] = this._gatts[handle] = gatt;\n    this._signalings[uuid] = this._signalings[handle] = signaling;\n    this._aclStreams[handle] = aclStream;\n    this._handles[uuid] = handle;\n    this._handles[handle] = uuid;\n\n    this._gatts[handle].on(\"notification\", this.onNotification.bind(this));\n    this._gatts[handle].on(\"handleNotify\", this.onHandleNotify.bind(this));\n\n    this._signalings[handle].on(\"connectionParameterUpdateRequest\", this.onConnectionParameterUpdateWait.bind(this));\n\n    await this._gatts[handle].exchangeMtuWait(256);\n    // public onMtu(address: any, mtu?: any) {}\n  }\n\n  public onDisconnComplete(handle: any, reason: number) {\n    const uuid: any = this._handles[handle];\n\n    if (uuid) {\n      const error = new ObnizBleHciStateError(reason, { peripheralAddress: uuid });\n      this._gatts[handle].onEnd(error);\n      this._gatts[handle].removeAllListeners();\n      this._signalings[handle].removeAllListeners();\n\n      delete this._gatts[uuid];\n      delete this._gatts[handle];\n      delete this._signalings[uuid];\n      delete this._signalings[handle];\n      delete this._aclStreams[handle];\n      delete this._handles[uuid];\n      delete this._handles[handle];\n\n      this.emit(\"disconnect\", uuid, error); // TODO: handle reason?\n    } else {\n      // maybe disconnect as peripheral\n      // console.warn(\n      //   'noble warning: unknown handle ' + handle + ' disconnected!'\n      // );\n    }\n  }\n\n  public onAclDataPkt(handle: any, cid?: any, data?: any) {\n    const aclStream: AclStream = this._aclStreams[handle];\n\n    if (aclStream) {\n      aclStream.push(cid, data);\n    }\n  }\n\n  public async discoverServicesWait(peripheralUuid: any, uuids?: any) {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n\n    const services = await gatt.discoverServicesWait(uuids || []);\n    return services;\n  }\n\n  public async discoverIncludedServicesWait(peripheralUuid: string, serviceUuid: UUID, serviceUuids: UUID[]) {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n\n    const services = gatt.discoverIncludedServicesWait(serviceUuid, serviceUuids || []);\n    return services;\n  }\n\n  public async discoverCharacteristicsWait(peripheralUuid: any, serviceUuid: any, characteristicUuids?: any) {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    const chars = await gatt.discoverCharacteristicsWait(serviceUuid, characteristicUuids || []);\n    return chars;\n  }\n\n  public async readWait(peripheralUuid: any, serviceUuid: any, characteristicUuid: any): Promise<Buffer> {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    const data = await gatt.readWait(serviceUuid, characteristicUuid);\n    return data;\n  }\n\n  public async writeWait(\n    peripheralUuid: any,\n    serviceUuid: any,\n    characteristicUuid: any,\n    data: any,\n    withoutResponse: any,\n  ): Promise<void> {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    await gatt.writeWait(serviceUuid, characteristicUuid, data, withoutResponse);\n  }\n\n  public async broadcastWait(\n    peripheralUuid: any,\n    serviceUuid: any,\n    characteristicUuid: any,\n    broadcast: any,\n  ): Promise<void> {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    await gatt.broadcastWait(serviceUuid, characteristicUuid, broadcast);\n  }\n\n  public async notifyWait(peripheralUuid: any, serviceUuid: any, characteristicUuid: any, notify: any) {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    await gatt.notifyWait(serviceUuid, characteristicUuid, notify);\n  }\n\n  public onNotification(address: any, serviceUuid?: any, characteristicUuid?: any, data?: any) {\n    const uuid: any = address\n      .split(\":\")\n      .join(\"\")\n      .toLowerCase();\n\n    this.emit(\"notification\", uuid, serviceUuid, characteristicUuid, data, true, true);\n  }\n\n  public async discoverDescriptorsWait(peripheralUuid: any, serviceUuid: any, characteristicUuid: any) {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    const descriptors = await gatt.discoverDescriptorsWait(serviceUuid, characteristicUuid);\n    return descriptors;\n  }\n\n  public async readValueWait(peripheralUuid: any, serviceUuid: any, characteristicUuid: any, descriptorUuid: any) {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    const resp = await gatt.readValueWait(serviceUuid, characteristicUuid, descriptorUuid);\n    return resp;\n  }\n\n  public async writeValueWait(\n    peripheralUuid: any,\n    serviceUuid: any,\n    characteristicUuid: any,\n    descriptorUuid: any,\n    data: any,\n  ) {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    await gatt.writeValueWait(serviceUuid, characteristicUuid, descriptorUuid, data);\n  }\n\n  public async readHandleWait(peripheralUuid: any, attHandle: any): Promise<Buffer> {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    const data = await gatt.readHandleWait(attHandle);\n    return data;\n  }\n\n  public async writeHandleWait(peripheralUuid: any, attHandle: any, data: any, withoutResponse: any): Promise<void> {\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    await gatt.writeHandleWait(attHandle, data, withoutResponse);\n  }\n\n  public onHandleNotify(address: any, handle?: any, data?: any) {\n    const uuid: any = address\n      .split(\":\")\n      .join(\"\")\n      .toLowerCase();\n\n    this.emit(\"handleNotify\", uuid, handle, data);\n  }\n\n  public async onConnectionParameterUpdateWait(\n    handle: Handle,\n    minInterval?: any,\n    maxInterval?: any,\n    latency?: any,\n    supervisionTimeout?: any,\n  ) {\n    await this._hci.connUpdateLeWait(handle, minInterval, maxInterval, latency, supervisionTimeout);\n    // this.onLeConnUpdateComplete(); is nop\n  }\n\n  public async pairingWait(peripheralUuid: any, options?: any): Promise<string> {\n    options = options || {};\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    const result = await gatt.encryptWait(options);\n    return result;\n  }\n\n  public async setPairingOption(peripheralUuid: any, options: any) {\n    options = options || {};\n    const gatt: Gatt = this.getGatt(peripheralUuid);\n    gatt.setEncryptOption(options);\n  }\n\n  private getGatt(peripheralUuid: any): Gatt {\n    const handle = this._handles[peripheralUuid];\n    const gatt: Gatt = this._gatts[handle];\n\n    if (!gatt) {\n      throw new ObnizBleUnknownPeripheralError(peripheralUuid);\n    }\n    return gatt;\n  }\n\n  private debug(text: any) {\n    this.debugHandler(`${text}`);\n  }\n}\n\nexport default NobleBindings;\n"]}