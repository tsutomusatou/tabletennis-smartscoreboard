{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/hci.ts"],"names":[],"mappings":"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","file":"hci.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.Hci\n */\n\nimport { ObnizOfflineError, ObnizParameterError, ObnizTimeoutError } from \"../../../ObnizError\";\n\nexport type EventHandler = (...args: any) => any;\n\nexport default class ObnizBLEHci {\n  public Obniz: any;\n\n  /*\n   * HCI level timeout should never occure. Response must be sent from a device.\n   * This timeout is for just in case for a device nerver send response.\n   */\n  public timeout: number = 5 * 60 * 1000;\n\n  protected _eventHandlerQueue: { [key: string]: EventHandler[] } = {};\n\n  constructor(Obniz: any) {\n    this.Obniz = Obniz;\n  }\n\n  /**\n   * @ignore\n   * @private\n   */\n  public _reset() {\n    this._eventHandlerQueue = {};\n  }\n\n  /**\n   * Initialize BLE HCI module\n   */\n  public init() {\n    this.Obniz.send({\n      ble: {\n        hci: {\n          initialize: true,\n        },\n      },\n    });\n  }\n\n  /**\n   * Deinitalize BLE HCI module\n   */\n  public end() {\n    this.Obniz.send({\n      ble: {\n        hci: null,\n      },\n    });\n  }\n\n  /**\n   * write HCI command to HCI module\n   * @param hciCommand\n   */\n  public write(hciCommand: number[]) {\n    this.Obniz.send({\n      ble: {\n        hci: {\n          write: hciCommand,\n        },\n      },\n    });\n  }\n\n  /**\n   * @ignore\n   * @param obj\n   */\n  public notified(obj: any) {\n    if (obj.read && obj.read.data) {\n      this.Obniz._runUserCreatedFunction(this.onread, obj.read.data);\n\n      for (const eventName in this._eventHandlerQueue) {\n        if (typeof eventName !== \"string\" || !eventName.startsWith(\"[\")) {\n          continue;\n        }\n        if (this._eventHandlerQueue[eventName].length === 0) {\n          continue;\n        }\n\n        const isValid = this.validate(eventName, obj);\n        if (isValid) {\n          const func = this._eventHandlerQueue[eventName].shift();\n          if (func) {\n            func(Buffer.from(obj.read.data));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Callback on HCI command received.\n   * @param data\n   */\n  public onread(data: any) {}\n\n  /**\n   * @ignore\n   * @private\n   * @param promise\n   * @param option.timeout Timeout number in seconds. If not specified. default timeout is applied. If null specified, never timeout.\n   * @param option.waitingFor Readable description of command for waiting. Printed when Error or timeout occured.\n   */\n  public timeoutPromiseWrapper<T>(promise: Promise<T>, option?: any): Promise<T> {\n    option = option || {};\n    if (option.timeout === null) {\n      option.timeout = null;\n    } else {\n      option.timeout = option.timeout || this.timeout;\n      if (option.timeout < 0) {\n        throw new ObnizParameterError(`option.timeout`, `0 or greater`);\n      }\n    }\n    option.waitingFor = option.waitingFor || undefined;\n\n    let onObnizClosed: null | (() => void) = null;\n    let timeoutHandler: null | NodeJS.Timeout = null;\n\n    const clearListeners = () => {\n      this.Obniz.off(\"close\", onObnizClosed);\n      if (timeoutHandler) {\n        clearTimeout(timeoutHandler);\n        timeoutHandler = null;\n      }\n    };\n\n    const successPromise = promise.then(\n      (result: any) => {\n        clearListeners();\n        return result;\n      },\n      (reason: any) => {\n        clearListeners();\n        throw reason;\n      },\n    );\n\n    const errorPromise = new Promise((resolve, reject) => {\n      if (this.Obniz.connectionState !== \"connected\") {\n        reject(new ObnizOfflineError());\n        return;\n      }\n\n      onObnizClosed = () => {\n        clearListeners();\n        const error = new ObnizOfflineError();\n        reject(error);\n      };\n      this.Obniz.on(\"close\", onObnizClosed);\n\n      let onTimeout;\n      if (option.onTimeout) {\n        onTimeout = () => {\n          option\n            .onTimeout()\n            .then(() => {})\n            .catch((e: Error) => {\n              reject(e);\n            });\n        };\n      } else {\n        onTimeout = () => {\n          clearListeners();\n\n          const error = new ObnizTimeoutError(option.waitingFor);\n          reject(error);\n        };\n      }\n      timeoutHandler = setTimeout(onTimeout, option!.timeout);\n    });\n\n    if (option.timeout !== null) {\n      return Promise.race([successPromise, errorPromise]);\n    }\n    return successPromise;\n  }\n\n  public readWait(binaryFilter: number[], option?: any): Promise<Buffer> {\n    return this.timeoutPromiseWrapper(\n      new Promise((resolve) => {\n        this.onceQueue(binaryFilter, resolve);\n      }),\n      option,\n    );\n  }\n\n  protected onceQueue(binaryFilter: number[], func: EventHandler) {\n    const eventName = this.encodeBinaryFilter(binaryFilter);\n    this._eventHandlerQueue[eventName] = this._eventHandlerQueue[eventName] || [];\n    if (typeof func === \"function\") {\n      this._eventHandlerQueue[eventName].push(func);\n    }\n  }\n\n  protected validate(str: string, json: any): boolean {\n    const binaryFilter = this.decodeBinaryFilter(str);\n    if (json.read.data.length < binaryFilter.length) {\n      return false;\n    }\n    for (let i = 0; i < binaryFilter.length; i++) {\n      if (binaryFilter[i] < 0) {\n        continue;\n      }\n      if (binaryFilter[i] !== json.read.data[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected encodeBinaryFilter(binary: number[]): string {\n    return JSON.stringify(binary);\n  }\n\n  protected decodeBinaryFilter(str: string): number[] {\n    return JSON.parse(str);\n  }\n}\n"]}