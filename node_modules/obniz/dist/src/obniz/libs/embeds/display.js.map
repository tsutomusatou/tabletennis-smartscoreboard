{"version":3,"sources":["../src/obniz/libs/embeds/display.ts"],"names":[],"mappings":"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","file":"display.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components\n */\n\nimport Obniz from \"../../index\";\nimport { ComponentAbstract } from \"../ComponentAbstact\";\n\n/**\n * Here we will show letters and pictures on display on obniz Board.\n * ![](media://obniz_display_sphere.gif)\n * @category Embeds\n */\nexport default class Display extends ComponentAbstract {\n  /**\n   * display width size\n   * @readonly\n   */\n  public readonly width: number;\n\n  /**\n   * display height size\n   * @readonly\n   */\n  public readonly height: number;\n\n  private autoFlush: boolean = true;\n  private fontSize: number = 16;\n  private _canvas?: HTMLCanvasElement;\n  private _pos = { x: 0, y: 0 };\n  private _colorDepthCapabilities: [number] = [1];\n  private _colorDepth: number = 1;\n  private _color = \"#000\";\n  private _paper_white = true;\n  private _raw_alternate = false;\n\n  constructor(obniz: any, info: any) {\n    super(obniz);\n    this.width = info.width;\n    this.height = info.height;\n    this._colorDepthCapabilities = info.color_depth;\n    this._paper_white = info.paper_white;\n    this._raw_alternate = info.raw_alternate;\n\n    this._canvas = undefined;\n    this._reset();\n  }\n\n  /**\n   * (It does not work with node.js. Please use display.draw())\n   *\n   * This changes the font.\n   * The options for fontFamily and fontSize depend on your browser.\n   *\n   * The default font is Arial 16px.\n   * If you set the parameter to null, you will be using the default font.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.font('Avenir',30)\n   * obniz.display.print(\"Avenir\")\n   *\n   * obniz.display.font(null,30) //default font(Arial) 30px\n   * obniz.display.font('Avenir') //Avenir with default size(16px)\n   * ```\n   * ![](media://obniz_display_samples3.jpg)\n   * ![](media://obniz_display_samples2.jpg)\n   * ![](media://obniz_display_samples1.jpg)\n   *\n   * @param font font name\n   * @param size size of font\n   */\n  public font(font: string | null, size?: number) {\n    const ctx: any = this._ctx();\n    if (typeof size !== \"number\") {\n      size = 16;\n    }\n    if (typeof font !== \"string\") {\n      font = \"Arial\";\n    }\n    this.fontSize = size;\n    ctx.font = \"\" + +\" \" + size + \"px \" + font;\n  }\n\n  /**\n   * Setting color for fill/stroke style for further rendering.\n   *\n   * ```javascript\n   * obniz.display.color('#FF0000');\n   * obniz.display.rect(0, 0, 10, 10, false)\n   * obniz.display.color('blue');\n   * obniz.display.rect(0, 10, 10, 10, false)\n   * ```\n   *\n   * @param depth css acceptable color definition\n   */\n  public setColor(color: string) {\n    this._color = color;\n    const ctx: any = this._ctx();\n    ctx.fillStyle = this._color;\n    ctx.strokeStyle = this._color;\n  }\n\n  /**\n   * Getting color for fill/stroke style for further rendering.\n   *\n   * ```javascript\n   * const current = obniz.display.getColor();\n   * ```\n   *\n   */\n  public getColor() {\n    return this._color;\n  }\n\n  /**\n   * Clear the display.\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.clear();\n   * ```\n   */\n  public clear() {\n    const ctx: any = this._ctx();\n    this._pos.x = 0;\n    this._pos.y = 0;\n    if (ctx) {\n      const currentFillStyle = ctx.fillStyle;\n      ctx.fillStyle = this._paper_white ? \"#FFF\" : \"#000\";\n      ctx.fillRect(0, 0, this.width, this.height);\n      ctx.fillStyle = currentFillStyle;\n      this.draw(ctx);\n    } else {\n      const obj: any = {};\n      obj.display = {\n        clear: true,\n      };\n      this.Obniz.send(obj);\n    }\n  }\n\n  /**\n   * (This does not work with node.js. Please use display.draw())\n   * It changes the display position of a text. If you are using print() to display a text, position it to top left.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.pos(0,30);\n   * obniz.display.print(\"YES. こんにちは\");\n   * ```\n   * ![](media://obniz_display_pos.jpg)\n   *  @param x\n   *  @param y\n   */\n  public pos(x: number, y: number) {\n    this._ctx(); // crete first\n    if (typeof x === \"number\") {\n      this._pos.x = x;\n    }\n    if (typeof y === \"number\") {\n      this._pos.y = y;\n    }\n    return this._pos;\n  }\n\n  /**\n   * Print text on display.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.print(\"Hello!\");\n   * ```\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.font('Serif',18)\n   * obniz.display.print(\"Hello World🧡\")\n   * ```\n   * ![](media://obniz_display_print.jpg)\n   *\n   *  @param text Text to display. With browser, UTF8 string is available. (It does not work with node.js. Please use display.draw())\n   */\n  public print(text: string) {\n    const ctx = this._ctx();\n    if (ctx) {\n      ctx.fillText(text, this._pos.x, this._pos.y + this.fontSize);\n      this.draw(ctx);\n      this._pos.y += this.fontSize;\n    } else {\n      const obj: any = {};\n      obj.display = {\n        text: \"\" + text,\n      };\n      this.Obniz.send(obj);\n    }\n  }\n\n  /**\n   * (It does not work with node.js. Please use display.draw())\n   *\n   *\n   * Now we draw a line between two points.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.line(30, 30, 100, 30);\n   * obniz.display.rect(20, 20, 20, 20);\n   * obniz.display.circle(100, 30, 20);\n   *\n   * obniz.display.line(60, 50, 100, 30);\n   * obniz.display.rect(50, 40, 20, 20, true);\n   * obniz.display.line(50, 10, 100, 30);\n   * obniz.display.circle(50, 10, 10, true);\n   * ```\n   *\n   * ![](media://obniz_display_draws.jpg)\n   *\n   * @param x_0\n   * @param y_0\n   * @param x_1\n   * @param y_1\n   */\n  public line(x_0: number, y_0: number, x_1: number, y_1: number) {\n    const ctx: any = this._ctx();\n    if (ctx) {\n      ctx.beginPath();\n      ctx.moveTo(x_0, y_0);\n      ctx.lineTo(x_1, y_1);\n      ctx.stroke();\n      this.draw(ctx);\n    } else {\n      this.warnCanvasAvailability();\n    }\n  }\n\n  /**\n   * (It does not work with node.js. Please use display.draw())\n   *\n   *\n   * This draws a rectangle.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.rect(10, 10, 20, 20);\n   * obniz.display.rect(20, 20, 20, 20, true); // filled rect\n   * ```\n   *\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   * @param mustFill\n   */\n  public rect(x: number, y: number, width: number, height: number, mustFill?: boolean) {\n    const ctx: any = this._ctx();\n    if (ctx) {\n      if (mustFill) {\n        ctx.fillRect(x, y, width, height);\n      } else {\n        ctx.strokeRect(x, y, width, height);\n      }\n      this.draw(ctx);\n    } else {\n      this.warnCanvasAvailability();\n    }\n  }\n\n  /**\n   * (It does not work with node.js. Please use display.draw())\n   *\n   * This draws a circle.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.circle(40, 30, 20);\n   * obniz.display.circle(90, 30, 20, true); // filled circle\n   * ```\n   *\n   * @param x\n   * @param y\n   * @param r\n   * @param mustFill\n   */\n  public circle(x: number, y: number, r: number, mustFill?: boolean) {\n    const ctx: any = this._ctx();\n    if (ctx) {\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, Math.PI * 2);\n      if (mustFill) {\n        ctx.fill();\n      } else {\n        ctx.stroke();\n      }\n      this.draw(ctx);\n    } else {\n      this.warnCanvasAvailability();\n    }\n  }\n\n  /**\n   * This shows QR code with given text and correction level.\n   * The correction level can be\n   *\n   * - L\n   * - M(default)\n   * - Q\n   * - H\n   *\n   * H is the strongest error correction.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.qr(\"https://obniz.io\")\n   * ```\n   * @param text\n   * @param correction\n   */\n  public qr(text: string, correction?: \"L\" | \"M\" | \"Q\" | \"H\") {\n    const obj: any = {};\n    obj.display = {\n      qr: {\n        text,\n      },\n    };\n    if (correction) {\n      obj.display.qr.correction = correction;\n    }\n    this.Obniz.send(obj);\n  }\n\n  /**\n   * Draw BMP image\n   *\n   * ```javascript\n   * obniz.display.raw([255, 255,,,,,])\n   * ```\n   *\n   * You should care about colorDepth before sending raw datas.\n   *\n   * @param data data array.\n   * The order is as below.\n   * {1byte} {2byte} {3byte}...{16byte}\n   * {17byte} {18byte} {19byte}...\n   * .....\n   * .....................\n   */\n  public raw(data: number[]) {\n    const obj: any = {};\n    obj.display = {\n      raw: data,\n    };\n    if (this._colorDepth > 1) {\n      obj.display.color_depth = this._colorDepth;\n    }\n    this.Obniz.send(obj);\n  }\n\n  /**\n   * Setting color depth for all communication for the display\n   * higher number will get more beautiful colors and lowest number 1 is just monochrome.\n   * But 16 bit color mode is 16 times data bytes needed for same size rendering.\n   *\n   * ```javascript\n   * obniz.display.setColorDepth(4); // => 4bit color mode.\n   * ```\n   *\n   * @param depth monochrome display always 1. For color display 1(monochrome) and 4 and 16 can be selected.\n   * default value is highest color depth for your display.\n   * If you call just\n   */\n  public setColorDepth(depth: number) {\n    const found = this._colorDepthCapabilities.find((element) => element === depth);\n    if (found) {\n      this._colorDepth = depth;\n    } else {\n      throw new Error(\n        `This device can't accept depth ${depth}. availables are ${JSON.stringify(this._colorDepthCapabilities)}`,\n      );\n    }\n  }\n\n  /**\n   * Getting color depth for all communication for the display\n   *\n   * ```javascript\n   * const current = obniz.display.getColorDepth(); // => return current depth. 1 or higher\n   * ```\n   */\n  public getColorDepth() {\n    return this._colorDepth;\n  }\n\n  /**\n   * @ignore\n   * @param io\n   * @param moduleName\n   * @param funcName\n   */\n  public setPinName(io: number, moduleName: string, funcName: string) {\n    const obj: any = {};\n    obj.display = {};\n    obj.display.pin_assign = {};\n    obj.display.pin_assign[io] = {\n      module_name: moduleName,\n      pin_name: funcName,\n    };\n\n    this.Obniz.send(obj);\n  }\n\n  /**\n   * @ignore\n   * @param moduleName\n   * @param data\n   */\n  public setPinNames(moduleName: string, data: any) {\n    const obj: any = {};\n    obj.display = {};\n    obj.display.pin_assign = {};\n    let noAssignee: any = true;\n    for (const key in data) {\n      noAssignee = false;\n      obj.display.pin_assign[key] = {\n        module_name: moduleName,\n        pin_name: data[key],\n      };\n    }\n    if (!noAssignee) {\n      this.Obniz.send(obj);\n    }\n  }\n\n  /**\n   * Draw Display from HTML5 Canvas context.\n   * With node-canvas, this works with node.js.\n   *\n   * - on HTML, load ctx from existing\n   *\n   * ```javascript\n   * let ctx = $(\"#canvas\")[0].getContext('2d');\n   *\n   * ctx.fillStyle = \"white\";\n   * ctx.font = \"30px Avenir\";\n   * ctx.fillText('Avenir', 0, 40);\n   *\n   * obniz.display.draw(ctx);\n   * ```\n   *\n   * - on HTML, create new canvas dom and load it.\n   *\n   * ```javascript\n   *\n   * let ctx = obniz.util.createCanvasContext(obniz.display.width, obniz.display.height);\n   *\n   * ctx.fillStyle = \"white\";\n   * ctx.font = \"30px Avenir\";\n   * ctx.fillText('Avenir', 0, 40);\n   *\n   * obniz.display.draw(ctx);\n   * ```\n   *\n   * - running with node.js\n   *\n   * ```javascript\n   * //    npm install canvas. ( version 2.0.0 or later required )\n   * const { createCanvas } = require('canvas');\n   * const canvas = createCanvas(128, 64);\n   * const ctx = canvas.getContext('2d');\n   *\n   * ctx.fillStyle = \"white\";\n   * ctx.font = \"30px Avenir\";\n   * ctx.fillText('Avenir', 0, 40);\n   *\n   * obniz.display.draw(ctx);\n   * ```\n   *\n   *\n   * @param ctx\n   */\n  public draw(ctx: CanvasRenderingContext2D) {\n    if (this.autoFlush) {\n      this._draw(ctx);\n    }\n  }\n\n  /**\n   * You can specify to transfer the displayed data or not.\n   * This affects only the functions that use canvas like clear/print/line/rect/circle/draw.\n   *\n   * Use false to stop updating display and true to restart updating.\n   *\n   * ```javascript\n   * // Javascript Example\n   * obniz.display.drawing(false);\n   * for (var i=0;i<100; i++) {\n   *   var x0 = Math.random() * 128;\n   *   var y0 = Math.random() * 64;\n   *   var x1 = Math.random() * 128;\n   *   var y1 = Math.random() * 64;\n   *   obniz.display.clear();\n   *   obniz.display.line(x0, y0, x1, y1);\n   * }\n   * obniz.display.drawing(true);\n   * ```\n   * @param autoFlush\n   */\n  public drawing(autoFlush: boolean) {\n    this.autoFlush = !!autoFlush;\n    const ctx: any = this._ctx();\n    if (ctx) {\n      this.draw(ctx);\n    }\n  }\n\n  public schemaBasePath(): string {\n    return \"display\";\n  }\n\n  protected _reset() {\n    this.autoFlush = true;\n    // reset to default\n    this._pos = { x: 0, y: 0 };\n    this._color = this._paper_white ? \"#000\" : \"#FFF\";\n    this.fontSize = this.height > 200 ? 32 : 16;\n    this._colorDepth = this._colorDepthCapabilities[this._colorDepthCapabilities.length - 1];\n    this._reset_canvas();\n  }\n\n  private warnCanvasAvailability() {\n    if (this.Obniz.isNode) {\n      throw new Error(\"obniz.js require node-canvas to draw rich contents. see more detail on docs\");\n    } else {\n      throw new Error(\"obniz.js cant create canvas element to body\");\n    }\n  }\n\n  private _reset_canvas() {\n    // reset canvas\n    if (this._canvas) {\n      const ctx: any = this._canvas!.getContext(\"2d\");\n      ctx.fillStyle = this._paper_white ? \"#FFF\" : \"#000\";\n      ctx.fillRect(0, 0, this.width, this.height);\n      ctx.fillStyle = this._color;\n      ctx.strokeStyle = this._color;\n      ctx.font = `${this.fontSize}px Arial`;\n    }\n  }\n\n  private _preparedCanvas() {\n    if (this._canvas) {\n      return this._canvas;\n    }\n    if (this.Obniz.isNode) {\n      try {\n        const { createCanvas } = require(\"canvas\");\n        this._canvas = createCanvas(this.width, this.height);\n      } catch (e) {\n        // this.warnCanvasAvailability();\n        return null;\n      }\n    } else {\n      const identifier: any = \"obnizcanvas-\" + this.Obniz.id;\n      let canvas: any = document.getElementById(identifier);\n      if (canvas) {\n        this._canvas = canvas;\n      } else {\n        canvas = document.createElement(\"canvas\");\n        canvas.setAttribute(\"id\", identifier);\n        canvas.style.visibility = \"hidden\";\n        canvas.width = this.width;\n        canvas.height = this.height;\n        if (this._colorDepthCapabilities.length === 1) {\n          // for monochro display\n          canvas.style[\"-webkit-font-smoothing\"] = \"none\";\n        }\n        const body: any = document.getElementsByTagName(\"body\")[0];\n        body.appendChild(canvas);\n\n        this._canvas = canvas;\n        this._reset_canvas();\n      }\n    }\n    return this._canvas;\n  }\n\n  private _ctx() {\n    const canvas: any = this._preparedCanvas();\n    if (canvas) {\n      return canvas.getContext(\"2d\");\n    }\n  }\n\n  private _draw(ctx: CanvasRenderingContext2D) {\n    const raw = new Array((this.width * this.height * this._colorDepth) / 8);\n    const imageData = ctx.getImageData(0, 0, this.width, this.height);\n    const data = imageData.data;\n\n    if (this._colorDepth === 16) {\n      for (let pixel_index = 0; pixel_index < this.width * this.height; pixel_index++) {\n        const red = data[pixel_index * 4];\n        const green = data[pixel_index * 4 + 1];\n        const blue = data[pixel_index * 4 + 2];\n        const hexColor = (((red >> 3) & 0x1f) << 11) | (((green >> 2) & 0x3f) << 5) | (((blue >> 3) & 0x1f) << 0);\n        raw[pixel_index * 2] = (hexColor >> 8) & 0xff;\n        raw[pixel_index * 2 + 1] = hexColor & 0xff;\n      }\n    } else if (this._colorDepth === 4) {\n      const stride = this.width / 2;\n      for (let pixel_index = 0; pixel_index < this.width * this.height; pixel_index++) {\n        const red = data[pixel_index * 4];\n        const green = data[pixel_index * 4 + 1];\n        const blue = data[pixel_index * 4 + 2];\n        const brightness = 0.34 * red + 0.5 * green + 0.16 * blue;\n        const line = Math.floor(pixel_index / this.width);\n        const col = Math.floor((pixel_index - line * this.width) / 2);\n        const bits = Math.floor(pixel_index - line * this.width) % 2;\n\n        let pixel = 0b0000;\n        if (red > 0x7f) {\n          pixel |= 0b1000;\n        }\n        if (green > 0x7f) {\n          pixel |= 0b0100;\n        }\n        if (blue > 0x7f) {\n          pixel |= 0b0010;\n        }\n        if (brightness > 0x7f) {\n          pixel |= 0b0001;\n        }\n\n        if (bits === 0) {\n          raw[line * stride + col] = pixel << 4;\n        } else {\n          raw[line * stride + col] |= pixel;\n        }\n      }\n    } else {\n      const stride = this.width / 8;\n      for (let pixel_index = 0; pixel_index < this.width * this.height; pixel_index++) {\n        const red = data[pixel_index * 4];\n        const green = data[pixel_index * 4 + 1];\n        const blue = data[pixel_index * 4 + 2];\n        const brightness = 0.34 * red + 0.5 * green + 0.16 * blue;\n        const row = Math.floor(pixel_index / this.width);\n        const col = Math.floor((pixel_index - row * this.width) / 8);\n        const bits = Math.floor(pixel_index - row * this.width) % 8;\n        if (bits === 0) {\n          raw[row * stride + col] = 0x00;\n        }\n\n        if (brightness > 0x7f) {\n          raw[row * stride + col] |= 0x80 >> bits;\n        }\n      }\n    }\n    if (this._raw_alternate) {\n      for (let i = 0; i < raw.length; i++) {\n        raw[i] = ~raw[i] & 0xff;\n      }\n    }\n\n    this.raw(raw);\n  }\n}\n"]}