{"version":3,"sources":["../src/obniz/libs/hw/m5stickc.ts"],"names":[],"mappings":"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","file":"m5stickc.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Hardware\n */\n\nimport ObnizDevice from \"../../ObnizDevice\";\n\nimport InfraredLED from \"../../../parts/Infrared/InfraredLED\";\nimport LED from \"../../../parts/Light/LED\";\nimport Button from \"../../../parts/MovementSensor/Button\";\n\nimport I2C from \"../../../obniz/libs/io_peripherals/i2c\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\nimport IO from \"../../../obniz/libs/io_peripherals/io\";\nimport MPU6886 from \"../../../parts/MovementSensor/MPU6886\";\nimport SH200Q from \"../../../parts/MovementSensor/SH200Q\";\nimport AXP192 from \"../../../parts/Power/AXP192\";\nimport ObnizBLEHci from \"../embeds/bleHci/ble\";\nimport Display from \"../embeds/display\";\nimport PeripheralAD from \"../io_peripherals/ad\";\nimport PeripheralGrove from \"../io_peripherals/grove\";\nimport PeripheralPWM from \"../io_peripherals/pwm\";\nimport PeripheralSPI from \"../io_peripherals/spi\";\nimport PeripheralUART from \"../io_peripherals/uart\";\nimport LogicAnalyzer from \"../measurements/logicanalyzer\";\nimport ObnizMeasure from \"../measurements/measure\";\n\nexport class M5StickC extends ObnizDevice {\n  /**\n   * Embeded Primary Button on M5StickC. Big button right of display with print \"M5\". Also This button can be used as trigger of serverless function trigger.\n   * @category Embeds\n   */\n  public buttonA!: Button;\n\n  /**\n   * Embeded Secondary Button on M5StickC. It is on side of M5StickC.\n   * @category Embeds\n   */\n  public buttonB!: Button;\n\n  /**\n   * Embeded Infrared LED inside of M5StickC\n   * @category Embeds\n   */\n  public ir!: InfraredLED;\n\n  /**\n   * Embeded 6 axis IMU. 3 acceleration and 3 gyro.\n   *\n   * ```javascript\n   * const data = await obniz.imu.getAllDataWait();\n   * console.log('accelerometer: %o', data.accelerometer);\n   * console.log('gyroscope: %o', data.gyroscope);\n   * ```\n   *\n   * @category Embeds\n   */\n  public imu?: MPU6886 | SH200Q;\n\n  /**\n   * Power management chip in M5StickC.\n   * @category Embeds\n   */\n  public axp!: AXP192;\n\n  /**\n   * Embeded Red LED on M5StickC\n   * @category Embeds\n   */\n  public led!: LED;\n\n  /**\n   * @ignore\n   */\n  public io1!: never;\n\n  /**\n   * @ignore\n   */\n  public io2!: never;\n  /**\n   * @ignore\n   */\n  public io3!: never;\n\n  /**\n   * @ignore\n   */\n  public io4!: never;\n\n  /**\n   * @ignore\n   */\n  public io5!: never;\n\n  /**\n   * @ignore\n   */\n  public io6!: never;\n\n  /**\n   * @ignore\n   */\n  public io7!: never;\n\n  /**\n   * @ignore\n   */\n  public io8!: never;\n\n  /**\n   * @ignore\n   */\n  public io9!: never;\n\n  /**\n   * @ignore\n   */\n  public io10!: never;\n\n  /**\n   * @ignore\n   */\n  public io11!: never;\n\n  /**\n   * @category Peripherals\n   */\n  public io26!: IO;\n\n  /**\n   * @category Peripherals\n   */\n  public io32!: IO;\n\n  /**\n   * @category Peripherals\n   */\n  public io33!: IO;\n\n  /**\n   * @category Peripherals\n   */\n  public io34!: IO;\n\n  /**\n   * @category Peripherals\n   */\n  public io36!: IO;\n\n  /**\n   * @ignore\n   */\n  public ad0!: never;\n\n  /**\n   * @ignore\n   */\n  public ad1!: never;\n  /**\n   * @ignore\n   */\n  public ad2!: never;\n\n  /**\n   * @ignore\n   */\n  public ad3!: never;\n\n  /**\n   * @ignore\n   */\n  public ad4!: never;\n\n  /**\n   * @ignore\n   */\n  public ad5!: never;\n\n  /**\n   * @ignore\n   */\n  public ad6!: never;\n\n  /**\n   * @ignore\n   */\n  public ad7!: never;\n\n  /**\n   * @ignore\n   */\n  public ad8!: never;\n\n  /**\n   * @ignore\n   */\n  public ad9!: never;\n\n  /**\n   * @ignore\n   */\n  public ad10!: never;\n\n  /**\n   * @ignore\n   */\n  public ad11!: never;\n\n  /**\n   * @category Peripherals\n   */\n  public ad32!: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad33!: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad34!: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad35!: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad36!: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm0!: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm1!: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm2!: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm3!: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm4!: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm5!: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public uart0!: PeripheralUART;\n\n  /**\n   * @category Peripherals\n   */\n  public uart1!: PeripheralUART;\n\n  /**\n   *\n   *\n   * @category Peripherals\n   */\n  public spi0!: PeripheralSPI;\n\n  /**\n   * @category Peripherals\n   */\n  public i2c0!: PeripheralI2C;\n\n  /**\n   * @category Peripherals\n   */\n  public grove0!: PeripheralGrove;\n\n  /**\n   * This is used by system. Please use i2c0.\n   * @category Peripherals\n   */\n  public i2c1!: PeripheralI2C;\n\n  /**\n   * @category Measurement\n   */\n  public logicAnalyzer!: LogicAnalyzer;\n\n  /**\n   * @category Measurement\n   */\n  public measure!: ObnizMeasure;\n\n  /**\n   * @category Embeds\n   */\n  public display!: Display;\n\n  /**\n   * @ignore\n   */\n  public switch!: never;\n\n  /**\n   * If obnizOS ver >= 3.0.0, automatically load [[ObnizCore.Components.Ble.Hci.ObnizBLE|ObnizHciBLE]],\n   * and obnizOS ver < 3.0.0 throw unsupported error,\n   * @category Embeds\n   */\n  public ble!: ObnizBLEHci;\n\n  // protected io13!: IO; // LCD\n  // protected io15?: IO; // LCD\n  // protected io18!: IO; // LCD\n  protected io21!: IO; // internal I2C\n  protected io22!: IO; // internal I2c\n  // protected io23!: IO; // LCD\n  protected io27!: IO; // axp\n  protected io37!: IO; // ButtonA\n  protected io39!: IO; // ButtonB\n\n  private _m5i2c!: I2C;\n\n  constructor(id: string, options?: any) {\n    super(id, options);\n  }\n\n  public gyroWait(): Promise<{ x: number; y: number; z: number }> {\n    const supportedIMUNameArr = [\"MPU6886\", \"SH200Q\"];\n    if (!supportedIMUNameArr.includes(this.imu!.constructor.name)) {\n      throw new Error(`gyroWait is supported only on M5stickC with ${supportedIMUNameArr.join()}`);\n    }\n    return this.imu!.getGyroWait();\n  }\n\n  public accelerationWait(): Promise<{ x: number; y: number; z: number }> {\n    const supportedIMUNameArr = [\"MPU6886\", \"SH200Q\"];\n    if (!supportedIMUNameArr.includes(this.imu!.constructor.name)) {\n      throw new Error(`accelerationWait is supported only on M5stickC with ${supportedIMUNameArr.join()}`);\n    }\n    return this.imu!.getAccelWait();\n  }\n\n  public setupIMUWait(imuName: \"MPU6886\" | \"SH200Q\" = \"MPU6886\"): Promise<MPU6886 | SH200Q> {\n    const i2c = this._m5i2c!;\n    const onerror = i2c.onerror;\n    this.imu = this.wired(imuName, { i2c });\n\n    // @ts-ignore\n    this.imu._reset = () => {};\n    const p1 = this.imu.whoamiWait();\n    const p2 = new Promise((resolve, reject) => {\n      i2c.onerror = reject;\n    });\n    return Promise.race([p1, p2]).then(async (val) => {\n      // restore\n      i2c.onerror = onerror;\n      if (!val) {\n        throw new Error(`Cannot find IMU (${imuName}) on this M5StickC`);\n      }\n      switch (imuName) {\n        case \"SH200Q\":\n          await (this.imu as SH200Q).initWait();\n          break;\n        case \"MPU6886\":\n          (this.imu as MPU6886).init();\n          break;\n        default:\n          break;\n      }\n      return this.imu!;\n    });\n  }\n\n  protected async _beforeOnConnect() {\n    super._beforeOnConnect();\n\n    if (this.ir) {\n      // already wired parts\n      return;\n    }\n\n    this.ir = this.wired(\"InfraredLED\", { anode: 9 });\n    this.led = this.wired(\"LED\", { cathode: 10 });\n    this.buttonA = this.wired(\"Button\", { signal: 37 });\n    this.buttonB = this.wired(\"Button\", { signal: 39 });\n\n    const i2cParams = {\n      sda: 21,\n      scl: 22,\n      clock: 100000,\n      pull: \"3v\",\n      mode: \"master\",\n    };\n\n    this._m5i2c = this.i2c1;\n    this._m5i2c.start(i2cParams as any);\n    this.axp = this.wired(\"AXP192\", { i2c: this._m5i2c });\n    this.led.off();\n  }\n\n  protected _prepareComponents() {\n    // @ts-ignore\n    super._prepareComponents();\n\n    if (this.hw !== \"m5stickc\") {\n      throw new Error(\"Obniz.M5StickC only support ObnizOS for M5StickC. Your device is not ObnizOS for M5StickC.\");\n    }\n  }\n}\n"]}