{"version":3,"sources":["../src/obniz/libs/hw/obnizBoard.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,WAAW,MAAM,mBAAmB,CAAC;AAC5C,OAAO,WAAW,MAAM,sBAAsB,CAAC;AAC/C,OAAO,OAAO,MAAM,mBAAmB,CAAC;AACxC,OAAO,WAAW,MAAM,kBAAkB,CAAC;AAC3C,OAAO,YAAY,MAAM,sBAAsB,CAAC;AAChD,OAAO,aAAa,MAAM,uBAAuB,CAAC;AAClD,OAAO,YAAY,MAAM,sBAAsB,CAAC;AAChD,OAAO,aAAa,MAAM,uBAAuB,CAAC;AAClD,OAAO,aAAa,MAAM,uBAAuB,CAAC;AAClD,OAAO,cAAc,MAAM,wBAAwB,CAAC;AACpD,OAAO,aAAa,MAAM,+BAA+B,CAAC;AAC1D,OAAO,YAAY,MAAM,yBAAyB,CAAC;AAEnD;;GAEG;AACH,UAAU,UAAW,SAAQ,WAAW;IACtC,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,IAAI,EAAE,YAAY,CAAC;IACnB,IAAI,EAAE,YAAY,CAAC;IAEnB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,GAAG,EAAE,YAAY,CAAC;IAClB,IAAI,EAAE,YAAY,CAAC;IACnB,IAAI,EAAE,YAAY,CAAC;IAEnB,IAAI,EAAE,aAAa,CAAC;IACpB,IAAI,EAAE,aAAa,CAAC;IACpB,IAAI,EAAE,aAAa,CAAC;IACpB,IAAI,EAAE,aAAa,CAAC;IACpB,IAAI,EAAE,aAAa,CAAC;IACpB,IAAI,EAAE,aAAa,CAAC;IAEpB,KAAK,EAAE,cAAc,CAAC;IACtB,KAAK,EAAE,cAAc,CAAC;IACtB,IAAI,EAAE,aAAa,CAAC;IACpB,IAAI,EAAE,aAAa,CAAC;IACpB,IAAI,EAAE,aAAa,CAAC;IACpB,aAAa,EAAE,aAAa,CAAC;IAC7B,OAAO,EAAE,YAAY,CAAC;IACtB,OAAO,EAAE,OAAO,CAAC;IACjB,MAAM,EAAE,WAAW,CAAC;IACpB,GAAG,EAAE,WAAW,CAAC;CAClB;AAED;;GAEG;AACH,aAAK,UAAU,GAAG,UAAU,CAAC;AAE7B,eAAe,UAAU,CAAC","file":"obnizBoard.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Hardware\n */\n\nimport ObnizDevice from \"../../ObnizDevice\";\nimport ObnizBLEHci from \"../embeds/bleHci/ble\";\nimport Display from \"../embeds/display\";\nimport ObnizSwitch from \"../embeds/switch\";\nimport PeripheralAD from \"../io_peripherals/ad\";\nimport PeripheralI2C from \"../io_peripherals/i2c\";\nimport PeripheralIO from \"../io_peripherals/io\";\nimport PeripheralPWM from \"../io_peripherals/pwm\";\nimport PeripheralSPI from \"../io_peripherals/spi\";\nimport PeripheralUART from \"../io_peripherals/uart\";\nimport LogicAnalyzer from \"../measurements/logicanalyzer\";\nimport ObnizMeasure from \"../measurements/measure\";\n\n/**\n * obniz Board interface\n */\ninterface obnizBoard extends ObnizDevice {\n  io0: PeripheralIO;\n  io1: PeripheralIO;\n  io2: PeripheralIO;\n  io3: PeripheralIO;\n  io4: PeripheralIO;\n  io5: PeripheralIO;\n  io6: PeripheralIO;\n  io7: PeripheralIO;\n  io8: PeripheralIO;\n  io9: PeripheralIO;\n  io10: PeripheralIO;\n  io11: PeripheralIO;\n\n  ad0: PeripheralAD;\n  ad1: PeripheralAD;\n  ad2: PeripheralAD;\n  ad3: PeripheralAD;\n  ad4: PeripheralAD;\n  ad5: PeripheralAD;\n  ad6: PeripheralAD;\n  ad7: PeripheralAD;\n  ad8: PeripheralAD;\n  ad9: PeripheralAD;\n  ad10: PeripheralAD;\n  ad11: PeripheralAD;\n\n  pwm0: PeripheralPWM;\n  pwm1: PeripheralPWM;\n  pwm2: PeripheralPWM;\n  pwm3: PeripheralPWM;\n  pwm4: PeripheralPWM;\n  pwm5: PeripheralPWM;\n\n  uart0: PeripheralUART;\n  uart1: PeripheralUART;\n  spi0: PeripheralSPI;\n  spi1: PeripheralSPI;\n  i2c0: PeripheralI2C;\n  logicAnalyzer: LogicAnalyzer;\n  measure: ObnizMeasure;\n  display: Display;\n  switch: ObnizSwitch;\n  ble: ObnizBLEHci;\n}\n\n/**\n * @ignore\n */\ntype ObnizBoard = obnizBoard;\n\nexport default ObnizBoard;\n"]}