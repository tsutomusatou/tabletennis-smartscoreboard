{"version":3,"sources":["../src/obniz/libs/ComponentAbstact.ts"],"names":[],"mappings":"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","file":"ComponentAbstact.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components\n */\n\nimport EventEmitter from \"eventemitter3\";\nimport Obniz from \"../index\";\nimport { ObnizError, ObnizOfflineError, ObnizTimeoutError } from \"../ObnizError\";\n\nimport WSSchema from \"./wscommand/WSSchema\";\n\nexport type EventHandler = (...args: any) => any;\n\nexport interface ReceiveJsonOptions {\n  /**\n   * Indicate timeout in milliseconds.\n   * If not appliced, default timeout will be applied.\n   */\n  timeout?: number;\n\n  /**\n   * Indicate sequencial operation or not\n   */\n  queue?: boolean;\n  errors?: { [schema: string]: typeof ObnizError };\n}\n\nexport abstract class ComponentAbstract<EventTypes extends string = string> extends EventEmitter<EventTypes> {\n  /**\n   * obniz to be used\n   */\n  public Obniz: Obniz;\n\n  /**\n   * Rsponse waiting timeout in milliseconds\n   */\n  public timeout: number = 30 * 1000;\n\n  protected _eventHandlerQueue: { [key: string]: EventHandler[] } = {};\n\n  constructor(obniz: Obniz) {\n    super();\n    this.Obniz = obniz;\n  }\n\n  public notifyFromObniz(json: any) {\n    for (const eventName of this.eventNames()) {\n      if (typeof eventName !== \"string\" || !eventName.startsWith(\"/response/\")) {\n        continue;\n      }\n      const errors = this.validate(eventName, json);\n      if (errors.valid) {\n        this.emit(eventName, json);\n      }\n    }\n    for (const eventName in this._eventHandlerQueue) {\n      if (typeof eventName !== \"string\" || !eventName.startsWith(\"/response/\")) {\n        continue;\n      }\n      if (this._eventHandlerQueue[eventName].length === 0) {\n        continue;\n      }\n      const errors = this.validate(eventName, json);\n      if (errors.valid) {\n        const func = this._eventHandlerQueue[eventName].shift();\n        if (func) {\n          func(json);\n        }\n      }\n    }\n  }\n\n  public validate(commandUri: any, json: any): WSSchema.MultiResult {\n    const schema = WSSchema.getSchema(commandUri);\n    return WSSchema.validateMultiple(json, schema);\n  }\n\n  public abstract schemaBasePath(): string | null;\n\n  protected abstract _reset(): void;\n\n  protected onceQueue(eventName: string, func: EventHandler) {\n    this._eventHandlerQueue[eventName] = this._eventHandlerQueue[eventName] || [];\n    if (typeof func === \"function\") {\n      this._eventHandlerQueue[eventName].push(func);\n    }\n  }\n\n  protected async sendAndReceiveJsonWait(sendObj: any, schemaPath: string, option?: ReceiveJsonOptions): Promise<any> {\n    this.Obniz.send(sendObj);\n    return await this.receiveJsonWait(schemaPath, option);\n  }\n\n  protected receiveJsonWait(schemaPath: string, option?: ReceiveJsonOptions): Promise<any> {\n    option = option || {};\n    option.timeout = option.timeout || this.timeout;\n    option.queue = option.queue !== false;\n    option.errors = option.errors || {};\n\n    return new Promise((resolve, reject) => {\n      if (this.Obniz.connectionState !== \"connected\") {\n        reject(new ObnizOfflineError());\n        return;\n      }\n      const clearListeners = () => {\n        this.Obniz.off(\"close\", onObnizClosed);\n        this.off(schemaPath as any, onDataReceived);\n        if (typeof timeoutHandler === \"number\") {\n          clearTimeout(timeoutHandler);\n          timeoutHandler = undefined;\n        }\n        for (const one of onErrorFuncs) {\n          this.off(one.path, one.onError);\n        }\n      };\n      const onObnizClosed = () => {\n        clearListeners();\n        const error = new ObnizOfflineError();\n        reject(error);\n      };\n      const onDataReceived = (schemaData: any) => {\n        clearListeners();\n\n        resolve(schemaData);\n      };\n      const onTimeout = () => {\n        clearListeners();\n\n        const error = new ObnizTimeoutError(schemaPath);\n        reject(error);\n      };\n      const onErrorFuncs: any[] = [];\n\n      this.Obniz.once(\"close\", onObnizClosed);\n      if (option!.queue) {\n        this.onceQueue(schemaPath as any, onDataReceived);\n      } else {\n        this.once(schemaPath as any, onDataReceived);\n      }\n\n      for (const path in option!.errors) {\n        const onError = () => {\n          clearListeners();\n          const error = new (option!.errors![path] as any)();\n          reject(error);\n        };\n        this.on(path as any, onError);\n        onErrorFuncs.push({ onError, path });\n      }\n      let timeoutHandler: number | undefined = setTimeout(onTimeout, option!.timeout);\n    });\n  }\n}\n"]}