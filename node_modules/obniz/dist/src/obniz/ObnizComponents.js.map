{"version":3,"sources":["../src/obniz/ObnizComponents.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAGH,mEAAmD;AACnD,oEAA4C;AAC5C,kEAA+C;AAE/C,kEAAoD;AAEpD,gFAAkE;AAClE,oEAAsD;AACtD,kEAAoD;AACpD,oEAAsD;AACtD,oEAAsD;AACtD,sEAAwD;AACxD,sFAA8D;AAC9D,0EAAuD;AACvD,+DAAuC;AACvC,kEAA0C;AAE1C,8DAAsC;AAEtC,8DAAsC;AAEtC,8DAA4D;AAC5D,mDAA2B;AAC3B,wEAA0D;AAG1D,MAA8B,eAAgB,SAAQ,oBAAU;IA6N9D,YAAY,EAAU,EAAE,OAAsB;QAC5C,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC9B,CAAC;IAEM,KAAK;QACV,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,IAAI,IAAI,CAAC,OAAO,CAAC,+BAA+B,EAAE;YAChD,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;IACH,CAAC;IAED;;;;;OAKG;IACI,SAAS,CAAC,GAA8B,EAAE,GAA8B,EAAE,KAAgB;QAC/F,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvB,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,KAAK,CAAC,GAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,KAAK,CAAC,GAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvB,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,KAAK,CAAC,GAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,KAAK,CAAC,GAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,EAAU;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,kBAAkB,CAAC,CAAC;SAClD;QACD,OAAQ,IAAY,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;IAClC,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,EAAU;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,kBAAkB,CAAC,CAAC;SAClD;QACD,OAAQ,IAAY,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;IAClC,CAAC;IAED;;OAEG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED;;OAEG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED;;;OAGG;IACI,gBAAgB,CAAC,MAAW;QACjC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,IAAI,MAAM,CAAC,GAAG,EAAE;YACd,OAAO,MAAM,CAAC,GAAG,CAAC;SACnB;QACD,MAAM,GAAG,GAAkB,IAAI,CAAC,UAAU,EAAE,CAAC;QAC7C,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAClB,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;OAEG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED;;;OAGG;IACI,gBAAgB,CAAC,MAAW;QACjC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,IAAI,MAAM,CAAC,GAAG,EAAE;YACd,OAAO,MAAM,CAAC,GAAG,CAAC;SACnB;QACD,MAAM,GAAG,GAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;QACnC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAClB,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;OAEG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED;;OAEG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAEM,iBAAiB,CAAC,aAAqB;QAC5C,OAAO,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;IACjD,CAAC;IAEM,iBAAiB,CAAC,aAAqB;QAC5C,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;YACzF,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;SACzD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAES,cAAc;QACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAES,kBAAkB;QAC1B,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,OAAO;SACR;QAED,IAAI,CAAC,aAAa,GAAG,YAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,aAAa,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;SACzC;QAED,MAAM,cAAc,GAAQ,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAC3D,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,MAAM,SAAS,GAAQ,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QACjD,MAAM,WAAW,GAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QACrD,MAAM,UAAU,GAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAEnD,MAAM,UAAU,GAAQ;YACtB,EAAE,EAAE,mBAAmB;YACvB,aAAa,EAAE,uBAAa;YAC5B,OAAO,EAAE,iBAAY;YACrB,MAAM,EAAE,gBAAM;SACf,CAAC;QAEF,MAAM,cAAc,GAAQ;YAC1B,EAAE,EAAE,YAAY;YAChB,EAAE,EAAE,YAAY;YAChB,IAAI,EAAE,cAAc;YACpB,GAAG,EAAE,aAAa;YAClB,GAAG,EAAE,aAAa;YAClB,GAAG,EAAE,aAAa;YAClB,KAAK,EAAE,eAAe;SACvB,CAAC;QAEF,MAAM,GAAG,GAAQ,aAAW,CAAC;QAE7B,MAAM,UAAU,GAAQ;YACtB,OAAO,EAAE,iBAAO;YAChB,MAAM,EAAE,gBAAW;YACnB,GAAG;SACJ,CAAC;QAEF,MAAM,YAAY,GAAQ;YACxB,GAAG,EAAE,aAAG;SACT,CAAC;QAEF,MAAM,WAAW,GAAQ;YACvB,IAAI,EAAE,cAAI;SACX,CAAC;QAEF,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;YAC5B,MAAM,KAAK,GAAQ,UAAU,CAAC,GAAG,CAAC,CAAC;YAClC,IAAY,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClC;QAED,IAAI,cAAc,EAAE;YAClB,KAAK,MAAM,GAAG,IAAI,cAAc,EAAE;gBAChC,IAAI,cAAc,CAAC,GAAG,CAAC,EAAE;oBACvB,MAAM,KAAK,GAAQ,cAAc,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;oBAC7C,MAAM,KAAK,GAAQ,cAAc,CAAC,GAAG,CAAC,CAAC;oBACvC,KAAK,MAAM,MAAM,IAAI,KAAK,EAAE;wBAC1B,MAAM,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;wBACrC,IAAY,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC;qBACjD;iBACF;aACF;SACF;QAED,IAAI,SAAS,EAAE;YACb,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;gBAC5B,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;oBAClB,MAAM,KAAK,GAAQ,UAAU,CAAC,GAAG,CAAC,CAAC;oBAClC,IAAY,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;oBACrD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACjC,IAAI,OAAQ,IAAY,CAAC,GAAG,CAAC,CAAC,YAAY,KAAK,UAAU,EAAE;wBACxD,IAAY,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,IAAS,EAAE,EAAE;4BAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;wBACzB,CAAC,CAAC;qBACH;iBACF;aACF;SACF;QAED,IAAI,WAAW,EAAE;YACf,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;gBAC9B,IAAI,WAAW,CAAC,GAAG,CAAC,EAAE;oBACpB,MAAM,KAAK,GAAQ,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;oBAC1C,MAAM,KAAK,GAAQ,YAAY,CAAC,GAAG,CAAC,CAAC;oBACrC,KAAK,MAAM,MAAM,IAAI,KAAK,EAAE;wBAC1B,MAAM,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;wBACrC,IAAY,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;wBAClE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC;qBACjD;iBACF;aACF;SACF;QAED,IAAI,UAAU,EAAE;YACd,KAAK,MAAM,GAAG,IAAI,WAAW,EAAE;gBAC7B,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;oBACnB,MAAM,KAAK,GAAQ,WAAW,CAAC,GAAG,CAAC,CAAC;oBACnC,IAAY,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;oBACrD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAClC;aACF;SACF;IACH,CAAC;IAES,gBAAgB;QACxB,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC;QAC5C,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACvC,IAAY,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;SAC7B;IACH,CAAC;IAES,cAAc,CAAC,GAAQ;QAC/B,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC1B,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxC,MAAM,eAAe,GAAI,IAAY,CAAC,GAAG,CAAC,CAAC;YAC3C,IAAI,eAAe,YAAY,oCAAiB,EAAE;gBAChD,MAAM,QAAQ,GAAG,eAAe,CAAC,cAAc,EAAE,CAAC;gBAClD,IAAI,QAAQ,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;oBAC5C,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAChD;aACF;iBAAM;gBACL,IAAI,GAAG,KAAK,eAAe,EAAE;oBAC3B,IAAI,GAAG,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE;wBACvC,IAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;qBAC1D;oBACD,SAAS;iBACV;gBACD,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAC3B,yBAAyB;oBACzB,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBACpC;aACF;SACF;IACH,CAAC;IAES,mBAAmB,CAAC,KAAU;QACtC,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACjC,YAAY;QACZ,IAAI,KAAK,CAAC,IAAI,EAAE;YACd,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;gBACzC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACjB;SACF;IACH,CAAC;IAES,eAAe,CAAC,QAAa;QACrC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC;IACH,CAAC;IAES,kBAAkB,CAAC,QAAa;QACxC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACzC,MAAM,KAAK,GAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACrC;IACH,CAAC;IAES,sBAAsB,CAAC,UAAe;QAC9C,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxC,IAAI,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACjC,oBAAoB;gBACpB,MAAM,GAAG,GAAS,IAAY,CAAC,GAAG,CAAC,CAAC;gBACpC,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE;oBAC5C,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;oBAChB,OAAO,GAAG,CAAC;iBACZ;aACF;SACF;QACD,MAAM,IAAI,KAAK,CAAC,WAAW,UAAU,aAAa,CAAC,CAAC;IACtD,CAAC;CACF;AAzhBD,kCAyhBC","file":"ObnizComponents.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore\n */\n\nimport semver from \"semver\";\nimport ObnizHciBLE from \"./libs/embeds/bleHci/ble\";\nimport Display from \"./libs/embeds/display\";\nimport ObnizSwitch from \"./libs/embeds/switch\";\n\nimport PeripheralAD from \"./libs/io_peripherals/ad\";\nimport { DriveType } from \"./libs/io_peripherals/common\";\nimport PeripheralDirective from \"./libs/io_peripherals/directive\";\nimport PeripheralI2C from \"./libs/io_peripherals/i2c\";\nimport PeripheralIO from \"./libs/io_peripherals/io\";\nimport PeripheralPWM from \"./libs/io_peripherals/pwm\";\nimport PeripheralSPI from \"./libs/io_peripherals/spi\";\nimport PeripheralUART from \"./libs/io_peripherals/uart\";\nimport LogicAnalyzer from \"./libs/measurements/logicanalyzer\";\nimport ObnizMeasure from \"./libs/measurements/measure\";\nimport WiFi from \"./libs/network/wifi\";\nimport Plugin from \"./libs/plugin/plugin\";\n\nimport TCP from \"./libs/protocol/tcp\";\n\nimport ObnizParts from \"./ObnizParts\";\n\nimport { ComponentAbstract } from \"./libs/ComponentAbstact\";\nimport HW from \"./libs/hw\";\nimport PeripheralGrove from \"./libs/io_peripherals/grove\";\nimport { ObnizOptions } from \"./ObnizOptions\";\n\nexport default abstract class ObnizComponents extends ObnizParts {\n  /* board peripherals */\n\n  /**\n   * @category Peripherals\n   */\n  public io?: PeripheralDirective;\n\n  /**\n   * @category Peripherals\n   */\n  public io0?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io1?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io2?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io3?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io4?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io5?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io6?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io7?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io8?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io9?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io10?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public io11?: PeripheralIO;\n\n  /**\n   * @category Peripherals\n   */\n  public ad0?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad1?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad2?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad3?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad4?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad5?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad6?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad7?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad8?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad9?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad10?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public ad11?: PeripheralAD;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm0?: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm1?: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm2?: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm3?: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm4?: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public pwm5?: PeripheralPWM;\n\n  /**\n   * @category Peripherals\n   */\n  public uart0?: PeripheralUART;\n\n  /**\n   * @category Peripherals\n   */\n  public uart1?: PeripheralUART;\n\n  /**\n   * @category Peripherals\n   */\n  public spi0?: PeripheralSPI;\n\n  /**\n   * @category Peripherals\n   */\n  public spi1?: PeripheralSPI;\n\n  /**\n   * @category Peripherals\n   */\n  public i2c0?: PeripheralI2C;\n\n  /**\n   * @category Measurement\n   */\n  public logicAnalyzer?: LogicAnalyzer;\n\n  /**\n   * @category Measurement\n   */\n  public measure?: ObnizMeasure;\n\n  /**\n   * @category Embeds\n   */\n  public display?: Display;\n\n  /**\n   * @category Embeds\n   */\n  public switch?: ObnizSwitch;\n\n  /**\n   * If obnizOS ver >= 3.0.0, automatically load [[ObnizCore.Components.Ble.Hci.ObnizBLE|ObnizHciBLE]],\n   * and obnizOS ver < 3.0.0 throw unsupported Error,\n   * @category Embeds\n   */\n  public ble?: ObnizHciBLE;\n\n  /**\n   * @category plugin\n   */\n  public plugin?: Plugin;\n\n  protected _hwDefinition: any;\n\n  protected pongObservers: any;\n  protected _allComponentKeys: any;\n  protected _hw_peripherals: any;\n\n  constructor(id: string, options?: ObnizOptions) {\n    super(id, options);\n    this.pongObservers = [];\n    this._allComponentKeys = [];\n  }\n\n  public close() {\n    super.close();\n    if (this.options.reset_obniz_on_ws_disconnection) {\n      this._resetComponents();\n    }\n  }\n\n  /**\n   * Output pin Vcc and Gnd\n   * @param vcc\n   * @param gnd\n   * @param drive\n   */\n  public setVccGnd(vcc: number | null | undefined, gnd: number | null | undefined, drive: DriveType) {\n    if (this.isValidIO(vcc)) {\n      if (drive) {\n        this.getIO(vcc!).drive(drive);\n      }\n      this.getIO(vcc!).output(true);\n    }\n\n    if (this.isValidIO(gnd)) {\n      if (drive) {\n        this.getIO(gnd!).drive(drive);\n      }\n      this.getIO(gnd!).output(false);\n    }\n  }\n\n  /**\n   * Get IO module from pin no\n   * @param io\n   */\n  public getIO(io: number): PeripheralIO {\n    if (!this.isValidIO(io)) {\n      throw new Error(\"io \" + io + \" is not valid io\");\n    }\n    return (this as any)[\"io\" + io];\n  }\n\n  /**\n   * GET AD module from pin no\n   * @param io\n   */\n  public getAD(io: number): PeripheralAD {\n    if (!this.isValidIO(io)) {\n      throw new Error(\"ad \" + io + \" is not valid io\");\n    }\n    return (this as any)[\"ad\" + io];\n  }\n\n  /**\n   * It returns unused PWM module.\n   */\n  public getFreePwm(): PeripheralPWM {\n    return this._getFreePeripheralUnit(\"pwm\");\n  }\n\n  /**\n   * It returns unused I2C module.\n   */\n  public getFreeI2C(): PeripheralI2C {\n    return this._getFreePeripheralUnit(\"i2c\");\n  }\n\n  /**\n   * It returns setuped I2C module .\n   * @param config\n   */\n  public getI2CWithConfig(config: any): PeripheralI2C {\n    if (typeof config !== \"object\") {\n      throw new Error(\"getI2CWithConfig need config arg\");\n    }\n    if (config.i2c) {\n      return config.i2c;\n    }\n    const i2c: PeripheralI2C = this.getFreeI2C();\n    i2c.start(config);\n    return i2c;\n  }\n\n  /**\n   * It returns unused SPI module.\n   */\n  public getFreeSpi(): PeripheralSPI {\n    return this._getFreePeripheralUnit(\"spi\");\n  }\n\n  /**\n   * It returns setuped SPI module.\n   * @param config\n   */\n  public getSpiWithConfig(config: any): PeripheralSPI {\n    if (typeof config !== \"object\") {\n      throw new Error(\"getSpiWithConfig need config arg\");\n    }\n    if (config.spi) {\n      return config.spi;\n    }\n    const spi: any = this.getFreeSpi();\n    spi.start(config);\n    return spi;\n  }\n\n  /**\n   * It returns unused UART module.\n   */\n  public getFreeUart(): PeripheralUART {\n    return this._getFreePeripheralUnit(\"uart\");\n  }\n\n  /**\n   * It returns unused TCP module.\n   */\n  public getFreeTcp() {\n    return this._getFreePeripheralUnit(\"tcp\");\n  }\n\n  public hasExtraInterface(interfaceName: string): boolean {\n    return !!this.getExtraInterface(interfaceName);\n  }\n\n  public getExtraInterface(interfaceName: string): any {\n    if (this._hwDefinition.extraInterface && this._hwDefinition.extraInterface[interfaceName]) {\n      return this._hwDefinition.extraInterface[interfaceName];\n    }\n    return null;\n  }\n\n  protected _callOnConnect() {\n    this._prepareComponents();\n    super._callOnConnect();\n  }\n\n  protected _prepareComponents() {\n    if (this._allComponentKeys.length !== 0) {\n      return;\n    }\n\n    this._hwDefinition = HW.getDefinitionFor(this.hw);\n    if (!this._hwDefinition) {\n      throw new Error(`unkown hw ${this.hw}`);\n    }\n\n    const hw_peripherals: any = this._hwDefinition.peripherals;\n    this._hw_peripherals = hw_peripherals;\n    const hw_embeds: any = this._hwDefinition.embeds;\n    const hw_protocol: any = this._hwDefinition.protocol;\n    const hw_network: any = this._hwDefinition.network;\n\n    const shared_map: any = {\n      io: PeripheralDirective,\n      logicAnalyzer: LogicAnalyzer,\n      measure: ObnizMeasure,\n      plugin: Plugin,\n    };\n\n    const peripheral_map: any = {\n      io: PeripheralIO,\n      ad: PeripheralAD,\n      uart: PeripheralUART,\n      spi: PeripheralSPI,\n      i2c: PeripheralI2C,\n      pwm: PeripheralPWM,\n      grove: PeripheralGrove,\n    };\n\n    const ble: any = ObnizHciBLE;\n\n    const embeds_map: any = {\n      display: Display,\n      switch: ObnizSwitch,\n      ble,\n    };\n\n    const protocol_map: any = {\n      tcp: TCP,\n    };\n\n    const network_map: any = {\n      wifi: WiFi,\n    };\n\n    for (const key in shared_map) {\n      const Class: any = shared_map[key];\n      (this as any)[key] = new Class(this);\n      this._allComponentKeys.push(key);\n    }\n\n    if (hw_peripherals) {\n      for (const key in peripheral_map) {\n        if (hw_peripherals[key]) {\n          const units: any = hw_peripherals[key].units;\n          const Class: any = peripheral_map[key];\n          for (const unitId in units) {\n            const unitIdNumber = parseInt(unitId);\n            (this as any)[key + unitIdNumber] = new Class(this, unitIdNumber, units[unitId]);\n            this._allComponentKeys.push(key + unitIdNumber);\n          }\n        }\n      }\n    }\n\n    if (hw_embeds) {\n      for (const key in embeds_map) {\n        if (hw_embeds[key]) {\n          const Class: any = embeds_map[key];\n          (this as any)[key] = new Class(this, hw_embeds[key]);\n          this._allComponentKeys.push(key);\n          if (typeof (this as any)[key].debugHandler === \"function\") {\n            (this as any)[key].debugHandler = (text: any) => {\n              this.print_debug(text);\n            };\n          }\n        }\n      }\n    }\n\n    if (hw_protocol) {\n      for (const key in protocol_map) {\n        if (hw_protocol[key]) {\n          const units: any = hw_protocol[key].units;\n          const Class: any = protocol_map[key];\n          for (const unitId in units) {\n            const unitIdNumber = parseInt(unitId);\n            (this as any)[key + unitIdNumber] = new Class(this, unitIdNumber);\n            this._allComponentKeys.push(key + unitIdNumber);\n          }\n        }\n      }\n    }\n\n    if (hw_network) {\n      for (const key in network_map) {\n        if (hw_network[key]) {\n          const Class: any = network_map[key];\n          (this as any)[key] = new Class(this, hw_embeds[key]);\n          this._allComponentKeys.push(key);\n        }\n      }\n    }\n  }\n\n  protected _resetComponents() {\n    this.print_debug(\"components state resets\");\n    for (const key of this._allComponentKeys) {\n      (this as any)[key]._reset();\n    }\n  }\n\n  protected notifyToModule(obj: any) {\n    super.notifyToModule(obj);\n    for (const key of this._allComponentKeys) {\n      const targetComponent = (this as any)[key];\n      if (targetComponent instanceof ComponentAbstract) {\n        const basePath = targetComponent.schemaBasePath();\n        if (basePath && obj.hasOwnProperty(basePath)) {\n          targetComponent.notifyFromObniz(obj[basePath]);\n        }\n      } else {\n        if (key === \"logicAnalyzer\") {\n          if (obj.hasOwnProperty(\"logic_analyzer\")) {\n            (this as any).logicAnalyzer.notified(obj.logic_analyzer);\n          }\n          continue;\n        }\n        if (obj.hasOwnProperty(key)) {\n          /* because of nullable */\n          targetComponent.notified(obj[key]);\n        }\n      }\n    }\n  }\n\n  protected handleSystemCommand(wsObj: any) {\n    super.handleSystemCommand(wsObj);\n    // ping pong\n    if (wsObj.pong) {\n      for (const callback of this.pongObservers) {\n        callback(wsObj);\n      }\n    }\n  }\n\n  protected addPongObserver(callback: any) {\n    if (callback) {\n      this.pongObservers.push(callback);\n    }\n  }\n\n  protected removePongObserver(callback: any) {\n    if (this.pongObservers.includes(callback)) {\n      const index: any = this.pongObservers.indexOf(callback);\n      this.pongObservers.splice(index, 1);\n    }\n  }\n\n  protected _getFreePeripheralUnit(peripheral: any): any {\n    for (const key of this._allComponentKeys) {\n      if (key.indexOf(peripheral) === 0) {\n        /* \"io\" for \"io0\" */\n        const obj: any = (this as any)[key];\n        if (typeof obj === \"object\" && !obj.isUsed()) {\n          obj.used = true;\n          return obj;\n        }\n      }\n    }\n    throw new Error(`No More ${peripheral} Available.`);\n  }\n}\n"]}