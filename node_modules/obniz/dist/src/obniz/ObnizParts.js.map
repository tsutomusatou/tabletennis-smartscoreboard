{"version":3,"sources":["../src/obniz/ObnizParts.ts"],"names":[],"mappings":"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","file":"ObnizParts.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore\n */\n\nimport ObnizUtil from \"./libs/utils/util\";\nimport ObnizConnection from \"./ObnizConnection\";\nimport { ObnizOptions } from \"./ObnizOptions\";\nimport ObnizPartsInterface from \"./ObnizPartsInterface\";\nimport { WiredNameMap, WiredNameOptionsMap } from \"./ObnizPartsList\";\n\n/**\n * @ignore\n */\nconst _parts: any = {};\n\nexport default abstract class ObnizParts extends ObnizConnection {\n  /**\n   * @ignore\n   * @private\n   */\n  public static _parts(): any {\n    return _parts;\n  }\n\n  /**\n   * Register Parts class\n   * @param arg0 Parts class\n   */\n  public static PartsRegistrate(arg0: typeof ObnizPartsInterface, arg1?: any) {\n    if (arg0 && typeof arg0.info === \"function\" && typeof arg0.info().name === \"string\") {\n      _parts[arg0.info().name] = arg0;\n    } else if (typeof arg0 === \"string\" && typeof arg1 === \"object\") {\n      _parts[arg0] = arg1;\n    }\n  }\n\n  /**\n   * Get parts class.\n   * @param string\n   * @constructor\n   */\n  public static getPartsClass<K extends keyof WiredNameMap>(name: K): any {\n    if (!_parts[name]) {\n      throw new Error(`unknown parts [${name}]`);\n    }\n    return _parts[name];\n  }\n\n  constructor(id: string, options?: ObnizOptions) {\n    super(id, options);\n  }\n\n  /**\n   * Check the param is valid io pin no.\n   * @param io\n   */\n  public isValidIO(io: any): boolean {\n    return typeof io === \"number\" && (this as any)[\"io\" + io] !== null;\n  }\n\n  /**\n   * Check the param is valid ad pin no.\n   * @param io\n   */\n  public isValidAD(ad: any): boolean {\n    return typeof ad === \"number\" && (this as any)[\"ad\" + ad] !== null;\n  }\n\n  /**\n   * Setup Parts of parts library\n   *\n   * @param partsname\n   * @param options\n   */\n  public wired<K extends keyof WiredNameMap>(partsname: K, options?: WiredNameOptionsMap[K]): WiredNameMap[K] {\n    const Parts: any = ObnizParts.getPartsClass(partsname);\n    if (!Parts) {\n      throw new Error(\"No such a parts [\" + partsname + \"] found\");\n    }\n    const parts = new Parts();\n    const args: any = Array.from(arguments);\n    args.shift();\n    args.unshift(this);\n    if (!args[1]) {\n      args[1] = {};\n    }\n    if (parts.keys) {\n      if (parts.requiredKeys) {\n        const err: any = ObnizUtil._requiredKeys(args[1], parts.requiredKeys);\n        if (err) {\n          throw new Error(partsname + \" wired param '\" + err + \"' required, but not found \");\n        }\n      }\n      parts.params = ObnizUtil._keyFilter(args[1], parts.keys);\n    }\n    parts.obniz = this;\n    parts.wired.apply(parts, args);\n    if (parts.keys || parts.ioKeys) {\n      const keys: any = parts.ioKeys || parts.keys;\n      const displayPartsName: any = parts.displayName || partsname;\n      const ioNames: any = {};\n      for (const index in keys) {\n        let pinName: any = keys[index];\n        const io: any = args[1][pinName];\n        if (this.isValidIO(io)) {\n          if (parts.displayIoNames && parts.displayIoNames[pinName]) {\n            pinName = parts.displayIoNames[pinName];\n          }\n          ioNames[io] = pinName;\n        }\n      }\n      const display = (this as any).display;\n      if (display) {\n        display.setPinNames(displayPartsName, ioNames);\n      }\n    }\n    return parts;\n  }\n}\n"]}