{"version":3,"sources":["../src/obniz/ObnizPartsBleInterface.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAQH,MAA8B,sBAAsB;IAApD;QAwCE;;WAEG;QACI,gBAAW,GAA+B,IAAI,CAAC;IAMxD,CAAC;IArCC;;OAEG;IACI,MAAM,CAAC,kBAAkB,CAAC,IAAY,EAAE,GAAW;QACxD,IAAI,GAAG,GAAW,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QACpC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;YACxB,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC;SACrB;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,YAAY,CAAC,IAAY;QACrC,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,IAAI,GAAG,UAAU,CAAC;QACtB,IAAI,GAAG,GAAG,GAAG,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,IAAI,GAAG,IAAI,EAAE;gBACf,MAAM,IAAI,GAAG,CAAC;aACf;YACD,GAAG,IAAI,GAAG,CAAC;YACX,IAAI,KAAK,CAAC,CAAC;SACZ;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CAWF;AAjDD,yCAiDC","file":"ObnizPartsBleInterface.js","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore\n */\n\nimport BleRemotePeripheral from \"./libs/embeds/bleHci/bleRemotePeripheral\";\nexport interface ObnizPartsBleInfo {\n  name: string;\n  datasheet?: any;\n}\n\nexport default abstract class ObnizPartsBleInterface {\n  /**\n   * Information of parts.\n   * name: key name of parts\n   */\n  public static info: () => ObnizPartsBleInfo;\n\n  /**\n   * Check founded BleRemotePeripheral is kind of this parts or not\n   */\n  public static isDevice: (peripheral: BleRemotePeripheral) => boolean;\n\n  /**\n   * Utility function for reading 2 byte to signed number.\n   */\n  public static signed16FromBinary(high: number, low: number): number {\n    let val: number = (high << 8) | low;\n    if ((val & 0x8000) !== 0) {\n      val = val - 0x10000;\n    }\n    return val;\n  }\n\n  /**\n   * Utility function for reading 1byte fixed point number\n   */\n  public static readFraction(byte: number) {\n    let result = 0;\n    let mask = 0b10000000;\n    let num = 0.5;\n    for (let i = 0; i < 8; i++) {\n      if (byte & mask) {\n        result += num;\n      }\n      num /= 2.0;\n      mask >>= 1;\n    }\n    return result;\n  }\n\n  /**\n   * Internally Used function for connection required devices\n   */\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  /**\n   * ondisconnect callback function.\n   */\n  public ondisconnect?: (reason: any) => void;\n}\n"]}