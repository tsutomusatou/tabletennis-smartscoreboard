{"version":3,"sources":["../src/obniz/ObnizPartsBleInterface.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,mBAAmB,MAAM,0CAA0C,CAAC;AAC3E,MAAM,WAAW,iBAAiB;IAChC,IAAI,EAAE,MAAM,CAAC;IACb,SAAS,CAAC,EAAE,GAAG,CAAC;CACjB;AAED,MAAM,CAAC,OAAO,CAAC,QAAQ,OAAO,sBAAsB;IAClD;;;OAGG;IACH,OAAc,IAAI,EAAE,MAAM,iBAAiB,CAAC;IAE5C;;OAEG;IACH,OAAc,QAAQ,EAAE,CAAC,UAAU,EAAE,mBAAmB,KAAK,OAAO,CAAC;IAErE;;OAEG;WACW,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,GAAG,MAAM;IAQnE;;OAEG;WACW,YAAY,CAAC,IAAI,EAAE,MAAM;IAcvC;;OAEG;IACI,WAAW,EAAE,mBAAmB,GAAG,IAAI,CAAQ;IAEtD;;OAEG;IACI,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,KAAK,IAAI,CAAC;CAC7C","file":"ObnizPartsBleInterface.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore\n */\n\nimport BleRemotePeripheral from \"./libs/embeds/bleHci/bleRemotePeripheral\";\nexport interface ObnizPartsBleInfo {\n  name: string;\n  datasheet?: any;\n}\n\nexport default abstract class ObnizPartsBleInterface {\n  /**\n   * Information of parts.\n   * name: key name of parts\n   */\n  public static info: () => ObnizPartsBleInfo;\n\n  /**\n   * Check founded BleRemotePeripheral is kind of this parts or not\n   */\n  public static isDevice: (peripheral: BleRemotePeripheral) => boolean;\n\n  /**\n   * Utility function for reading 2 byte to signed number.\n   */\n  public static signed16FromBinary(high: number, low: number): number {\n    let val: number = (high << 8) | low;\n    if ((val & 0x8000) !== 0) {\n      val = val - 0x10000;\n    }\n    return val;\n  }\n\n  /**\n   * Utility function for reading 1byte fixed point number\n   */\n  public static readFraction(byte: number) {\n    let result = 0;\n    let mask = 0b10000000;\n    let num = 0.5;\n    for (let i = 0; i < 8; i++) {\n      if (byte & mask) {\n        result += num;\n      }\n      num /= 2.0;\n      mask >>= 1;\n    }\n    return result;\n  }\n\n  /**\n   * Internally Used function for connection required devices\n   */\n  public _peripheral: BleRemotePeripheral | null = null;\n\n  /**\n   * ondisconnect callback function.\n   */\n  public ondisconnect?: (reason: any) => void;\n}\n"]}