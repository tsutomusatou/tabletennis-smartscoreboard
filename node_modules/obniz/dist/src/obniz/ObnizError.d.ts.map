{"version":3,"sources":["../src/obniz/ObnizError.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAMH,qBAAa,UAAW,SAAQ,KAAK;IAChB,IAAI,EAAE,MAAM;gBAAZ,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM;CAK5C;AAED,qBAAa,iBAAkB,SAAQ,UAAU;;CAIhD;AAED,qBAAa,iBAAkB,SAAQ,UAAU;IAC5B,UAAU,CAAC;gBAAX,UAAU,CAAC,oBAAQ;CAGvC;AAED,qBAAa,aAAc,SAAQ,UAAU;;CAI5C;AAED,qBAAa,eAAgB,SAAQ,UAAU;;CAI9C;AAED,qBAAa,8BAA+B,SAAQ,UAAU;IACzC,cAAc,EAAE,MAAM;gBAAtB,cAAc,EAAE,MAAM;CAG1C;AAED,qBAAa,2BAA4B,SAAQ,UAAU;IACtC,cAAc,EAAE,MAAM;IAAS,WAAW,EAAE,MAAM;gBAAlD,cAAc,EAAE,MAAM,EAAS,WAAW,EAAE,MAAM;CAGtE;AAED,qBAAa,kCAAmC,SAAQ,UAAU;IAC7C,cAAc,EAAE,MAAM;IAAS,WAAW,EAAE,MAAM;IAAS,kBAAkB,EAAE,MAAM;gBAArF,cAAc,EAAE,MAAM,EAAS,WAAW,EAAE,MAAM,EAAS,kBAAkB,EAAE,MAAM;CAWzG;AAED,qBAAa,8BAA+B,SAAQ,UAAU;IAEnD,cAAc,EAAE,MAAM;IACtB,WAAW,EAAE,MAAM;IACnB,kBAAkB,EAAE,MAAM;IAC1B,cAAc,EAAE,MAAM;gBAHtB,cAAc,EAAE,MAAM,EACtB,WAAW,EAAE,MAAM,EACnB,kBAAkB,EAAE,MAAM,EAC1B,cAAc,EAAE,MAAM;CAchC;AAED,qBAAa,eAAgB,SAAQ,UAAU;;CAI9C;AAED,qBAAa,qBAAsB,SAAQ,UAAU;IA0EhC,KAAK,EAAE,MAAM;IAzEhC,OAAc,MAAM,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAA;KAAE,CAuE7C;gBAEiB,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,GAAG;CAO/C;AAGD,qBAAa,gBAAiB,SAAQ,UAAU;IAG3B,KAAK,EAAE,MAAM;IAFhC,OAAc,MAAM,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAA;KAAE,CAAM;gBAElC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,GAAG;CAG/C;AAED,qBAAa,4BAA6B,SAAQ,UAAU;IACvC,qBAAqB,EAAE,MAAM;gBAA7B,qBAAqB,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM;CAG1E;AAED,qBAAa,2BAA4B,SAAQ,UAAU;IACtC,OAAO,EAAE,MAAM;IAAS,UAAU,EAAE,MAAM;gBAA1C,OAAO,EAAE,MAAM,EAAS,UAAU,EAAE,MAAM;CAG9D;AAED,qBAAa,mBAAoB,SAAQ,UAAU;IAC9B,SAAS,EAAE,MAAM;IAAS,MAAM,EAAE,MAAM;gBAAxC,SAAS,EAAE,MAAM,EAAS,MAAM,EAAE,MAAM;CAG5D;AAED,qBAAa,iCAAkC,SAAQ,UAAU;IAC5C,QAAQ,EAAE,MAAM;IAAS,OAAO,EAAE,MAAM;gBAAxC,QAAQ,EAAE,MAAM,EAAS,OAAO,EAAE,MAAM;CAM5D;AAED,qBAAa,kCAAmC,SAAQ,UAAU;IAChE,OAAc,MAAM,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAA;KAAE,CAgB7C;gBAEU,MAAM,EAAE,MAAM;CAM3B","file":"ObnizError.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Errors\n */\n\n// tslint:disable:max-classes-per-file\n\nimport { deprecate } from \"util\";\n\nexport class ObnizError extends Error {\n  constructor(public code: number, e?: string) {\n    super(e);\n    this.name = new.target.name;\n    Object.setPrototypeOf(this, new.target.prototype); // for ES3, ES5\n  }\n}\n\nexport class ObnizOfflineError extends ObnizError {\n  constructor() {\n    super(1, \"obniz is not online.\");\n  }\n}\n\nexport class ObnizTimeoutError extends ObnizError {\n  constructor(public waitingFor?: string) {\n    super(2, \"Receive data timeout.\" + (waitingFor ? \" Waiting for \" + waitingFor : \"\"));\n  }\n}\n\nexport class ObnizI2cError extends ObnizError {\n  constructor() {\n    super(3, \"I2C error.\");\n  }\n}\n\nexport class ObnizI2cWarning extends ObnizError {\n  constructor() {\n    super(4, \"I2C error.\");\n  }\n}\n\nexport class ObnizBleUnknownPeripheralError extends ObnizError {\n  constructor(public peripheralUuid: string) {\n    super(5, \"unknown peripheral :\" + peripheralUuid);\n  }\n}\n\nexport class ObnizBleUnknownServiceError extends ObnizError {\n  constructor(public peripheralUuid: string, public serviceUuid: string) {\n    super(6, \"unknown service.  peripheral :\" + peripheralUuid + \" service :\" + serviceUuid);\n  }\n}\n\nexport class ObnizBleUnknownCharacteristicError extends ObnizError {\n  constructor(public peripheralUuid: string, public serviceUuid: string, public characteristicUuid: string) {\n    super(\n      7,\n      \"unknown characteristic.  peripheral :\" +\n        peripheralUuid +\n        \" service :\" +\n        serviceUuid +\n        \" characteristic :\" +\n        characteristicUuid,\n    );\n  }\n}\n\nexport class ObnizBleUnknownDescriptorError extends ObnizError {\n  constructor(\n    public peripheralUuid: string,\n    public serviceUuid: string,\n    public characteristicUuid: string,\n    public descriptorUuid: string,\n  ) {\n    super(\n      8,\n      \"unknown descriptor.  peripheral :\" +\n        peripheralUuid +\n        \" service :\" +\n        serviceUuid +\n        \" characteristic :\" +\n        characteristicUuid +\n        \" descriptor :\" +\n        descriptorUuid,\n    );\n  }\n}\n\nexport class ObnizBleOpError extends ObnizError {\n  constructor() {\n    super(9, \"BLE operation error\");\n  }\n}\n\nexport class ObnizBleHciStateError extends ObnizError {\n  public static Errors: { [key: number]: string } = {\n    0x00: \"Success\",\n    0x01: \"Unknown HCI Command\",\n    0x02: \"Unknown Connection Identifier \",\n    0x03: \"Hardware Failure \",\n    0x04: \"Page Timeout \",\n    0x05: \"Authentication Failure \",\n    0x06: \"PIN or Key Missing \",\n    0x07: \"Memory Capacity Exceeded \",\n    0x08: \"Connection Timeout \",\n    0x09: \"Connection Limit Exceeded \",\n    0x0a: \"Synchronous Connection Limit To A Device Exceeded \",\n    0x0b: \"Connection Already Exists \",\n    0x0c: \"Command Disallowed \",\n    0x0d: \"Connection Rejected due to Limited Resources \",\n    0x0e: \"Connection Rejected Due To Security Reasons \",\n    0x0f: \"Connection Rejected due to Unacceptable BD_ADDR \",\n    0x10: \"Connection Accept Timeout Exceeded \",\n    0x11: \"Unsupported Feature or Parameter Value \",\n    0x12: \"Invalid HCI Command Parameters \",\n    0x13: \"Remote User Terminated Connection \",\n    0x14: \"Remote Device Terminated Connection due to Low Resources \",\n    0x15: \"Remote Device Terminated Connection due to Power Off \",\n    0x16: \"Connection Terminated By Local Host \",\n    0x17: \"Repeated Attempts \",\n    0x18: \"Pairing Not Allowed \",\n    0x19: \"Unknown LMP PDU \",\n    0x1a: \"Unsupported Remote Feature / Unsupported LMP Feature \",\n    0x1b: \"SCO Offset Rejected \",\n    0x1c: \"SCO Interval Rejected \",\n    0x1d: \"SCO Air Mode Rejected \",\n    0x1e: \"Invalid LMP Parameters / Invalid LL Parameters \",\n    0x1f: \"Unspecified Error \",\n    0x20: \"Unsupported LMP Parameter Value / Unsupported LL Parameter Value \",\n    0x21: \"Role Change Not Allowed \",\n    0x22: \"LMP Response Timeout / LL Response Timeout \",\n    0x23: \"LMP Error Transaction Collision / LL Procedure Collision \",\n    0x24: \"LMP PDU Not Allowed \",\n    0x25: \"Encryption Mode Not Acceptable \",\n    0x26: \"Link Key cannot be Changed \",\n    0x27: \"Requested QoS Not Supported \",\n    0x28: \"Instant Passed \",\n    0x29: \"Pairing With Unit Key Not Supported \",\n    0x2a: \"Different Transaction Collision \",\n    0x2b: \"Reserved for future use \",\n    0x2c: \"QoS Unacceptable Parameter \",\n    0x2d: \"QoS Rejected \",\n    0x2e: \"Channel Classification Not Supported \",\n    0x2f: \"Insufficient Security \",\n    0x30: \"Parameter Out Of Mandatory Range \",\n    0x31: \"Reserved for future use \",\n    0x32: \"Role Switch Pending \",\n    0x33: \"Reserved for future use \",\n    0x34: \"Reserved Slot Violation \",\n    0x35: \"Role Switch Failed \",\n    0x36: \"Extended Inquiry Response Too Large \",\n    0x37: \"Secure Simple Pairing Not Supported By Host \",\n    0x38: \"Host Busy - Pairing \",\n    0x39: \"Connection Rejected due to No Suitable Channel Found \",\n    0x3a: \"Controller Busy \",\n    0x3b: \"Unacceptable Connection Parameters \",\n    0x3c: \"Advertising Timeout \",\n    0x3d: \"Connection Terminated due to MIC Failure \",\n    0x3e: \"Connection Failed to be Established / Synchronization Timeout \",\n    0x3f: \"MAC Connection Failed \",\n    0x40: \"Coarse Clock Adjustment Rejected but Will Try to Adjust Using Clock Dragging \",\n    0x41: \"Type0 Submap Not Defined \",\n    0x42: \"Unknown Advertising Identifier \",\n    0x43: \"Limit Reached \",\n    0x44: \"Operation Cancelled by Host \",\n    0x45: \"Packet Too Long \",\n  };\n\n  constructor(public state: number, params?: any) {\n    super(\n      10,\n      (ObnizBleHciStateError.Errors[state] ? ObnizBleHciStateError.Errors[state] : \"Ble Hci state Error\") +\n        (params ? ` ${JSON.stringify(params)}` : \"\"),\n    );\n  }\n}\n\n// todo error code to message\nexport class ObnizBleAttError extends ObnizError {\n  public static Errors: { [key: number]: string } = {};\n\n  constructor(public state: number, params?: any) {\n    super(11, `ATT Error: ${params}`);\n  }\n}\n\nexport class ObnizDeprecatedFunctionError extends ObnizError {\n  constructor(public deprecateFunctionName: string, replaceFunction: string) {\n    super(12, `${deprecateFunctionName} is deprecated function, please use ${replaceFunction}`);\n  }\n}\n\nexport class ObnizBleUnsupportedHciError extends ObnizError {\n  constructor(public needVer: number, public currentVer: number) {\n    super(13, `Unsupported hci version, need version : ${needVer}, current version ${currentVer}`);\n  }\n}\n\nexport class ObnizParameterError extends ObnizError {\n  constructor(public parameter: string, public should: string) {\n    super(14, `Parameter ${parameter} should satisfy ${should}`);\n  }\n}\n\nexport class ObnizBleUnSupportedOSVersionError extends ObnizError {\n  constructor(public deviceOS: string, public atLeast: string) {\n    super(\n      15,\n      `Connected Device has OS=${deviceOS}. But This SDK Support at least ${atLeast} or above. Upgrade Your OS or Downgrade your SDK to use this function`,\n    );\n  }\n}\n\nexport class ObnizBlePairingRejectByRemoteError extends ObnizError {\n  public static Errors: { [key: number]: string } = {\n    0x00: \"Unknown\",\n    0x01: \"Passkey Entry Failed\",\n    0x02: \"OOB Not Available\",\n    0x03: \"Authentication Requirements\",\n    0x04: \"Confirm Value Failed\",\n    0x05: \"Pairing Not Supported\",\n    0x06: \"Encryption Key Size\",\n    0x07: \"Command Not Supported\",\n    0x08: \"Unspecified Reason\",\n    0x09: \"Repeated Attempts\",\n    0x0a: \"Invalid Parameters\",\n    0x0b: \"DHKey Check Failed\",\n    0x0c: \"Numeric Comparison Failed\",\n    0x0d: \"BR/EDR pairing in progress\",\n    0x0e: \"Cross-transport Key Deriva- tion/Generation not allowed\",\n  };\n\n  constructor(reason: number) {\n    super(\n      16,\n      `pairing sequence reject by remote peripheral. reason : ${ObnizBlePairingRejectByRemoteError.Errors[reason]}`,\n    );\n  }\n}\n"]}